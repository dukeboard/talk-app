{"version":3,"sources":["vs/base/common/worker/fake","vs/base/common/worker/simpleWorker.js","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/arrays.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/diff/diffChange.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/diff/diff.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/map.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/platform.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/strings.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/filters.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/types.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/lifecycle.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/objects.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/uri.ts","vs/base/common/worker/vs/base/common/winjs.base.raw.js","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/core/position.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/core/range.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/core/selection.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/diff/diffComputer.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/model/wordHelper.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/modes/linkComputer.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/modes/supports/inplaceReplaceSupport.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/model/mirrorModel2.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/errors.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/callbackList.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/event.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/cancellation.ts","vs/base/common/worker/vs/base/common/winjs.base.js","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/async.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/worker/simpleWorker.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/keyCodes.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/base/common/severity.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/standalone/standaloneBase.ts","vs/base/common/worker/file:/C:/Alex/src/vscode/src/vs/editor/common/services/editorSimpleWorker.ts"],"names":["__m","__M","deps","result","i","len","length","define","require","exports","tail","array","n","forEach","callback","splice","equals","one","other","itemEquals","a","b","binarySearch","key","comparator","low","high","mid","comp","findFirst","p","Math","floor","top","compare","slice","sort","_loop_1","m","element","pop","j","e","merge","arrays","hashFn","Array","map","hash","hasOwnProperty","push","apply","coalesce","filter","contains","item","indexOf","swap","pos1","pos2","element1","element2","move","from","to","isFalsyOrEmpty","obj","isArray","distinct","keyFn","position","seen","Object","create","elem","uniqueFilter","firstIndex","fn","first","notFoundValue","index","commonPrefixLength","min","flatten","arr","reduce","r","v","concat","range","fill","num","valueFn","indexer","merger","t","insert","DifferenceType","Add","Remove","Change","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","this","prototype","getChangeType","getOriginalEnd","getModifiedEnd","diffChange_1","createStringSequence","getLength","getElementHash","pos","stringDiff","original","modified","LcsDiff","ComputeDiff","Debug","Assert","condition","message","Error","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","MaxDifferencesHistory","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_originalIds","m_modifiedIds","m_forwardHistory","m_reverseHistory","ComputeUniqueIdentifiers","originalSequenceLength","modifiedSequenceLength","hashTable","currentUniqueId","originalElementHash","modifiedElementHash","ElementsAreEqual","newIndex","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","changes","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","diagonal","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","max","numDifferences","maxDifferences","numDiagonals","delta","tempOriginalIndex","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","left","right","mergedChangeArr","ChangesOverlap","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","__extends","d","__","constructor","LinkedMap","_size","defineProperty","get","enumerable","configurable","k","value","peek","getOrSet","res","set","keys","values","entries","has","clear","entry","toString","BoundedLinkedMap","limit","ratio","trim","next","prev","head","current","LRUCache","_super","call","hasWebWorkerSupport","_globals","Worker","_isWindows","_isMacintosh","_isLinux","_isRootUser","_isNative","_isWeb","_isQunit","_locale","undefined","_language","LANGUAGE_DEFAULT","process","platform","getuid","rawNlsConfig","env","nlsConfig","JSON","parse","resolved","availableLanguages","locale","navigator","userAgent","language","self","QUnit","Platform","_platform","Web","Mac","Windows","Linux","isWindows","isMacintosh","isLinux","isRootUser","isNative","isWeb","isQunit","global","globals","setTimeout","bind","clearTimeout","setInterval","clearInterval","map_1","pad","l","char","str","join","format","args","_i","arguments","replace","_formatRegexp","match","group","idx","parseInt","isNaN","escape","html","escapeRegExpCharacters","haystack","needle","trimmed","ltrim","rtrim","needleLen","offset","substring","haystackLen","lastIndexOf","convertSimple2RegExpPattern","pattern","stripWildcards","startsWith","endsWith","diff","createRegExp","searchString","isRegex","matchCase","wholeWord","test","charAt","modifiers","RegExp","regExpLeadsToEndlessLoop","regexp","source","exec","lastIndex","normalizeNFC","canNormalize","cached","normalizedCache","nonAsciiCharactersPattern","normalize","firstNonWhitespaceIndex","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","isAsciiChar","code","equalsIgnoreCase","len1","len2","codeA","charCodeAt","codeB","String","fromCharCode","toLocaleLowerCase","commonSuffixLength","aLastIndex","bLastIndex","isFullWidthCharacter","charCode","difference","second","maxLenDelta","lengthDifference","LCS","zeroArray","sqrt","computeLineStarts","text","ret","lcut","segments","split","count","empty","removeAnsiEscapeCodes","EL","LF","COLOR_START","COLOR_END","startsWithUTF8BOM","__utf8_bom","appendWithLimit","maxLength","newLength","substr","safeBtoa","btoa","encodeURIComponent","repeat","s","UTF8_BOM_CHARACTER","strings","or","word","wordToMatchAgainst","and","_matchesPrefix","ignoreCase","toLowerCase","start","end","matchesContiguousSubString","matchesSubString","_matchesSubString","isLower","isUpper","isNumber","isWhitespace","isAlphanumeric","unshift","nextAnchor","camelCaseWord","c","_matchesCamelCase","nextUpperIndex","isCamelCaseWord","upper","lower","alpha","numeric","upperPercent","lowerPercent","alphaPercent","numericPercent","isCamelCasePattern","whitespace","matchesCamelCase","matchesWords","target","_matchesWords","nextWord","nextWordIndex","matchesFuzzy","enableSeparateSubstringMatching","fuzzyRegExpCache","fuzzySeparateFilter","fuzzyContiguousFilter","matchesStrictPrefix","matchesPrefix","SubstringMatching","_typeof","number","isString","string","isStringArray","every","isObject","object","Date","isBoolean","isUndefined","isUndefinedOrNull","isEmptyObject","isFunction","areFunctions","objects","validateConstraints","constraints","validateConstraint","arg","constraint","ctor","function","types_1","dispose","disposables","combinedDisposable","toDisposable","fns","freeze","Disposable","_toDispose","_register","Disposables","add","arg_1","Types","clone","deepClone","getOwnPropertyNames","cloneAndChange","changer","_cloneAndChange","encounteredObjects","changed","r1","i1","r2","i2","mixin","destination","overwrite","assign","sources","toObject","keyMap","valueMap","x","o","_a","oneKeys","otherKeys","ensureProperty","property","defaultValue","arrayToHash","createKeywordMatcher","caseInsensitive","derive","baseClass","derivedClass","prop","basePrototype","derivedPrototype","getOwnPropertyDescriptor","writable","safeStringify","stringify","getOrDefault","_encode","ch","toUpperCase","encodeURIComponent2","encodeNoop","URI","_scheme","_empty","_authority","_path","_query","_fragment","_formatted","_fsPath","isUri","thing","authority","fragment","path","query","scheme","_driveLetterPath","change","_validate","data","_parseComponents","decodeURIComponent","file","_slash","_regexp","components","_schemePattern","_singleSlashStart","_doubleSlashStart","skipEncoding","_asFormatted","uri","encoder","parts","_upperCaseDrive","lastIdx","toJSON","fsPath","external","$mid","revive","_modules","_winjs","moduleId","factory","exportsPassedIn","depsValues","dep","globalObject","window","_Global","markSupportedForProcessing","func","supportedForProcessing","hasWinRT","_setImmediate","setImmediate","handler","msWriteProfilerMark","_WinJS","_BaseCoreUtils","_WriteProfilerMark","initializeProperties","members","prefix","properties","member","setName","defineProperties","createNamespace","parentNamespace","name","currentNamespace","namespaceFragments","namespaceName","defineWithParent","lazy","f","state","LazyStates","uninitialized","initialized","working","moduleDefine","publicNS","_rootNamespace","Namespace","_lazy","_moduleDefine","instanceMembers","staticMembers","mix","Class","_Base","ErrorFromName","createEventProperty","eventPropStateName","userHandler","wrapper","evt","addEventListener","removeEventListener","createEventProperties","props","EventMixinEvent","type","detail","timeStamp","now","bubbles","cancelable","currentTarget","defaultPrevented","_preventDefaultCalled","trusted","eventPhase","preventDefault","stopImmediatePropagation","_stopImmediatePropagationCalled","stopPropagation","eventMixin","_listeners","listener","useCapture","eventListeners","dispatchEvent","details","listeners","eventValue","_createEventProperty","nop","_traceAsyncOperationStarting","msTraceAsyncOperationStarting","_traceAsyncOperationCompleted","msTraceAsyncOperationCompleted","_traceAsyncCallbackStarting","msTraceAsyncCallbackStarting","_traceAsyncCallbackCompleted","msTraceAsyncCallbackCompleted","_ErrorFromName","_Events","_Trace","_","completed","promise","targetState","then","state_waiting","state_success_notify","_value","_setState","createErrorDetails","exception","error","id","parent","detailsForHandledError","errorValue","context","_isException","errorId","_errorId","detailsForChainedError","setErrorInfo","detailsForError","error_number","detailsForException","exceptionValue","done","onComplete","onError","onProgress","asyncOpID","pushListener","onerrorDetails","callonerror","state_error_notify","notifySuccess","queue","MS_ASYNC_OP_STATUS_SUCCESS","_setCompleteValue","ex","_setExceptionValue","_state","CompletePromise","notifyError","errorID","canceledName","MS_ASYNC_OP_STATUS_CANCELED","MS_ASYNC_OP_STATUS_ERROR","asyncCallbackStarted","handlesOnError","_setChainedErrorValue","ErrorPromise","onerrorDetailsGenerator","promiseEventListeners","errorET","progress","_progress","isException","setErrorValue","state_error","setCompleteValue","state_success","ThenPromise","timeout","timeoutMS","Promise","timeoutWithPromise","cancelPromise","cancel","cancelTimeout","setNonUserCodeExceptions","ListenerType","tagWithStack","tag","thenPromise","errorPromise","exceptionPromise","completePromise","all","state_created","state_working","state_waiting_canceled","state_canceled","state_canceling","enter","_completed","_error","_notify","_setErrorValue","waitedUpon","_chainedError","_cancelAction","shift","_cleanupAction","staticCanceledPromise","PromiseStateMachine","_nextState","_run","creator","_stack","_getStack","_creator","unused","_doneHandler","ExceptionPromise","newValue","init","oncancel","_oncancel","complete","stack","eventType","capture","any","canceled","as","is","errors","results","undefineds","pending","argDone","errorCount","canceledCount","Key","Done","thenEach","time","wrap","wrapError","_veryExpensiveTagWithStack","_veryExpensiveTagWithStack_tag","debuggerEnabled","_cancelBlocker","input","output","_StateMachine","exported","amd","module","nextTick","Position","lineNumber","column","isBefore","isBeforeOrEqual","lift","isIPosition","position_1","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","containsPosition","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","cloneRange","setEndPosition","setStartPosition","collapseToStart","isIRange","areIntersectingOrTouching","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","compareRangesUsingEnds","spansMultipleLines","range_1","SelectionDirection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","LTR","RTL","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","diff_1","computeDiff","modifiedSequence","diffAlgo","postProcessCharChanges","rawChanges","originalMatchingLength","modifiedMatchingLength","matchingLength","currChange","prevChange","MINIMUM_MATCHING_CHARACTER_LENGTH","MAXIMUM_RUN_TIME","MarkerSequence","buffer","startMarkers","endMarkers","otherMarkerSequence","myElement","otherElement","getStartLineNumber","getStartColumn","getEndLineNumber","getEndColumn","LineMarkerSequence","lines","shouldIgnoreTrimWhitespace","_getFirstNonBlankColumn","_getLastNonBlankColumn","txt","getCharSequence","endIndex","startMarker","endMarker","CharChange","diffChange","originalCharSequence","modifiedCharSequence","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","LineChange","originalLineSequence","modifiedLineSequence","shouldPostProcessCharChanges","charChanges","DiffComputer","originalLines","modifiedLines","opts","maximumRunTimeMs","shouldConsiderTrimWhitespaceInEmptyCase","computationStartTime","getTime","_continueProcessingPredicate","lineChanges","createWordRegExp","allowInWords","usualSeparators","USUAL_WORD_SEPARATORS","ensureValidWordDefinition","wordDefinition","DEFAULT_WORD_REGEXP","flags","multiline","getWordAtText","textOffset","startWord","endWord","words","computeLinks","model","getLineCount","getLineContent","LinkComputer","STATE_MAP","START_STATE","END_STATE","ACCEPT_STATE","h","H","F","T","P","S",":","I","L","E","/","CharacterClass","_openParens","_closeParens","_openSquareBracket","_closeSquareBracket","_openCurlyBracket","_closeCurlyBracket","CharacterClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","_asciiMap","None","_map","_set","ForceTermination","CannotEndIn","charClass","classify","characterClassifier","_createLink","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","chCode","chClass","url","lineCount","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","PrefixSumIndexOfResult","remainder","PrefixSumComputer","prefixSum","prefixSumValidIndex","getCount","insertValue","insertIndex","insertValues","_zeroArray","changeValue","removeValues","cnt","getTotalValue","getAccumulatedValue","getIndexOf","accumulatedValue","midStop","midStart","prefixSumComputer_1","MirrorModel2","eol","versionId","_uri","_lines","_eol","_versionId","getText","onEvents","events","newEOL","_lineStarts","lastVersionId","_acceptDeleteRange","_acceptInsertText","_ensureLineStarts","lineStartValues","eolLength","_setLineText","lineIndex","insertText","insertLines","newLengths","nls","types","setUnexpectedErrorHandler","newUnexpectedErrorHandler","errorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedPromiseError","transformErrorForSerialization","name_1","stacktrace","$isError","xhrToErrorMessage","xhr","verbose","ce","ConnectionError","verboseMessage","exceptionToErrorMessage","localize","detectSystemErrorMessage","errno","syscall","toErrorMessage","msg","status","notImplemented","illegalArgument","illegalState","readonly","loaderError","err","options","severity","actions","ErrorHandler","unexpectedErrorHandler","addListener","_this","_removeListener","emit","getUnexpectedErrorHandler","statusText","responseText","errorMessage","errorCode","errorObject","errorObj","connectionErrorToMessage","connectionErrorDetailsToMessage","errors_1","CallbackList","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","invoke","callbacks","contexts","callbackList_1","fromEventEmitter","emitter","thisArgs","addListener2","fromPromise","toCancel","Emitter","onFirstListenerAdd","event","fire","onLastListenerRemove","once","mapEvent","filterEvent","debounceEvent","delay","subscription","handle","cur","_output","Event","_disposable","_options","_event","_noop","_disposed","EventDelayerState","EventBufferer","buffers","wrapEvent","bufferEvents","flush","event_1","CancellationToken","shortcutEvent","isCancellationRequested","onCancellationRequested","Cancelled","MutableToken","_isCancelled","_emitter","CancellationTokenSource","_token","winjs","__Errors__","promiseErrorHandler","outstandingPromiseErrors","console","log","TPromise","PPromise","winjs_base_1","cancellation_1","lifecycle_1","isThenable","toThenable","asWinJsPromise","resolve","reject","token","wireCancellationToken","resolveAsUndefinedWhenCancelled","always","e1","sequence","promiseFactory","thenHandler","didCall","nfcall","ninvoke","thisArg","Throttler","activePromise","queuedPromise","queuedPromiseFactory","onComplete_1","SimpleThrottler","promiseTask","Delayer","defaultDelay","completionPromise","onSuccess","task","trigger","isTriggered","ThrottledDelayer","throttler","PeriodThrottledDelayer","minimumPeriod","periodThrottler","PromiseSource","_completeCallback","_errorCallback","ShallowCancelThenPromise","outer","completeCallback","errorCallback","progressCallback","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","consume","iLimitedTask","consumed","TimeoutTimer","cancelAndSet","runner","setIfNotSet","IntervalTimer","interval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","setRunner","schedule","async_1","postMessage","SimpleWorkerServer","INITIALIZE","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","req","reply","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","seq","replyMessage","warn","requestMessage","strMsg","SimpleWorkerClient","workerFactory","_lastRequestTimestamp","lazyProxyFulfill","lazyProxyReject","_worker","_protocol","getId","loaderConfiguration","globalRequire","getConfig","requirejs","config","_lazyProxy","_onModuleLoaded","availableMethods","proxy","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","getLastRequestTimestamp","info","postSerializedMessage","onmessage","initialize","_requestHandler","loaderConfig","baseUrl","paths","vs","nlsConfig_1","pseudo","nlsPlugin","setPseudoTranslation","catchError","cc","ee","handlerModule","methods","defaultPlatform","createMapping","fill1","fill2","MAP","REVERSE_MAP","FINAL_REVERSE_MAP","Mapping","_asString","keybinding","labelProvider","ctrlCmd","BinaryKeybindings","hasCtrlCmd","hasShift","alt","hasAlt","winCtrl","hasWinCtrl","keyCode","extractKeyCode","keyLabel","getLabelForKey","ctrlKeyLabel","shiftKeyLabel","altKeyLabel","cmdKeyLabel","windowsKeyLabel","actualResult","modifierSeparator","hasChord","extractChordPart","_pushKey","tagName","className","_asHTML","isChord","chordTo","children","KeyCode","fromKeyCode","toKeyCode","_fromKeyCode","_toKeyCode","Unknown","STRING","TO_STRING_MAP","Backspace","Tab","Enter","Shift","Ctrl","Alt","PauseBreak","CapsLock","Escape","Space","PageUp","PageDown","End","Home","LeftArrow","UpArrow","RightArrow","DownArrow","Insert","Delete","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_C","KEY_D","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_T","KEY_U","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","ContextMenu","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","NumLock","ScrollLock","US_SEMICOLON","US_EQUAL","US_COMMA","US_MINUS","US_DOT","US_SLASH","US_BACKTICK","US_OPEN_SQUARE_BRACKET","US_BACKSLASH","US_CLOSE_SQUARE_BRACKET","US_QUOTE","OEM_8","OEM_102","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_SEPARATOR","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","FROM_STRING_MAP","USER_SETTINGS","TO_USER_SETTINGS_MAP","FROM_USER_SETTINGS_MAP","fromString","BIN_CTRLCMD_MASK","BIN_SHIFT_MASK","BIN_ALT_MASK","BIN_WINCTRL_MASK","BIN_KEYCODE_MASK","extractFirstPart","KeyMod","chord","firstPart","secondPart","CtrlCmd","WinCtrl","CommonKeybindings","ENTER","SHIFT_ENTER","CTRLCMD_ENTER","WINCTRL_ENTER","TAB","SHIFT_TAB","ESCAPE","SPACE","DELETE","SHIFT_DELETE","CTRLCMD_BACKSPACE","UP_ARROW","SHIFT_UP_ARROW","CTRLCMD_UP_ARROW","DOWN_ARROW","SHIFT_DOWN_ARROW","CTRLCMD_DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","HOME","END","PAGE_UP","SHIFT_PAGE_UP","PAGE_DOWN","SHIFT_PAGE_DOWN","CTRLCMD_S","CTRLCMD_C","CTRLCMD_V","Keybinding","_toUSLabel","MacUIKeyLabelProvider","ClassicUIKeyLabelProvider","_toUSAriaLabel","AriaKeyLabelProvider","_toUSHTMLLabel","_toCustomLabel","_toCustomHTMLLabel","_toElectronAccelerator","ElectronAcceleratorLabelProvider","getUserSettingsKeybindingRegex","_cachedKeybindingRegex","numpadKey","oemKey","specialKey","casualKey","mod","toUserSettingsLabel","UserSettingsKeyLabelProvider","fromUserSettingsLabel","firstSpaceIdx","toCustomLabel","toCustomHTMLLabel","leftArrowUnicodeLabel","upArrowUnicodeLabel","rightArrowUnicodeLabel","downArrowUnicodeLabel","Severity","fromValue","_warning","_warn","Warning","_info","Info","Ignore","_displayStrings","keyCodes_1","selection_1","severity_1","uri_1","createMonacoBaseAPI","editor","languages","Uri","filters_1","diffComputer_1","mirrorModel2_1","linkComputer_1","inplaceReplaceSupport_1","wordHelper_1","standaloneBase_1","EditorSimpleWorkerImpl","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","_getAllWords","_wordenize","getAllUniqueWords","skipWordOnce","foundSkipWord","uniqueWords","content","getValueInRange","lineEnding","startLineIndex","endLineIndex","resultLines","BaseEditorSimpleWorker","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","diffComputer","computeDirtyDiff","modelUrl","textualSuggest","wordDef","wordDefFlags","_suggestFiltered","wordDefRegExp","_suggestUnfiltered","currentWord","suggestions","label","incomplete","allWords","noAutoAccept","selectionText","wordRange","loadForeignModule","createData","foreignModule","ctx","getMirrorModels","_getModels","fmr","_models","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","isWebWorker","importScripts","monaco"],"mappings":"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","file":"vs/base/common/worker/simpleWorker.js","sourcesContent":["}).call(this);","/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.6.1(8f43cf5d0d3d233c9ba1c9085f2bb529f834c841)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n(function() {\nvar __m = [\"exports\",\"require\",\"vs/base/common/winjs.base\",\"vs/base/common/platform\",\"vs/base/common/strings\",\"vs/base/common/errors\",\"vs/base/common/types\",\"vs/editor/common/core/range\",\"vs/base/common/map\",\"vs/editor/common/core/position\",\"vs/base/common/lifecycle\",\"vs/nls\",\"vs/nls!vs/base/common/worker/simpleWorker\",\"vs/base/common/uri\",\"vs/base/common/event\",\"vs/base/common/cancellation\",\"vs/editor/common/modes/supports/inplaceReplaceSupport\",\"vs/editor/common/model/wordHelper\",\"vs/editor/common/modes/linkComputer\",\"vs/base/common/diff/diffChange\",\"vs/editor/common/viewModel/prefixSumComputer\",\"vs/editor/common/model/mirrorModel2\",\"vs/nls!vs/base/common/errors\",\"vs/base/common/objects\",\"vs/base/common/diff/diff\",\"vs/base/common/filters\",\"vs/base/common/callbackList\",\"vs/base/common/arrays\",\"vs/editor/common/core/selection\",\"vs/editor/common/diff/diffComputer\",\"vs/editor/common/standalone/standaloneBase\",\"vs/base/common/async\",\"vs/base/common/severity\",\"vs/nls!vs/base/common/keyCodes\",\"vs/base/common/keyCodes\",\"vs/nls!vs/base/common/severity\",\"vs/base/common/worker/simpleWorker\",\"vs/base/common/winjs.base.raw\",\"vs/editor/common/services/editorSimpleWorker\"];\nvar __M = function(deps) {\n  var result = [];\n  for (var i = 0, len = deps.length; i < len; i++) {\n    result[i] = __m[deps[i]];\n  }\n  return result;\n};\ndefine(__m[27], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * Returns the last element of an array.\n     * @param array The array.\n     * @param n Which element from the end (default ist zero).\n     */\n    function tail(array, n) {\n        if (n === void 0) { n = 0; }\n        return array[array.length - (1 + n)];\n    }\n    exports.tail = tail;\n    /**\n     * Iterates the provided array and allows to remove\n     * elements while iterating.\n     */\n    function forEach(array, callback) {\n        for (var i = 0, len = array.length; i < len; i++) {\n            callback(array[i], function () {\n                array.splice(i, 1);\n                i--;\n                len--;\n            });\n        }\n    }\n    exports.forEach = forEach;\n    function equals(one, other, itemEquals) {\n        if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (var i = 0, len = one.length; i < len; i++) {\n            if (!itemEquals(one[i], other[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.equals = equals;\n    function binarySearch(array, key, comparator) {\n        var low = 0, high = array.length - 1;\n        while (low <= high) {\n            var mid = ((low + high) / 2) | 0;\n            var comp = comparator(array[mid], key);\n            if (comp < 0) {\n                low = mid + 1;\n            }\n            else if (comp > 0) {\n                high = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -(low + 1);\n    }\n    exports.binarySearch = binarySearch;\n    /**\n     * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n     * are located before all elements where p(x) is true.\n     * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n     */\n    function findFirst(array, p) {\n        var low = 0, high = array.length;\n        if (high === 0) {\n            return 0; // no children\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (p(array[mid])) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    exports.findFirst = findFirst;\n    /**\n     * Returns the top N elements from the array.\n     *\n     * Faster than sorting the entire array when the array is a lot larger than N.\n     *\n     * @param array The unsorted array.\n     * @param compare A sort function for the elements.\n     * @param n The number of elements to return.\n     * @return The first n elemnts from array when sorted with compare.\n     */\n    function top(array, compare, n) {\n        if (n === 0) {\n            return [];\n        }\n        var result = array.slice(0, n).sort(compare);\n        var _loop_1 = function(i, m) {\n            var element = array[i];\n            if (compare(element, result[n - 1]) < 0) {\n                result.pop();\n                var j = findFirst(result, function (e) { return compare(element, e) < 0; });\n                result.splice(j, 0, element);\n            }\n        };\n        for (var i = n, m = array.length; i < m; i++) {\n            _loop_1(i, m);\n        }\n        return result;\n    }\n    exports.top = top;\n    function merge(arrays, hashFn) {\n        var result = new Array();\n        if (!hashFn) {\n            for (var i = 0, len = arrays.length; i < len; i++) {\n                result.push.apply(result, arrays[i]);\n            }\n        }\n        else {\n            var map = {};\n            for (var i = 0; i < arrays.length; i++) {\n                for (var j = 0; j < arrays[i].length; j++) {\n                    var element = arrays[i][j], hash = hashFn(element);\n                    if (!map.hasOwnProperty(hash)) {\n                        map[hash] = true;\n                        result.push(element);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    exports.merge = merge;\n    /**\n     * @returns a new array with all undefined or null values removed. The original array is not modified at all.\n     */\n    function coalesce(array) {\n        if (!array) {\n            return array;\n        }\n        return array.filter(function (e) { return !!e; });\n    }\n    exports.coalesce = coalesce;\n    /**\n     * @returns true if the given item is contained in the array.\n     */\n    function contains(array, item) {\n        return array.indexOf(item) >= 0;\n    }\n    exports.contains = contains;\n    /**\n     * Swaps the elements in the array for the provided positions.\n     */\n    function swap(array, pos1, pos2) {\n        var element1 = array[pos1];\n        var element2 = array[pos2];\n        array[pos1] = element2;\n        array[pos2] = element1;\n    }\n    exports.swap = swap;\n    /**\n     * Moves the element in the array for the provided positions.\n     */\n    function move(array, from, to) {\n        array.splice(to, 0, array.splice(from, 1)[0]);\n    }\n    exports.move = move;\n    /**\n     * @returns {{false}} if the provided object is an array\n     * \tand not empty.\n     */\n    function isFalsyOrEmpty(obj) {\n        return !Array.isArray(obj) || obj.length === 0;\n    }\n    exports.isFalsyOrEmpty = isFalsyOrEmpty;\n    /**\n     * Removes duplicates from the given array. The optional keyFn allows to specify\n     * how elements are checked for equalness by returning a unique string for each.\n     */\n    function distinct(array, keyFn) {\n        if (!keyFn) {\n            return array.filter(function (element, position) {\n                return array.indexOf(element) === position;\n            });\n        }\n        var seen = Object.create(null);\n        return array.filter(function (elem) {\n            var key = keyFn(elem);\n            if (seen[key]) {\n                return false;\n            }\n            seen[key] = true;\n            return true;\n        });\n    }\n    exports.distinct = distinct;\n    function uniqueFilter(keyFn) {\n        var seen = Object.create(null);\n        return function (element) {\n            var key = keyFn(element);\n            if (seen[key]) {\n                return false;\n            }\n            seen[key] = true;\n            return true;\n        };\n    }\n    exports.uniqueFilter = uniqueFilter;\n    function firstIndex(array, fn) {\n        for (var i = 0; i < array.length; i++) {\n            var element = array[i];\n            if (fn(element)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    exports.firstIndex = firstIndex;\n    function first(array, fn, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = null; }\n        var index = firstIndex(array, fn);\n        return index < 0 ? notFoundValue : array[index];\n    }\n    exports.first = first;\n    function commonPrefixLength(one, other, equals) {\n        if (equals === void 0) { equals = function (a, b) { return a === b; }; }\n        var result = 0;\n        for (var i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n            result++;\n        }\n        return result;\n    }\n    exports.commonPrefixLength = commonPrefixLength;\n    function flatten(arr) {\n        return arr.reduce(function (r, v) { return r.concat(v); }, []);\n    }\n    exports.flatten = flatten;\n    function range(to, from) {\n        if (from === void 0) { from = 0; }\n        var result = [];\n        for (var i = from; i < to; i++) {\n            result.push(i);\n        }\n        return result;\n    }\n    exports.range = range;\n    function fill(num, valueFn, arr) {\n        if (arr === void 0) { arr = []; }\n        for (var i = 0; i < num; i++) {\n            arr[i] = valueFn();\n        }\n        return arr;\n    }\n    exports.fill = fill;\n    function index(array, indexer, merger) {\n        if (merger === void 0) { merger = function (t) { return t; }; }\n        return array.reduce(function (r, t) {\n            var key = indexer(t);\n            r[key] = merger(t, r[key]);\n            return r;\n        }, Object.create(null));\n    }\n    exports.index = index;\n    /**\n     * Inserts an element into an array. Returns a function which, when\n     * called, will remove that element from the array.\n     */\n    function insert(array, element) {\n        array.push(element);\n        return function () {\n            var index = array.indexOf(element);\n            if (index > -1) {\n                array.splice(index, 1);\n            }\n        };\n    }\n    exports.insert = insert;\n});\n\ndefine(__m[19], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.DifferenceType = {\n        Add: 0,\n        Remove: 1,\n        Change: 2\n    };\n    /**\n     * Represents information about a specific difference between two sequences.\n     */\n    var DiffChange = (function () {\n        /**\n         * Constructs a new DiffChange with the given sequence information\n         * and content.\n         */\n        function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n            //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n            this.originalStart = originalStart;\n            this.originalLength = originalLength;\n            this.modifiedStart = modifiedStart;\n            this.modifiedLength = modifiedLength;\n        }\n        /**\n         * The type of difference.\n         */\n        DiffChange.prototype.getChangeType = function () {\n            if (this.originalLength === 0) {\n                return exports.DifferenceType.Add;\n            }\n            else if (this.modifiedLength === 0) {\n                return exports.DifferenceType.Remove;\n            }\n            else {\n                return exports.DifferenceType.Change;\n            }\n        };\n        /**\n         * The end point (exclusive) of the change in the original sequence.\n         */\n        DiffChange.prototype.getOriginalEnd = function () {\n            return this.originalStart + this.originalLength;\n        };\n        /**\n         * The end point (exclusive) of the change in the modified sequence.\n         */\n        DiffChange.prototype.getModifiedEnd = function () {\n            return this.modifiedStart + this.modifiedLength;\n        };\n        return DiffChange;\n    }());\n    exports.DiffChange = DiffChange;\n});\n\ndefine(__m[24], __M([1,0,19]), function (require, exports, diffChange_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function createStringSequence(a) {\n        return {\n            getLength: function () { return a.length; },\n            getElementHash: function (pos) { return a[pos]; }\n        };\n    }\n    function stringDiff(original, modified) {\n        return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff();\n    }\n    exports.stringDiff = stringDiff;\n    //\n    // The code below has been ported from a C# implementation in VS\n    //\n    var Debug = (function () {\n        function Debug() {\n        }\n        Debug.Assert = function (condition, message) {\n            if (!condition) {\n                throw new Error(message);\n            }\n        };\n        return Debug;\n    }());\n    exports.Debug = Debug;\n    var MyArray = (function () {\n        function MyArray() {\n        }\n        /**\n         * Copies a range of elements from an Array starting at the specified source index and pastes\n         * them to another Array starting at the specified destination index. The length and the indexes\n         * are specified as 64-bit integers.\n         * sourceArray:\n         *\t\tThe Array that contains the data to copy.\n         * sourceIndex:\n         *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n         * destinationArray:\n         *\t\tThe Array that receives the data.\n         * destinationIndex:\n         *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n         * length:\n         *\t\tA 64-bit integer that represents the number of elements to copy.\n         */\n        MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n            for (var i = 0; i < length; i++) {\n                destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n            }\n        };\n        return MyArray;\n    }());\n    exports.MyArray = MyArray;\n    //*****************************************************************************\n    // LcsDiff.cs\n    //\n    // An implementation of the difference algorithm described in\n    // \"An O(ND) Difference Algorithm and its letiations\" by Eugene W. Myers\n    //\n    // Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n    //*****************************************************************************\n    // Our total memory usage for storing history is (worst-case):\n    // 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n    // 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\n    var MaxDifferencesHistory = 1447;\n    //let MaxDifferencesHistory = 100;\n    /**\n     * A utility class which helps to create the set of DiffChanges from\n     * a difference operation. This class accepts original DiffElements and\n     * modified DiffElements that are involved in a particular change. The\n     * MarktNextChange() method can be called to mark the separation between\n     * distinct changes. At the end, the Changes property can be called to retrieve\n     * the constructed changes.\n     */\n    var DiffChangeHelper = (function () {\n        /**\n         * Constructs a new DiffChangeHelper for the given DiffSequences.\n         */\n        function DiffChangeHelper() {\n            this.m_changes = [];\n            this.m_originalStart = Number.MAX_VALUE;\n            this.m_modifiedStart = Number.MAX_VALUE;\n            this.m_originalCount = 0;\n            this.m_modifiedCount = 0;\n        }\n        /**\n         * Marks the beginning of the next change in the set of differences.\n         */\n        DiffChangeHelper.prototype.MarkNextChange = function () {\n            // Only add to the list if there is something to add\n            if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n                // Add the new change to our list\n                this.m_changes.push(new diffChange_1.DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n            }\n            // Reset for the next change\n            this.m_originalCount = 0;\n            this.m_modifiedCount = 0;\n            this.m_originalStart = Number.MAX_VALUE;\n            this.m_modifiedStart = Number.MAX_VALUE;\n        };\n        /**\n         * Adds the original element at the given position to the elements\n         * affected by the current change. The modified index gives context\n         * to the change position with respect to the original sequence.\n         * @param originalIndex The index of the original element to add.\n         * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n         */\n        DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n            // The 'true' start index is the smallest of the ones we've seen\n            this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n            this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n            this.m_originalCount++;\n        };\n        /**\n         * Adds the modified element at the given position to the elements\n         * affected by the current change. The original index gives context\n         * to the change position with respect to the modified sequence.\n         * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n         * @param modifiedIndex The index of the modified element to add.\n         */\n        DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n            // The 'true' start index is the smallest of the ones we've seen\n            this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n            this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n            this.m_modifiedCount++;\n        };\n        /**\n         * Retrieves all of the changes marked by the class.\n         */\n        DiffChangeHelper.prototype.getChanges = function () {\n            if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n                // Finish up on whatever is left\n                this.MarkNextChange();\n            }\n            return this.m_changes;\n        };\n        DiffChangeHelper.prototype.getReverseChanges = function () {\n            /// <summary>\n            /// Retrieves all of the changes marked by the class in the reverse order\n            /// </summary>\n            if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n                // Finish up on whatever is left\n                this.MarkNextChange();\n            }\n            this.m_changes.reverse();\n            return this.m_changes;\n        };\n        return DiffChangeHelper;\n    }());\n    /**\n     * An implementation of the difference algorithm described in\n     * \"An O(ND) Difference Algorithm and its letiations\" by Eugene W. Myers\n     */\n    var LcsDiff = (function () {\n        /**\n         * Constructs the DiffFinder\n         */\n        function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n            if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n            this.OriginalSequence = originalSequence;\n            this.ModifiedSequence = newSequence;\n            this.ContinueProcessingPredicate = continueProcessingPredicate;\n            this.m_originalIds = [];\n            this.m_modifiedIds = [];\n            this.m_forwardHistory = [];\n            this.m_reverseHistory = [];\n            this.ComputeUniqueIdentifiers();\n        }\n        LcsDiff.prototype.ComputeUniqueIdentifiers = function () {\n            var originalSequenceLength = this.OriginalSequence.getLength();\n            var modifiedSequenceLength = this.ModifiedSequence.getLength();\n            this.m_originalIds = new Array(originalSequenceLength);\n            this.m_modifiedIds = new Array(modifiedSequenceLength);\n            // Create a new hash table for unique elements from the original\n            // sequence.\n            var hashTable = {};\n            var currentUniqueId = 1;\n            var i;\n            // Fill up the hash table for unique elements\n            for (i = 0; i < originalSequenceLength; i++) {\n                var originalElementHash = this.OriginalSequence.getElementHash(i);\n                if (!hashTable.hasOwnProperty(originalElementHash)) {\n                    // No entry in the hashtable so this is a new unique element.\n                    // Assign the element a new unique identifier and add it to the\n                    // hash table\n                    this.m_originalIds[i] = currentUniqueId++;\n                    hashTable[originalElementHash] = this.m_originalIds[i];\n                }\n                else {\n                    this.m_originalIds[i] = hashTable[originalElementHash];\n                }\n            }\n            // Now match up modified elements\n            for (i = 0; i < modifiedSequenceLength; i++) {\n                var modifiedElementHash = this.ModifiedSequence.getElementHash(i);\n                if (!hashTable.hasOwnProperty(modifiedElementHash)) {\n                    this.m_modifiedIds[i] = currentUniqueId++;\n                    hashTable[modifiedElementHash] = this.m_modifiedIds[i];\n                }\n                else {\n                    this.m_modifiedIds[i] = hashTable[modifiedElementHash];\n                }\n            }\n        };\n        LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n            return this.m_originalIds[originalIndex] === this.m_modifiedIds[newIndex];\n        };\n        LcsDiff.prototype.ComputeDiff = function () {\n            return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1);\n        };\n        /**\n         * Computes the differences between the original and modified input\n         * sequences on the bounded range.\n         * @returns An array of the differences between the two input sequences.\n         */\n        LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd) {\n            var quitEarlyArr = [false];\n            return this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        };\n        /**\n         * Private helper method which computes the differences on the bounded range\n         * recursively.\n         * @returns An array of the differences between the two input sequences.\n         */\n        LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n            quitEarlyArr[0] = false;\n            // Find the start of the differences\n            while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n                originalStart++;\n                modifiedStart++;\n            }\n            // Find the end of the differences\n            while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n                originalEnd--;\n                modifiedEnd--;\n            }\n            // In the special case where we either have all insertions or all deletions or the sequences are identical\n            if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n                var changes = void 0;\n                if (modifiedStart <= modifiedEnd) {\n                    Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                    // All insertions\n                    changes = [\n                        new diffChange_1.DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n                else if (originalStart <= originalEnd) {\n                    Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                    // All deletions\n                    changes = [\n                        new diffChange_1.DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                    ];\n                }\n                else {\n                    Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                    Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                    // Identical sequences - No differences\n                    changes = [];\n                }\n                return changes;\n            }\n            // This problem can be solved using the Divide-And-Conquer technique.\n            var midOriginalArr = [0], midModifiedArr = [0];\n            var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n            var midOriginal = midOriginalArr[0];\n            var midModified = midModifiedArr[0];\n            if (result !== null) {\n                // Result is not-null when there was enough memory to compute the changes while\n                // searching for the recursion point\n                return result;\n            }\n            else if (!quitEarlyArr[0]) {\n                // We can break the problem down recursively by finding the changes in the\n                // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n                // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n                // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n                var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n                var rightChanges = [];\n                if (!quitEarlyArr[0]) {\n                    rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n                }\n                else {\n                    // We did't have time to finish the first half, so we don't have time to compute this half.\n                    // Consider the entire rest of the sequence different.\n                    rightChanges = [\n                        new diffChange_1.DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                    ];\n                }\n                return this.ConcatenateChanges(leftChanges, rightChanges);\n            }\n            // If we hit here, we quit early, and so can't return anything meaningful\n            return [\n                new diffChange_1.DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n            ];\n        };\n        LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n            var forwardChanges = null, reverseChanges = null;\n            // First, walk backward through the forward diagonals history\n            var changeHelper = new DiffChangeHelper();\n            var diagonalMin = diagonalForwardStart;\n            var diagonalMax = diagonalForwardEnd;\n            var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n            var lastOriginalIndex = Number.MIN_VALUE;\n            var historyIndex = this.m_forwardHistory.length - 1;\n            var diagonal;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalForwardBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    // Vertical line (the element is an insert)\n                    originalIndex = forwardPoints[diagonal + 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                    if (originalIndex < lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                    diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n                }\n                else {\n                    // Horizontal line (the element is a deletion)\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                    if (originalIndex < lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex - 1;\n                    changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    forwardPoints = this.m_forwardHistory[historyIndex];\n                    diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = forwardPoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // Ironically, we get the forward changes as the reverse of the\n            // order we added them since we technically added them backwards\n            forwardChanges = changeHelper.getReverseChanges();\n            if (quitEarlyArr[0]) {\n                // TODO: Calculate a partial from the reverse diagonals.\n                //       For now, just assume everything after the midOriginal/midModified point is a diff\n                var originalStartPoint = midOriginalArr[0] + 1;\n                var modifiedStartPoint = midModifiedArr[0] + 1;\n                if (forwardChanges !== null && forwardChanges.length > 0) {\n                    var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                    originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                    modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n                }\n                reverseChanges = [\n                    new diffChange_1.DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n                ];\n            }\n            else {\n                // Now walk backward through the reverse diagonals history\n                changeHelper = new DiffChangeHelper();\n                diagonalMin = diagonalReverseStart;\n                diagonalMax = diagonalReverseEnd;\n                diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n                lastOriginalIndex = Number.MAX_VALUE;\n                historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n                do {\n                    // Get the diagonal index from the relative diagonal number\n                    diagonal = diagonalRelative + diagonalReverseBase;\n                    // Figure out where we came from\n                    if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                        // Horizontal line (the element is a deletion))\n                        originalIndex = reversePoints[diagonal + 1] - 1;\n                        modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                        if (originalIndex > lastOriginalIndex) {\n                            changeHelper.MarkNextChange();\n                        }\n                        lastOriginalIndex = originalIndex + 1;\n                        changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                        diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                    }\n                    else {\n                        // Vertical line (the element is an insertion)\n                        originalIndex = reversePoints[diagonal - 1];\n                        modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                        if (originalIndex > lastOriginalIndex) {\n                            changeHelper.MarkNextChange();\n                        }\n                        lastOriginalIndex = originalIndex;\n                        changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                        diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                    }\n                    if (historyIndex >= 0) {\n                        reversePoints = this.m_reverseHistory[historyIndex];\n                        diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                        diagonalMin = 1;\n                        diagonalMax = reversePoints.length - 1;\n                    }\n                } while (--historyIndex >= -1);\n                // There are cases where the reverse history will find diffs that\n                // are correct, but not intuitive, so we need shift them.\n                reverseChanges = changeHelper.getChanges();\n            }\n            return this.ConcatenateChanges(forwardChanges, reverseChanges);\n        };\n        /**\n         * Given the range to compute the diff on, this method finds the point:\n         * (midOriginal, midModified)\n         * that exists in the middle of the LCS of the two sequences and\n         * is the point at which the LCS problem may be broken down recursively.\n         * This method will try to keep the LCS trace in memory. If the LCS recursion\n         * point is calculated and the full trace is available in memory, then this method\n         * will return the change list.\n         * @param originalStart The start bound of the original sequence range\n         * @param originalEnd The end bound of the original sequence range\n         * @param modifiedStart The start bound of the modified sequence range\n         * @param modifiedEnd The end bound of the modified sequence range\n         * @param midOriginal The middle point of the original sequence range\n         * @param midModified The middle point of the modified sequence range\n         * @returns The diff changes, if available, otherwise null\n         */\n        LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n            var originalIndex, modifiedIndex;\n            var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n            var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n            var numDifferences;\n            // To traverse the edit graph and produce the proper LCS, our actual\n            // start position is just outside the given boundary\n            originalStart--;\n            modifiedStart--;\n            // We set these up to make the compiler happy, but they will\n            // be replaced before we return with the actual recursion point\n            midOriginalArr[0] = 0;\n            midModifiedArr[0] = 0;\n            // Clear out the history\n            this.m_forwardHistory = [];\n            this.m_reverseHistory = [];\n            // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n            // The integer value in the cell represents the originalIndex of the furthest\n            // reaching point found so far that ends in that diagonal.\n            // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n            var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n            var numDiagonals = maxDifferences + 1;\n            var forwardPoints = new Array(numDiagonals);\n            var reversePoints = new Array(numDiagonals);\n            // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n            // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n            var diagonalForwardBase = (modifiedEnd - modifiedStart);\n            var diagonalReverseBase = (originalEnd - originalStart);\n            // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n            //    diagonal number (relative to diagonalForwardBase)\n            // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n            //    diagonal number (relative to diagonalReverseBase)\n            var diagonalForwardOffset = (originalStart - modifiedStart);\n            var diagonalReverseOffset = (originalEnd - modifiedEnd);\n            // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n            //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n            // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n            var delta = diagonalReverseBase - diagonalForwardBase;\n            var deltaIsEven = (delta % 2 === 0);\n            // Here we set up the start and end points as the furthest points found so far\n            // in both the forward and reverse directions, respectively\n            forwardPoints[diagonalForwardBase] = originalStart;\n            reversePoints[diagonalReverseBase] = originalEnd;\n            // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n            quitEarlyArr[0] = false;\n            // A couple of points:\n            // --With this method, we iterate on the number of differences between the two sequences.\n            //   The more differences there actually are, the longer this will take.\n            // --Also, as the number of differences increases, we have to search on diagonals further\n            //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n            // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n            //   is even and odd diagonals only when numDifferences is odd.\n            var diagonal, tempOriginalIndex;\n            for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n                var furthestOriginalIndex = 0;\n                var furthestModifiedIndex = 0;\n                // Run the algorithm in the forward direction\n                diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n                diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n                for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                    // STEP 1: We extend the furthest reaching point in the present diagonal\n                    // by looking at the diagonals above and below and picking the one whose point\n                    // is further away from the start point (originalStart, modifiedStart)\n                    if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                        originalIndex = forwardPoints[diagonal + 1];\n                    }\n                    else {\n                        originalIndex = forwardPoints[diagonal - 1] + 1;\n                    }\n                    modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                    // Save the current originalIndex so we can test for false overlap in step 3\n                    tempOriginalIndex = originalIndex;\n                    // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                    // so long as the elements are equal.\n                    while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                        originalIndex++;\n                        modifiedIndex++;\n                    }\n                    forwardPoints[diagonal] = originalIndex;\n                    if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                        furthestOriginalIndex = originalIndex;\n                        furthestModifiedIndex = modifiedIndex;\n                    }\n                    // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                    // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                    // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                    // then check for overlap.\n                    if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                        if (originalIndex >= reversePoints[diagonal]) {\n                            midOriginalArr[0] = originalIndex;\n                            midModifiedArr[0] = modifiedIndex;\n                            if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                                // BINGO! We overlapped, and we have the full trace in memory!\n                                return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                            }\n                            else {\n                                // Either false overlap, or we didn't have enough memory for the full trace\n                                // Just return the recursion point\n                                return null;\n                            }\n                        }\n                    }\n                }\n                // Check to see if we should be quitting early, before moving on to the next iteration.\n                var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n                if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                    // We can't finish, so skip ahead to generating a result from what we have.\n                    quitEarlyArr[0] = true;\n                    // Use the furthest distance we got in the forward direction.\n                    midOriginalArr[0] = furthestOriginalIndex;\n                    midModifiedArr[0] = furthestModifiedIndex;\n                    if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                        // Enough of the history is in memory to walk it backwards\n                        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                    }\n                    else {\n                        // We didn't actually remember enough of the history.\n                        //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                        //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                        originalStart++;\n                        modifiedStart++;\n                        return [\n                            new diffChange_1.DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                        ];\n                    }\n                }\n                // Run the algorithm in the reverse direction\n                diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n                diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n                for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                    // STEP 1: We extend the furthest reaching point in the present diagonal\n                    // by looking at the diagonals above and below and picking the one whose point\n                    // is further away from the start point (originalEnd, modifiedEnd)\n                    if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                        originalIndex = reversePoints[diagonal + 1] - 1;\n                    }\n                    else {\n                        originalIndex = reversePoints[diagonal - 1];\n                    }\n                    modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                    // Save the current originalIndex so we can test for false overlap\n                    tempOriginalIndex = originalIndex;\n                    // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                    // as long as the elements are equal.\n                    while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                        originalIndex--;\n                        modifiedIndex--;\n                    }\n                    reversePoints[diagonal] = originalIndex;\n                    // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                    // and diagonal is in the range of forward diagonals computed for numDifferences\n                    // then check for overlap.\n                    if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                        if (originalIndex <= forwardPoints[diagonal]) {\n                            midOriginalArr[0] = originalIndex;\n                            midModifiedArr[0] = modifiedIndex;\n                            if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                                // BINGO! We overlapped, and we have the full trace in memory!\n                                return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                            }\n                            else {\n                                // Either false overlap, or we didn't have enough memory for the full trace\n                                // Just return the recursion point\n                                return null;\n                            }\n                        }\n                    }\n                }\n                // Save current vectors to history before the next iteration\n                if (numDifferences <= MaxDifferencesHistory) {\n                    // We are allocating space for one extra int, which we fill with\n                    // the index of the diagonal base index\n                    var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                    temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                    MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                    this.m_forwardHistory.push(temp);\n                    temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                    temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                    MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                    this.m_reverseHistory.push(temp);\n                }\n            }\n            // If we got here, then we have the full trace in history. We just have to convert it to a change list\n            // NOTE: This part is a bit messy\n            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n        };\n        /**\n         * Concatenates the two input DiffChange lists and returns the resulting\n         * list.\n         * @param The left changes\n         * @param The right changes\n         * @returns The concatenated list\n         */\n        LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n            var mergedChangeArr = [];\n            var result = null;\n            if (left.length === 0 || right.length === 0) {\n                return (right.length > 0) ? right : left;\n            }\n            else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n                // Since we break the problem down recursively, it is possible that we\n                // might recurse in the middle of a change thereby splitting it into\n                // two changes. Here in the combining stage, we detect and fuse those\n                // changes back together\n                result = new Array(left.length + right.length - 1);\n                MyArray.Copy(left, 0, result, 0, left.length - 1);\n                result[left.length - 1] = mergedChangeArr[0];\n                MyArray.Copy(right, 1, result, left.length, right.length - 1);\n                return result;\n            }\n            else {\n                result = new Array(left.length + right.length);\n                MyArray.Copy(left, 0, result, 0, left.length);\n                MyArray.Copy(right, 0, result, left.length, right.length);\n                return result;\n            }\n        };\n        /**\n         * Returns true if the two changes overlap and can be merged into a single\n         * change\n         * @param left The left change\n         * @param right The right change\n         * @param mergedChange The merged change if the two overlap, null otherwise\n         * @returns True if the two changes overlap\n         */\n        LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n            Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n            Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n            if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                var originalStart = left.originalStart;\n                var originalLength = left.originalLength;\n                var modifiedStart = left.modifiedStart;\n                var modifiedLength = left.modifiedLength;\n                if (left.originalStart + left.originalLength >= right.originalStart) {\n                    originalLength = right.originalStart + right.originalLength - left.originalStart;\n                }\n                if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                    modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n                }\n                mergedChangeArr[0] = new diffChange_1.DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n                return true;\n            }\n            else {\n                mergedChangeArr[0] = null;\n                return false;\n            }\n        };\n        /**\n         * Helper method used to clip a diagonal index to the range of valid\n         * diagonals. This also decides whether or not the diagonal index,\n         * if it exceeds the boundary, should be clipped to the boundary or clipped\n         * one inside the boundary depending on the Even/Odd status of the boundary\n         * and numDifferences.\n         * @param diagonal The index of the diagonal to clip.\n         * @param numDifferences The current number of differences being iterated upon.\n         * @param diagonalBaseIndex The base reference diagonal.\n         * @param numDiagonals The total number of diagonals.\n         * @returns The clipped diagonal index.\n         */\n        LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n            if (diagonal >= 0 && diagonal < numDiagonals) {\n                // Nothing to clip, its in range\n                return diagonal;\n            }\n            // diagonalsBelow: The number of diagonals below the reference diagonal\n            // diagonalsAbove: The number of diagonals above the reference diagonal\n            var diagonalsBelow = diagonalBaseIndex;\n            var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n            var diffEven = (numDifferences % 2 === 0);\n            if (diagonal < 0) {\n                var lowerBoundEven = (diagonalsBelow % 2 === 0);\n                return (diffEven === lowerBoundEven) ? 0 : 1;\n            }\n            else {\n                var upperBoundEven = (diagonalsAbove % 2 === 0);\n                return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n            }\n        };\n        return LcsDiff;\n    }());\n    exports.LcsDiff = LcsDiff;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\ndefine(__m[8], __M([1,0]), function (require, exports) {\n    'use strict';\n    /**\n     * A simple map to store value by a key object. Key can be any object that has toString() function to get\n     * string value of the key.\n     */\n    var LinkedMap = (function () {\n        function LinkedMap() {\n            this.map = Object.create(null);\n            this._size = 0;\n        }\n        Object.defineProperty(LinkedMap.prototype, \"size\", {\n            get: function () {\n                return this._size;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        LinkedMap.prototype.get = function (k) {\n            var value = this.peek(k);\n            return value ? value : null;\n        };\n        LinkedMap.prototype.getOrSet = function (k, t) {\n            var res = this.get(k);\n            if (res) {\n                return res;\n            }\n            this.set(k, t);\n            return t;\n        };\n        LinkedMap.prototype.keys = function () {\n            var keys = [];\n            for (var key in this.map) {\n                keys.push(this.map[key].key);\n            }\n            return keys;\n        };\n        LinkedMap.prototype.values = function () {\n            var values = [];\n            for (var key in this.map) {\n                values.push(this.map[key].value);\n            }\n            return values;\n        };\n        LinkedMap.prototype.entries = function () {\n            var entries = [];\n            for (var key in this.map) {\n                entries.push(this.map[key]);\n            }\n            return entries;\n        };\n        LinkedMap.prototype.set = function (k, t) {\n            if (this.get(k)) {\n                return false; // already present!\n            }\n            this.push(k, t);\n            return true;\n        };\n        LinkedMap.prototype.delete = function (k) {\n            var value = this.get(k);\n            if (value) {\n                this.pop(k);\n                return value;\n            }\n            return null;\n        };\n        LinkedMap.prototype.has = function (k) {\n            return !!this.get(k);\n        };\n        LinkedMap.prototype.clear = function () {\n            this.map = Object.create(null);\n            this._size = 0;\n        };\n        LinkedMap.prototype.push = function (key, value) {\n            var entry = { key: key, value: value };\n            this.map[key.toString()] = entry;\n            this._size++;\n        };\n        LinkedMap.prototype.pop = function (k) {\n            delete this.map[k.toString()];\n            this._size--;\n        };\n        LinkedMap.prototype.peek = function (k) {\n            var entry = this.map[k.toString()];\n            return entry ? entry.value : null;\n        };\n        return LinkedMap;\n    }());\n    exports.LinkedMap = LinkedMap;\n    /**\n     * A simple Map<T> that optionally allows to set a limit of entries to store. Once the limit is hit,\n     * the cache will remove the entry that was last recently added. Or, if a ratio is provided below 1,\n     * all elements will be removed until the ratio is full filled (e.g. 0.75 to remove 25% of old elements).\n     */\n    var BoundedLinkedMap = (function () {\n        function BoundedLinkedMap(limit, ratio) {\n            if (limit === void 0) { limit = Number.MAX_VALUE; }\n            if (ratio === void 0) { ratio = 1; }\n            this.limit = limit;\n            this.map = Object.create(null);\n            this._size = 0;\n            this.ratio = limit * ratio;\n        }\n        Object.defineProperty(BoundedLinkedMap.prototype, \"size\", {\n            get: function () {\n                return this._size;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        BoundedLinkedMap.prototype.set = function (key, value) {\n            if (this.map[key]) {\n                return false; // already present!\n            }\n            var entry = { key: key, value: value };\n            this.push(entry);\n            if (this._size > this.limit) {\n                this.trim();\n            }\n            return true;\n        };\n        BoundedLinkedMap.prototype.get = function (key) {\n            var entry = this.map[key];\n            return entry ? entry.value : null;\n        };\n        BoundedLinkedMap.prototype.getOrSet = function (k, t) {\n            var res = this.get(k);\n            if (res) {\n                return res;\n            }\n            this.set(k, t);\n            return t;\n        };\n        BoundedLinkedMap.prototype.delete = function (key) {\n            var entry = this.map[key];\n            if (entry) {\n                this.map[key] = void 0;\n                this._size--;\n                if (entry.next) {\n                    entry.next.prev = entry.prev; // [A]<-[x]<-[C] = [A]<-[C]\n                }\n                else {\n                    this.head = entry.prev; // [A]-[x] = [A]\n                }\n                if (entry.prev) {\n                    entry.prev.next = entry.next; // [A]->[x]->[C] = [A]->[C]\n                }\n                else {\n                    this.tail = entry.next; // [x]-[A] = [A]\n                }\n                return entry.value;\n            }\n            return null;\n        };\n        BoundedLinkedMap.prototype.has = function (key) {\n            return !!this.map[key];\n        };\n        BoundedLinkedMap.prototype.clear = function () {\n            this.map = Object.create(null);\n            this._size = 0;\n            this.head = null;\n            this.tail = null;\n        };\n        BoundedLinkedMap.prototype.push = function (entry) {\n            if (this.head) {\n                // [A]-[B] = [A]-[B]->[X]\n                entry.prev = this.head;\n                this.head.next = entry;\n            }\n            if (!this.tail) {\n                this.tail = entry;\n            }\n            this.head = entry;\n            this.map[entry.key] = entry;\n            this._size++;\n        };\n        BoundedLinkedMap.prototype.trim = function () {\n            if (this.tail) {\n                // Remove all elements until ratio is reached\n                if (this.ratio < this.limit) {\n                    var index = 0;\n                    var current = this.tail;\n                    while (current.next) {\n                        // Remove the entry\n                        this.map[current.key] = void 0;\n                        this._size--;\n                        // if we reached the element that overflows our ratio condition\n                        // make its next element the new tail of the Map and adjust the size\n                        if (index === this.ratio) {\n                            this.tail = current.next;\n                            this.tail.prev = null;\n                            break;\n                        }\n                        // Move on\n                        current = current.next;\n                        index++;\n                    }\n                }\n                else {\n                    this.map[this.tail.key] = void 0;\n                    this._size--;\n                    // [x]-[B] = [B]\n                    this.tail = this.tail.next;\n                    this.tail.prev = null;\n                }\n            }\n        };\n        return BoundedLinkedMap;\n    }());\n    exports.BoundedLinkedMap = BoundedLinkedMap;\n    /**\n     * A subclass of Map<T> that makes an entry the MRU entry as soon\n     * as it is being accessed. In combination with the limit for the\n     * maximum number of elements in the cache, it helps to remove those\n     * entries from the cache that are LRU.\n     */\n    var LRUCache = (function (_super) {\n        __extends(LRUCache, _super);\n        function LRUCache(limit) {\n            _super.call(this, limit);\n        }\n        LRUCache.prototype.get = function (key) {\n            // Upon access of an entry, make it the head of\n            // the linked map so that it is the MRU element\n            var entry = this.map[key];\n            if (entry) {\n                this.delete(key);\n                this.push(entry);\n                return entry.value;\n            }\n            return null;\n        };\n        return LRUCache;\n    }(BoundedLinkedMap));\n    exports.LRUCache = LRUCache;\n});\n\ndefine(__m[3], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // --- THIS FILE IS TEMPORARY UNTIL ENV.TS IS CLEANED UP. IT CAN SAFELY BE USED IN ALL TARGET EXECUTION ENVIRONMENTS (node & dom) ---\n    var _isWindows = false;\n    var _isMacintosh = false;\n    var _isLinux = false;\n    var _isRootUser = false;\n    var _isNative = false;\n    var _isWeb = false;\n    var _isQunit = false;\n    var _locale = undefined;\n    var _language = undefined;\n    exports.LANGUAGE_DEFAULT = 'en';\n    // OS detection\n    if (typeof process === 'object') {\n        _isWindows = (process.platform === 'win32');\n        _isMacintosh = (process.platform === 'darwin');\n        _isLinux = (process.platform === 'linux');\n        _isRootUser = !_isWindows && (process.getuid() === 0);\n        var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n        if (rawNlsConfig) {\n            try {\n                var nlsConfig = JSON.parse(rawNlsConfig);\n                var resolved = nlsConfig.availableLanguages['*'];\n                _locale = nlsConfig.locale;\n                // VSCode's default language is 'en'\n                _language = resolved ? resolved : exports.LANGUAGE_DEFAULT;\n            }\n            catch (e) {\n            }\n        }\n        _isNative = true;\n    }\n    else if (typeof navigator === 'object') {\n        var userAgent = navigator.userAgent;\n        _isWindows = userAgent.indexOf('Windows') >= 0;\n        _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n        _isLinux = userAgent.indexOf('Linux') >= 0;\n        _isWeb = true;\n        _locale = navigator.language;\n        _language = _locale;\n        _isQunit = !!self.QUnit;\n    }\n    (function (Platform) {\n        Platform[Platform[\"Web\"] = 0] = \"Web\";\n        Platform[Platform[\"Mac\"] = 1] = \"Mac\";\n        Platform[Platform[\"Linux\"] = 2] = \"Linux\";\n        Platform[Platform[\"Windows\"] = 3] = \"Windows\";\n    })(exports.Platform || (exports.Platform = {}));\n    var Platform = exports.Platform;\n    exports._platform = Platform.Web;\n    if (_isNative) {\n        if (_isMacintosh) {\n            exports._platform = Platform.Mac;\n        }\n        else if (_isWindows) {\n            exports._platform = Platform.Windows;\n        }\n        else if (_isLinux) {\n            exports._platform = Platform.Linux;\n        }\n    }\n    exports.isWindows = _isWindows;\n    exports.isMacintosh = _isMacintosh;\n    exports.isLinux = _isLinux;\n    exports.isRootUser = _isRootUser;\n    exports.isNative = _isNative;\n    exports.isWeb = _isWeb;\n    exports.isQunit = _isQunit;\n    exports.platform = exports._platform;\n    /**\n     * The language used for the user interface. The format of\n     * the string is all lower case (e.g. zh-tw for Traditional\n     * Chinese)\n     */\n    exports.language = _language;\n    /**\n     * The OS locale or the locale specified by --locale. The format of\n     * the string is all lower case (e.g. zh-tw for Traditional\n     * Chinese). The UI is not necessarily shown in the provided locale.\n     */\n    exports.locale = _locale;\n    var _globals = (typeof self === 'object' ? self : global);\n    exports.globals = _globals;\n    function hasWebWorkerSupport() {\n        return typeof _globals.Worker !== 'undefined';\n    }\n    exports.hasWebWorkerSupport = hasWebWorkerSupport;\n    exports.setTimeout = _globals.setTimeout.bind(_globals);\n    exports.clearTimeout = _globals.clearTimeout.bind(_globals);\n    exports.setInterval = _globals.setInterval.bind(_globals);\n    exports.clearInterval = _globals.clearInterval.bind(_globals);\n});\n\ndefine(__m[4], __M([1,0,8]), function (require, exports, map_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * The empty string.\n     */\n    exports.empty = '';\n    /**\n     * @returns the provided number with the given number of preceding zeros.\n     */\n    function pad(n, l, char) {\n        if (char === void 0) { char = '0'; }\n        var str = '' + n;\n        var r = [str];\n        for (var i = str.length; i < l; i++) {\n            r.push(char);\n        }\n        return r.reverse().join('');\n    }\n    exports.pad = pad;\n    var _formatRegexp = /{(\\d+)}/g;\n    /**\n     * Helper to produce a string with a variable number of arguments. Insert variable segments\n     * into the string using the {n} notation where N is the index of the argument following the string.\n     * @param value string to which formatting is applied\n     * @param args replacements for {n}-entries\n     */\n    function format(value) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (args.length === 0) {\n            return value;\n        }\n        return value.replace(_formatRegexp, function (match, group) {\n            var idx = parseInt(group, 10);\n            return isNaN(idx) || idx < 0 || idx >= args.length ?\n                match :\n                args[idx];\n        });\n    }\n    exports.format = format;\n    /**\n     * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n     * being used e.g. in HTMLElement.innerHTML.\n     */\n    function escape(html) {\n        return html.replace(/[<|>|&]/g, function (match) {\n            switch (match) {\n                case '<': return '&lt;';\n                case '>': return '&gt;';\n                case '&': return '&amp;';\n                default: return match;\n            }\n        });\n    }\n    exports.escape = escape;\n    /**\n     * Escapes regular expression characters in a given string\n     */\n    function escapeRegExpCharacters(value) {\n        return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n    }\n    exports.escapeRegExpCharacters = escapeRegExpCharacters;\n    /**\n     * Removes all occurrences of needle from the beginning and end of haystack.\n     * @param haystack string to trim\n     * @param needle the thing to trim (default is a blank)\n     */\n    function trim(haystack, needle) {\n        if (needle === void 0) { needle = ' '; }\n        var trimmed = ltrim(haystack, needle);\n        return rtrim(trimmed, needle);\n    }\n    exports.trim = trim;\n    /**\n     * Removes all occurrences of needle from the beginning of haystack.\n     * @param haystack string to trim\n     * @param needle the thing to trim\n     */\n    function ltrim(haystack, needle) {\n        if (!haystack || !needle) {\n            return haystack;\n        }\n        var needleLen = needle.length;\n        if (needleLen === 0 || haystack.length === 0) {\n            return haystack;\n        }\n        var offset = 0, idx = -1;\n        while ((idx = haystack.indexOf(needle, offset)) === offset) {\n            offset = offset + needleLen;\n        }\n        return haystack.substring(offset);\n    }\n    exports.ltrim = ltrim;\n    /**\n     * Removes all occurrences of needle from the end of haystack.\n     * @param haystack string to trim\n     * @param needle the thing to trim\n     */\n    function rtrim(haystack, needle) {\n        if (!haystack || !needle) {\n            return haystack;\n        }\n        var needleLen = needle.length, haystackLen = haystack.length;\n        if (needleLen === 0 || haystackLen === 0) {\n            return haystack;\n        }\n        var offset = haystackLen, idx = -1;\n        while (true) {\n            idx = haystack.lastIndexOf(needle, offset - 1);\n            if (idx === -1 || idx + needleLen !== offset) {\n                break;\n            }\n            if (idx === 0) {\n                return '';\n            }\n            offset = idx;\n        }\n        return haystack.substring(0, offset);\n    }\n    exports.rtrim = rtrim;\n    function convertSimple2RegExpPattern(pattern) {\n        return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n    }\n    exports.convertSimple2RegExpPattern = convertSimple2RegExpPattern;\n    function stripWildcards(pattern) {\n        return pattern.replace(/\\*/g, '');\n    }\n    exports.stripWildcards = stripWildcards;\n    /**\n     * Determines if haystack starts with needle.\n     */\n    function startsWith(haystack, needle) {\n        if (haystack.length < needle.length) {\n            return false;\n        }\n        for (var i = 0; i < needle.length; i++) {\n            if (haystack[i] !== needle[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.startsWith = startsWith;\n    /**\n     * Determines if haystack ends with needle.\n     */\n    function endsWith(haystack, needle) {\n        var diff = haystack.length - needle.length;\n        if (diff > 0) {\n            return haystack.indexOf(needle, diff) === diff;\n        }\n        else if (diff === 0) {\n            return haystack === needle;\n        }\n        else {\n            return false;\n        }\n    }\n    exports.endsWith = endsWith;\n    function createRegExp(searchString, isRegex, matchCase, wholeWord, global) {\n        if (searchString === '') {\n            throw new Error('Cannot create regex from empty string');\n        }\n        if (!isRegex) {\n            searchString = searchString.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n        }\n        if (wholeWord) {\n            if (!/\\B/.test(searchString.charAt(0))) {\n                searchString = '\\\\b' + searchString;\n            }\n            if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n                searchString = searchString + '\\\\b';\n            }\n        }\n        var modifiers = '';\n        if (global) {\n            modifiers += 'g';\n        }\n        if (!matchCase) {\n            modifiers += 'i';\n        }\n        return new RegExp(searchString, modifiers);\n    }\n    exports.createRegExp = createRegExp;\n    function regExpLeadsToEndlessLoop(regexp) {\n        // Exit early if it's one of these special cases which are meant to match\n        // against an empty string\n        if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$') {\n            return false;\n        }\n        // We check against an empty string. If the regular expression doesn't advance\n        // (e.g. ends in an endless loop) it will match an empty string.\n        var match = regexp.exec('');\n        return (match && regexp.lastIndex === 0);\n    }\n    exports.regExpLeadsToEndlessLoop = regExpLeadsToEndlessLoop;\n    /**\n     * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n     * the Normalization Form Canonical Composition.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n     */\n    exports.canNormalize = typeof (''.normalize) === 'function';\n    var nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\n    var normalizedCache = new map_1.BoundedLinkedMap(10000); // bounded to 10000 elements\n    function normalizeNFC(str) {\n        if (!exports.canNormalize || !str) {\n            return str;\n        }\n        var cached = normalizedCache.get(str);\n        if (cached) {\n            return cached;\n        }\n        var res;\n        if (nonAsciiCharactersPattern.test(str)) {\n            res = str.normalize('NFC');\n        }\n        else {\n            res = str;\n        }\n        // Use the cache for fast lookup\n        normalizedCache.set(str, res);\n        return res;\n    }\n    exports.normalizeNFC = normalizeNFC;\n    /**\n     * Returns first index of the string that is not whitespace.\n     * If string is empty or contains only whitespaces, returns -1\n     */\n    function firstNonWhitespaceIndex(str) {\n        for (var i = 0, len = str.length; i < len; i++) {\n            if (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n                return i;\n            }\n        }\n        return -1;\n    }\n    exports.firstNonWhitespaceIndex = firstNonWhitespaceIndex;\n    /**\n     * Returns the leading whitespace of the string.\n     * If the string contains only whitespaces, returns entire string\n     */\n    function getLeadingWhitespace(str) {\n        for (var i = 0, len = str.length; i < len; i++) {\n            if (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n                return str.substring(0, i);\n            }\n        }\n        return str;\n    }\n    exports.getLeadingWhitespace = getLeadingWhitespace;\n    /**\n     * Returns last index of the string that is not whitespace.\n     * If string is empty or contains only whitespaces, returns -1\n     */\n    function lastNonWhitespaceIndex(str, startIndex) {\n        if (startIndex === void 0) { startIndex = str.length - 1; }\n        for (var i = startIndex; i >= 0; i--) {\n            if (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n                return i;\n            }\n        }\n        return -1;\n    }\n    exports.lastNonWhitespaceIndex = lastNonWhitespaceIndex;\n    function compare(a, b) {\n        if (a < b) {\n            return -1;\n        }\n        else if (a > b) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    exports.compare = compare;\n    function isAsciiChar(code) {\n        return (code >= 97 && code <= 122) || (code >= 65 && code <= 90);\n    }\n    function equalsIgnoreCase(a, b) {\n        var len1 = a.length, len2 = b.length;\n        if (len1 !== len2) {\n            return false;\n        }\n        for (var i = 0; i < len1; i++) {\n            var codeA = a.charCodeAt(i), codeB = b.charCodeAt(i);\n            if (codeA === codeB) {\n                continue;\n            }\n            else if (isAsciiChar(codeA) && isAsciiChar(codeB)) {\n                var diff = Math.abs(codeA - codeB);\n                if (diff !== 0 && diff !== 32) {\n                    return false;\n                }\n            }\n            else {\n                if (String.fromCharCode(codeA).toLocaleLowerCase() !== String.fromCharCode(codeB).toLocaleLowerCase()) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    exports.equalsIgnoreCase = equalsIgnoreCase;\n    /**\n     * @returns the length of the common prefix of the two strings.\n     */\n    function commonPrefixLength(a, b) {\n        var i, len = Math.min(a.length, b.length);\n        for (i = 0; i < len; i++) {\n            if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n                return i;\n            }\n        }\n        return len;\n    }\n    exports.commonPrefixLength = commonPrefixLength;\n    /**\n     * @returns the length of the common suffix of the two strings.\n     */\n    function commonSuffixLength(a, b) {\n        var i, len = Math.min(a.length, b.length);\n        var aLastIndex = a.length - 1;\n        var bLastIndex = b.length - 1;\n        for (i = 0; i < len; i++) {\n            if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n                return i;\n            }\n        }\n        return len;\n    }\n    exports.commonSuffixLength = commonSuffixLength;\n    // --- unicode\n    // http://en.wikipedia.org/wiki/Surrogate_pair\n    // Returns the code point starting at a specified index in a string\n    // Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n    // Code points U+10000 to U+10FFFF are represented on two consecutive characters\n    //export function getUnicodePoint(str:string, index:number, len:number):number {\n    //\tlet chrCode = str.charCodeAt(index);\n    //\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n    //\t\tlet nextChrCode = str.charCodeAt(index + 1);\n    //\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n    //\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n    //\t\t}\n    //\t}\n    //\treturn chrCode;\n    //}\n    //export function isLeadSurrogate(chr:string) {\n    //\tlet chrCode = chr.charCodeAt(0);\n    //\treturn ;\n    //}\n    //\n    //export function isTrailSurrogate(chr:string) {\n    //\tlet chrCode = chr.charCodeAt(0);\n    //\treturn 0xDC00 <= chrCode && chrCode <= 0xDFFF;\n    //}\n    function isFullWidthCharacter(charCode) {\n        // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n        // http://jrgraphix.net/research/unicode_blocks.php\n        //          2E80 — 2EFF   CJK Radicals Supplement\n        //          2F00 — 2FDF   Kangxi Radicals\n        //          2FF0 — 2FFF   Ideographic Description Characters\n        //          3000 — 303F   CJK Symbols and Punctuation\n        //          3040 — 309F   Hiragana\n        //          30A0 — 30FF   Katakana\n        //          3100 — 312F   Bopomofo\n        //          3130 — 318F   Hangul Compatibility Jamo\n        //          3190 — 319F   Kanbun\n        //          31A0 — 31BF   Bopomofo Extended\n        //          31F0 — 31FF   Katakana Phonetic Extensions\n        //          3200 — 32FF   Enclosed CJK Letters and Months\n        //          3300 — 33FF   CJK Compatibility\n        //          3400 — 4DBF   CJK Unified Ideographs Extension A\n        //          4DC0 — 4DFF   Yijing Hexagram Symbols\n        //          4E00 — 9FFF   CJK Unified Ideographs\n        //          A000 — A48F   Yi Syllables\n        //          A490 — A4CF   Yi Radicals\n        //          AC00 — D7AF   Hangul Syllables\n        // [IGNORE] D800 — DB7F   High Surrogates\n        // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n        // [IGNORE] DC00 — DFFF   Low Surrogates\n        // [IGNORE] E000 — F8FF   Private Use Area\n        //          F900 — FAFF   CJK Compatibility Ideographs\n        // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n        // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n        // [IGNORE] FE00 — FE0F   Variation Selectors\n        // [IGNORE] FE20 — FE2F   Combining Half Marks\n        // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n        // [IGNORE] FE50 — FE6F   Small Form Variants\n        // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n        //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n        //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n        //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n        // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n        // [IGNORE] FFF0 — FFFF   Specials\n        charCode = +charCode; // @perf\n        return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n            || (charCode >= 0xF900 && charCode <= 0xFAFF)\n            || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n    }\n    exports.isFullWidthCharacter = isFullWidthCharacter;\n    /**\n     * Computes the difference score for two strings. More similar strings have a higher score.\n     * We use largest common subsequence dynamic programming approach but penalize in the end for length differences.\n     * Strings that have a large length difference will get a bad default score 0.\n     * Complexity - both time and space O(first.length * second.length)\n     * Dynamic programming LCS computation http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n     *\n     * @param first a string\n     * @param second a string\n     */\n    function difference(first, second, maxLenDelta) {\n        if (maxLenDelta === void 0) { maxLenDelta = 4; }\n        var lengthDifference = Math.abs(first.length - second.length);\n        // We only compute score if length of the currentWord and length of entry.name are similar.\n        if (lengthDifference > maxLenDelta) {\n            return 0;\n        }\n        // Initialize LCS (largest common subsequence) matrix.\n        var LCS = [];\n        var zeroArray = [];\n        var i, j;\n        for (i = 0; i < second.length + 1; ++i) {\n            zeroArray.push(0);\n        }\n        for (i = 0; i < first.length + 1; ++i) {\n            LCS.push(zeroArray);\n        }\n        for (i = 1; i < first.length + 1; ++i) {\n            for (j = 1; j < second.length + 1; ++j) {\n                if (first[i - 1] === second[j - 1]) {\n                    LCS[i][j] = LCS[i - 1][j - 1] + 1;\n                }\n                else {\n                    LCS[i][j] = Math.max(LCS[i - 1][j], LCS[i][j - 1]);\n                }\n            }\n        }\n        return LCS[first.length][second.length] - Math.sqrt(lengthDifference);\n    }\n    exports.difference = difference;\n    /**\n     * Returns an array in which every entry is the offset of a\n     * line. There is always one entry which is zero.\n     */\n    function computeLineStarts(text) {\n        var regexp = /\\r\\n|\\r|\\n/g, ret = [0], match;\n        while ((match = regexp.exec(text))) {\n            ret.push(regexp.lastIndex);\n        }\n        return ret;\n    }\n    exports.computeLineStarts = computeLineStarts;\n    /**\n     * Given a string and a max length returns a shorted version. Shorting\n     * happens at favorable positions - such as whitespace or punctuation characters.\n     */\n    function lcut(text, n) {\n        if (text.length < n) {\n            return text;\n        }\n        var segments = text.split(/\\b/), count = 0;\n        for (var i = segments.length - 1; i >= 0; i--) {\n            count += segments[i].length;\n            if (count > n) {\n                segments.splice(0, i);\n                break;\n            }\n        }\n        return segments.join(exports.empty).replace(/^\\s/, exports.empty);\n    }\n    exports.lcut = lcut;\n    // Escape codes\n    // http://en.wikipedia.org/wiki/ANSI_escape_code\n    var EL = /\\x1B\\x5B[12]?K/g; // Erase in line\n    var LF = /\\xA/g; // line feed\n    var COLOR_START = /\\x1b\\[\\d+m/g; // Color\n    var COLOR_END = /\\x1b\\[0?m/g; // Color\n    function removeAnsiEscapeCodes(str) {\n        if (str) {\n            str = str.replace(EL, '');\n            str = str.replace(LF, '\\n');\n            str = str.replace(COLOR_START, '');\n            str = str.replace(COLOR_END, '');\n        }\n        return str;\n    }\n    exports.removeAnsiEscapeCodes = removeAnsiEscapeCodes;\n    // -- UTF-8 BOM\n    var __utf8_bom = 65279;\n    exports.UTF8_BOM_CHARACTER = String.fromCharCode(__utf8_bom);\n    function startsWithUTF8BOM(str) {\n        return (str && str.length > 0 && str.charCodeAt(0) === __utf8_bom);\n    }\n    exports.startsWithUTF8BOM = startsWithUTF8BOM;\n    /**\n     * Appends two strings. If the appended result is longer than maxLength,\n     * trims the start of the result and replaces it with '...'.\n     */\n    function appendWithLimit(first, second, maxLength) {\n        var newLength = first.length + second.length;\n        if (newLength > maxLength) {\n            first = '...' + first.substr(newLength - maxLength);\n        }\n        if (second.length > maxLength) {\n            first += second.substr(second.length - maxLength);\n        }\n        else {\n            first += second;\n        }\n        return first;\n    }\n    exports.appendWithLimit = appendWithLimit;\n    function safeBtoa(str) {\n        return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n    }\n    exports.safeBtoa = safeBtoa;\n    function repeat(s, count) {\n        var result = '';\n        for (var i = 0; i < count; i++) {\n            result += s;\n        }\n        return result;\n    }\n    exports.repeat = repeat;\n});\n\ndefine(__m[25], __M([1,0,4,8]), function (require, exports, strings, map_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // Combined filters\n    /**\n     * @returns A filter which combines the provided set\n     * of filters with an or. The *first* filters that\n     * matches defined the return value of the returned\n     * filter.\n     */\n    function or() {\n        var filter = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filter[_i - 0] = arguments[_i];\n        }\n        return function (word, wordToMatchAgainst) {\n            for (var i = 0, len = filter.length; i < len; i++) {\n                var match = filter[i](word, wordToMatchAgainst);\n                if (match) {\n                    return match;\n                }\n            }\n            return null;\n        };\n    }\n    exports.or = or;\n    /**\n     * @returns A filter which combines the provided set\n     * of filters with an and. The combines matches are\n     * returned if *all* filters match.\n     */\n    function and() {\n        var filter = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filter[_i - 0] = arguments[_i];\n        }\n        return function (word, wordToMatchAgainst) {\n            var result = [];\n            for (var i = 0, len = filter.length; i < len; i++) {\n                var match = filter[i](word, wordToMatchAgainst);\n                if (!match) {\n                    return null;\n                }\n                result = result.concat(match);\n            }\n            return result;\n        };\n    }\n    exports.and = and;\n    // Prefix\n    exports.matchesStrictPrefix = function (word, wordToMatchAgainst) { return _matchesPrefix(false, word, wordToMatchAgainst); };\n    exports.matchesPrefix = function (word, wordToMatchAgainst) { return _matchesPrefix(true, word, wordToMatchAgainst); };\n    function _matchesPrefix(ignoreCase, word, wordToMatchAgainst) {\n        if (!wordToMatchAgainst || wordToMatchAgainst.length === 0 || wordToMatchAgainst.length < word.length) {\n            return null;\n        }\n        if (ignoreCase) {\n            word = word.toLowerCase();\n            wordToMatchAgainst = wordToMatchAgainst.toLowerCase();\n        }\n        for (var i = 0; i < word.length; i++) {\n            if (word[i] !== wordToMatchAgainst[i]) {\n                return null;\n            }\n        }\n        return word.length > 0 ? [{ start: 0, end: word.length }] : [];\n    }\n    // Contiguous Substring\n    function matchesContiguousSubString(word, wordToMatchAgainst) {\n        var index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n        if (index === -1) {\n            return null;\n        }\n        return [{ start: index, end: index + word.length }];\n    }\n    exports.matchesContiguousSubString = matchesContiguousSubString;\n    // Substring\n    function matchesSubString(word, wordToMatchAgainst) {\n        return _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n    }\n    exports.matchesSubString = matchesSubString;\n    function _matchesSubString(word, wordToMatchAgainst, i, j) {\n        if (i === word.length) {\n            return [];\n        }\n        else if (j === wordToMatchAgainst.length) {\n            return null;\n        }\n        else {\n            if (word[i] === wordToMatchAgainst[j]) {\n                var result = null;\n                if (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n                    return join({ start: j, end: j + 1 }, result);\n                }\n            }\n            return _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n        }\n    }\n    // CamelCase\n    function isLower(code) {\n        return 97 <= code && code <= 122;\n    }\n    function isUpper(code) {\n        return 65 <= code && code <= 90;\n    }\n    function isNumber(code) {\n        return 48 <= code && code <= 57;\n    }\n    function isWhitespace(code) {\n        return [32, 9, 10, 13].indexOf(code) > -1;\n    }\n    function isAlphanumeric(code) {\n        return isLower(code) || isUpper(code) || isNumber(code);\n    }\n    function join(head, tail) {\n        if (tail.length === 0) {\n            tail = [head];\n        }\n        else if (head.end === tail[0].start) {\n            tail[0].start = head.start;\n        }\n        else {\n            tail.unshift(head);\n        }\n        return tail;\n    }\n    function nextAnchor(camelCaseWord, start) {\n        for (var i = start; i < camelCaseWord.length; i++) {\n            var c = camelCaseWord.charCodeAt(i);\n            if (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n                return i;\n            }\n        }\n        return camelCaseWord.length;\n    }\n    function _matchesCamelCase(word, camelCaseWord, i, j) {\n        if (i === word.length) {\n            return [];\n        }\n        else if (j === camelCaseWord.length) {\n            return null;\n        }\n        else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n            return null;\n        }\n        else {\n            var result = null;\n            var nextUpperIndex = j + 1;\n            result = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n            while (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n                result = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n                nextUpperIndex++;\n            }\n            return result === null ? null : join({ start: j, end: j + 1 }, result);\n        }\n    }\n    // Heuristic to avoid computing camel case matcher for words that don't\n    // look like camelCaseWords.\n    function isCamelCaseWord(word) {\n        if (word.length > 60) {\n            return false;\n        }\n        var upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;\n        for (var i = 0; i < word.length; i++) {\n            code = word.charCodeAt(i);\n            if (isUpper(code)) {\n                upper++;\n            }\n            if (isLower(code)) {\n                lower++;\n            }\n            if (isAlphanumeric(code)) {\n                alpha++;\n            }\n            if (isNumber(code)) {\n                numeric++;\n            }\n        }\n        var upperPercent = upper / word.length;\n        var lowerPercent = lower / word.length;\n        var alphaPercent = alpha / word.length;\n        var numericPercent = numeric / word.length;\n        return lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;\n    }\n    // Heuristic to avoid computing camel case matcher for words that don't\n    // look like camel case patterns.\n    function isCamelCasePattern(word) {\n        var upper = 0, lower = 0, code = 0, whitespace = 0;\n        for (var i = 0; i < word.length; i++) {\n            code = word.charCodeAt(i);\n            if (isUpper(code)) {\n                upper++;\n            }\n            if (isLower(code)) {\n                lower++;\n            }\n            if (isWhitespace(code)) {\n                whitespace++;\n            }\n        }\n        if ((upper === 0 || lower === 0) && whitespace === 0) {\n            return word.length <= 30;\n        }\n        else {\n            return upper <= 5;\n        }\n    }\n    function matchesCamelCase(word, camelCaseWord) {\n        if (!camelCaseWord || camelCaseWord.length === 0) {\n            return null;\n        }\n        if (!isCamelCasePattern(word)) {\n            return null;\n        }\n        if (!isCamelCaseWord(camelCaseWord)) {\n            return null;\n        }\n        var result = null;\n        var i = 0;\n        while (i < camelCaseWord.length && (result = _matchesCamelCase(word.toLowerCase(), camelCaseWord, 0, i)) === null) {\n            i = nextAnchor(camelCaseWord, i + 1);\n        }\n        return result;\n    }\n    exports.matchesCamelCase = matchesCamelCase;\n    // Matches beginning of words supporting non-ASCII languages\n    // E.g. \"gp\" or \"g p\" will match \"Git: Pull\"\n    // Useful in cases where the target is words (e.g. command labels)\n    function matchesWords(word, target) {\n        if (!target || target.length === 0) {\n            return null;\n        }\n        var result = null;\n        var i = 0;\n        while (i < target.length && (result = _matchesWords(word.toLowerCase(), target, 0, i)) === null) {\n            i = nextWord(target, i + 1);\n        }\n        return result;\n    }\n    exports.matchesWords = matchesWords;\n    function _matchesWords(word, target, i, j) {\n        if (i === word.length) {\n            return [];\n        }\n        else if (j === target.length) {\n            return null;\n        }\n        else if (word[i] !== target[j].toLowerCase()) {\n            return null;\n        }\n        else {\n            var result = null;\n            var nextWordIndex = j + 1;\n            result = _matchesWords(word, target, i + 1, j + 1);\n            while (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {\n                result = _matchesWords(word, target, i + 1, nextWordIndex);\n                nextWordIndex++;\n            }\n            return result === null ? null : join({ start: j, end: j + 1 }, result);\n        }\n    }\n    function nextWord(word, start) {\n        for (var i = start; i < word.length; i++) {\n            var c = word.charCodeAt(i);\n            if (isWhitespace(c) || (i > 0 && isWhitespace(word.charCodeAt(i - 1)))) {\n                return i;\n            }\n        }\n        return word.length;\n    }\n    // Fuzzy\n    (function (SubstringMatching) {\n        SubstringMatching[SubstringMatching[\"Contiguous\"] = 0] = \"Contiguous\";\n        SubstringMatching[SubstringMatching[\"Separate\"] = 1] = \"Separate\";\n    })(exports.SubstringMatching || (exports.SubstringMatching = {}));\n    var SubstringMatching = exports.SubstringMatching;\n    exports.fuzzyContiguousFilter = or(exports.matchesPrefix, matchesCamelCase, matchesContiguousSubString);\n    var fuzzySeparateFilter = or(exports.matchesPrefix, matchesCamelCase, matchesSubString);\n    var fuzzyRegExpCache = new map_1.BoundedLinkedMap(10000); // bounded to 10000 elements\n    function matchesFuzzy(word, wordToMatchAgainst, enableSeparateSubstringMatching) {\n        if (enableSeparateSubstringMatching === void 0) { enableSeparateSubstringMatching = false; }\n        if (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {\n            return null; // return early for invalid input\n        }\n        // Form RegExp for wildcard matches\n        var regexp = fuzzyRegExpCache.get(word);\n        if (!regexp) {\n            regexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n            fuzzyRegExpCache.set(word, regexp);\n        }\n        // RegExp Filter\n        var match = regexp.exec(wordToMatchAgainst);\n        if (match) {\n            return [{ start: match.index, end: match.index + match[0].length }];\n        }\n        // Default Filter\n        return enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : exports.fuzzyContiguousFilter(word, wordToMatchAgainst);\n    }\n    exports.matchesFuzzy = matchesFuzzy;\n});\n\ndefine(__m[6], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var _typeof = {\n        number: 'number',\n        string: 'string',\n        undefined: 'undefined',\n        object: 'object',\n        function: 'function'\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n     */\n    function isArray(array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n            return true;\n        }\n        return false;\n    }\n    exports.isArray = isArray;\n    /**\n     * @returns whether the provided parameter is a JavaScript String or not.\n     */\n    function isString(str) {\n        if (typeof (str) === _typeof.string || str instanceof String) {\n            return true;\n        }\n        return false;\n    }\n    exports.isString = isString;\n    /**\n     * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n     */\n    function isStringArray(value) {\n        return isArray(value) && value.every(function (elem) { return isString(elem); });\n    }\n    exports.isStringArray = isStringArray;\n    /**\n     *\n     * @returns whether the provided parameter is of type `object` but **not**\n     *\t`null`, an `array`, a `regexp`, nor a `date`.\n     */\n    function isObject(obj) {\n        return typeof obj === _typeof.object\n            && obj !== null\n            && !Array.isArray(obj)\n            && !(obj instanceof RegExp)\n            && !(obj instanceof Date);\n    }\n    exports.isObject = isObject;\n    /**\n     * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n     * @returns whether the provided parameter is a JavaScript Number or not.\n     */\n    function isNumber(obj) {\n        if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n            return true;\n        }\n        return false;\n    }\n    exports.isNumber = isNumber;\n    /**\n     * @returns whether the provided parameter is a JavaScript Boolean or not.\n     */\n    function isBoolean(obj) {\n        return obj === true || obj === false;\n    }\n    exports.isBoolean = isBoolean;\n    /**\n     * @returns whether the provided parameter is undefined.\n     */\n    function isUndefined(obj) {\n        return typeof (obj) === _typeof.undefined;\n    }\n    exports.isUndefined = isUndefined;\n    /**\n     * @returns whether the provided parameter is undefined or null.\n     */\n    function isUndefinedOrNull(obj) {\n        return isUndefined(obj) || obj === null;\n    }\n    exports.isUndefinedOrNull = isUndefinedOrNull;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    /**\n     * @returns whether the provided parameter is an empty JavaScript Object or not.\n     */\n    function isEmptyObject(obj) {\n        if (!isObject(obj)) {\n            return false;\n        }\n        for (var key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.isEmptyObject = isEmptyObject;\n    /**\n     * @returns whether the provided parameter is a JavaScript Function or not.\n     */\n    function isFunction(obj) {\n        return typeof obj === _typeof.function;\n    }\n    exports.isFunction = isFunction;\n    /**\n     * @returns whether the provided parameters is are JavaScript Function or not.\n     */\n    function areFunctions() {\n        var objects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            objects[_i - 0] = arguments[_i];\n        }\n        return objects && objects.length > 0 && objects.every(isFunction);\n    }\n    exports.areFunctions = areFunctions;\n    function validateConstraints(args, constraints) {\n        var len = Math.min(args.length, constraints.length);\n        for (var i = 0; i < len; i++) {\n            validateConstraint(args[i], constraints[i]);\n        }\n    }\n    exports.validateConstraints = validateConstraints;\n    function validateConstraint(arg, constraint) {\n        if (isString(constraint)) {\n            if (typeof arg !== constraint) {\n                throw new Error(\"argument does not match constraint: typeof \" + constraint);\n            }\n        }\n        else if (isFunction(constraint)) {\n            if (arg instanceof constraint) {\n                return;\n            }\n            if (arg && arg.constructor === constraint) {\n                return;\n            }\n            if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n                return;\n            }\n            throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n        }\n    }\n    exports.validateConstraint = validateConstraint;\n    /**\n     * Creates a new object of the provided class and will call the constructor with\n     * any additional argument supplied.\n     */\n    function create(ctor) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var obj = Object.create(ctor.prototype);\n        ctor.apply(obj, args);\n        return obj;\n    }\n    exports.create = create;\n});\n\n\n\n\n\n\ndefine(__m[10], __M([1,0,6]), function (require, exports, types_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.empty = Object.freeze({\n        dispose: function () { }\n    });\n    function dispose() {\n        var disposables = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            disposables[_i - 0] = arguments[_i];\n        }\n        var first = disposables[0];\n        if (types_1.isArray(first)) {\n            disposables = first;\n        }\n        disposables.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    exports.dispose = dispose;\n    function combinedDisposable(disposables) {\n        return { dispose: function () { return dispose(disposables); } };\n    }\n    exports.combinedDisposable = combinedDisposable;\n    function toDisposable() {\n        var fns = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            fns[_i - 0] = arguments[_i];\n        }\n        return combinedDisposable(fns.map(function (fn) { return ({ dispose: fn }); }));\n    }\n    exports.toDisposable = toDisposable;\n    var Disposable = (function () {\n        function Disposable() {\n            this._toDispose = [];\n        }\n        Disposable.prototype.dispose = function () {\n            this._toDispose = dispose(this._toDispose);\n        };\n        Disposable.prototype._register = function (t) {\n            this._toDispose.push(t);\n            return t;\n        };\n        return Disposable;\n    }());\n    exports.Disposable = Disposable;\n    var Disposables = (function (_super) {\n        __extends(Disposables, _super);\n        function Disposables() {\n            _super.apply(this, arguments);\n        }\n        Disposables.prototype.add = function (arg) {\n            if (!Array.isArray(arg)) {\n                return this._register(arg);\n            }\n            else {\n                for (var _i = 0, arg_1 = arg; _i < arg_1.length; _i++) {\n                    var element = arg_1[_i];\n                    return this._register(element);\n                }\n            }\n        };\n        return Disposables;\n    }(Disposable));\n    exports.Disposables = Disposables;\n});\n\ndefine(__m[23], __M([1,0,6]), function (require, exports, Types) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function clone(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return obj;\n        }\n        if (obj instanceof RegExp) {\n            return obj;\n        }\n        var result = (Array.isArray(obj)) ? [] : {};\n        Object.keys(obj).forEach(function (key) {\n            if (obj[key] && typeof obj[key] === 'object') {\n                result[key] = clone(obj[key]);\n            }\n            else {\n                result[key] = obj[key];\n            }\n        });\n        return result;\n    }\n    exports.clone = clone;\n    function deepClone(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return obj;\n        }\n        var result = (Array.isArray(obj)) ? [] : {};\n        Object.getOwnPropertyNames(obj).forEach(function (key) {\n            if (obj[key] && typeof obj[key] === 'object') {\n                result[key] = deepClone(obj[key]);\n            }\n            else {\n                result[key] = obj[key];\n            }\n        });\n        return result;\n    }\n    exports.deepClone = deepClone;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    function cloneAndChange(obj, changer) {\n        return _cloneAndChange(obj, changer, []);\n    }\n    exports.cloneAndChange = cloneAndChange;\n    function _cloneAndChange(obj, changer, encounteredObjects) {\n        if (Types.isUndefinedOrNull(obj)) {\n            return obj;\n        }\n        var changed = changer(obj);\n        if (typeof changed !== 'undefined') {\n            return changed;\n        }\n        if (Types.isArray(obj)) {\n            var r1 = [];\n            for (var i1 = 0; i1 < obj.length; i1++) {\n                r1.push(_cloneAndChange(obj[i1], changer, encounteredObjects));\n            }\n            return r1;\n        }\n        if (Types.isObject(obj)) {\n            if (encounteredObjects.indexOf(obj) >= 0) {\n                throw new Error('Cannot clone recursive data-structure');\n            }\n            encounteredObjects.push(obj);\n            var r2 = {};\n            for (var i2 in obj) {\n                if (hasOwnProperty.call(obj, i2)) {\n                    r2[i2] = _cloneAndChange(obj[i2], changer, encounteredObjects);\n                }\n            }\n            encounteredObjects.pop();\n            return r2;\n        }\n        return obj;\n    }\n    // DON'T USE THESE FUNCTION UNLESS YOU KNOW HOW CHROME\n    // WORKS... WE HAVE SEEN VERY WEIRD BEHAVIOUR WITH CHROME >= 37\n    ///**\n    // * Recursively call Object.freeze on object and any properties that are objects.\n    // */\n    //export function deepFreeze(obj:any):void {\n    //\tObject.freeze(obj);\n    //\tObject.keys(obj).forEach((key) => {\n    //\t\tif(!(typeof obj[key] === 'object') || Object.isFrozen(obj[key])) {\n    //\t\t\treturn;\n    //\t\t}\n    //\n    //\t\tdeepFreeze(obj[key]);\n    //\t});\n    //\tif(!Object.isFrozen(obj)) {\n    //\t\tconsole.log('too warm');\n    //\t}\n    //}\n    //\n    //export function deepSeal(obj:any):void {\n    //\tObject.seal(obj);\n    //\tObject.keys(obj).forEach((key) => {\n    //\t\tif(!(typeof obj[key] === 'object') || Object.isSealed(obj[key])) {\n    //\t\t\treturn;\n    //\t\t}\n    //\n    //\t\tdeepSeal(obj[key]);\n    //\t});\n    //\tif(!Object.isSealed(obj)) {\n    //\t\tconsole.log('NOT sealed');\n    //\t}\n    //}\n    /**\n     * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n     * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n     */\n    function mixin(destination, source, overwrite) {\n        if (overwrite === void 0) { overwrite = true; }\n        if (!Types.isObject(destination)) {\n            return source;\n        }\n        if (Types.isObject(source)) {\n            Object.keys(source).forEach(function (key) {\n                if (key in destination) {\n                    if (overwrite) {\n                        if (Types.isObject(destination[key]) && Types.isObject(source[key])) {\n                            mixin(destination[key], source[key], overwrite);\n                        }\n                        else {\n                            destination[key] = source[key];\n                        }\n                    }\n                }\n                else {\n                    destination[key] = source[key];\n                }\n            });\n        }\n        return destination;\n    }\n    exports.mixin = mixin;\n    function assign(destination) {\n        var sources = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            sources[_i - 1] = arguments[_i];\n        }\n        sources.forEach(function (source) { return Object.keys(source).forEach(function (key) { return destination[key] = source[key]; }); });\n        return destination;\n    }\n    exports.assign = assign;\n    function toObject(arr, keyMap, valueMap) {\n        if (valueMap === void 0) { valueMap = function (x) { return x; }; }\n        return arr.reduce(function (o, d) { return assign(o, (_a = {}, _a[keyMap(d)] = valueMap(d), _a)); var _a; }, Object.create(null));\n    }\n    exports.toObject = toObject;\n    function equals(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === null || one === undefined || other === null || other === undefined) {\n            return false;\n        }\n        if (typeof one !== typeof other) {\n            return false;\n        }\n        if (typeof one !== 'object') {\n            return false;\n        }\n        if ((Array.isArray(one)) !== (Array.isArray(other))) {\n            return false;\n        }\n        var i, key;\n        if (Array.isArray(one)) {\n            if (one.length !== other.length) {\n                return false;\n            }\n            for (i = 0; i < one.length; i++) {\n                if (!equals(one[i], other[i])) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var oneKeys = [];\n            for (key in one) {\n                oneKeys.push(key);\n            }\n            oneKeys.sort();\n            var otherKeys = [];\n            for (key in other) {\n                otherKeys.push(key);\n            }\n            otherKeys.sort();\n            if (!equals(oneKeys, otherKeys)) {\n                return false;\n            }\n            for (i = 0; i < oneKeys.length; i++) {\n                if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    exports.equals = equals;\n    function ensureProperty(obj, property, defaultValue) {\n        if (typeof obj[property] === 'undefined') {\n            obj[property] = defaultValue;\n        }\n    }\n    exports.ensureProperty = ensureProperty;\n    function arrayToHash(array) {\n        var result = {};\n        for (var i = 0; i < array.length; ++i) {\n            result[array[i]] = true;\n        }\n        return result;\n    }\n    exports.arrayToHash = arrayToHash;\n    /**\n     * Given an array of strings, returns a function which, given a string\n     * returns true or false whether the string is in that array.\n     */\n    function createKeywordMatcher(arr, caseInsensitive) {\n        if (caseInsensitive === void 0) { caseInsensitive = false; }\n        if (caseInsensitive) {\n            arr = arr.map(function (x) { return x.toLowerCase(); });\n        }\n        var hash = arrayToHash(arr);\n        if (caseInsensitive) {\n            return function (word) {\n                return hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\n            };\n        }\n        else {\n            return function (word) {\n                return hash[word] !== undefined && hash.hasOwnProperty(word);\n            };\n        }\n    }\n    exports.createKeywordMatcher = createKeywordMatcher;\n    /**\n     * Started from TypeScript's __extends function to make a type a subclass of a specific class.\n     * Modified to work with properties already defined on the derivedClass, since we can't get TS\n     * to call this method before the constructor definition.\n     */\n    function derive(baseClass, derivedClass) {\n        for (var prop in baseClass) {\n            if (baseClass.hasOwnProperty(prop)) {\n                derivedClass[prop] = baseClass[prop];\n            }\n        }\n        derivedClass = derivedClass || function () { };\n        var basePrototype = baseClass.prototype;\n        var derivedPrototype = derivedClass.prototype;\n        derivedClass.prototype = Object.create(basePrototype);\n        for (var prop in derivedPrototype) {\n            if (derivedPrototype.hasOwnProperty(prop)) {\n                // handle getters and setters properly\n                Object.defineProperty(derivedClass.prototype, prop, Object.getOwnPropertyDescriptor(derivedPrototype, prop));\n            }\n        }\n        // Cast to any due to Bug 16188:PropertyDescriptor set and get function should be optional.\n        Object.defineProperty(derivedClass.prototype, 'constructor', { value: derivedClass, writable: true, configurable: true, enumerable: true });\n    }\n    exports.derive = derive;\n    /**\n     * Calls JSON.Stringify with a replacer to break apart any circular references.\n     * This prevents JSON.stringify from throwing the exception\n     *  \"Uncaught TypeError: Converting circular structure to JSON\"\n     */\n    function safeStringify(obj) {\n        var seen = [];\n        return JSON.stringify(obj, function (key, value) {\n            if (Types.isObject(value) || Array.isArray(value)) {\n                if (seen.indexOf(value) !== -1) {\n                    return '[Circular]';\n                }\n                else {\n                    seen.push(value);\n                }\n            }\n            return value;\n        });\n    }\n    exports.safeStringify = safeStringify;\n    function getOrDefault(obj, fn, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = null; }\n        var result = fn(obj);\n        return typeof result === 'undefined' ? defaultValue : result;\n    }\n    exports.getOrDefault = getOrDefault;\n});\n\ndefine(__m[13], __M([1,0,3]), function (require, exports, platform) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function _encode(ch) {\n        return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\n    function encodeURIComponent2(str) {\n        return encodeURIComponent(str).replace(/[!'()*]/g, _encode);\n    }\n    function encodeNoop(str) {\n        return str;\n    }\n    /**\n     * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n     * This class is a simple parser which creates the basic component paths\n     * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n     * and encoding.\n     *\n     *       foo://example.com:8042/over/there?name=ferret#nose\n     *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n     *        |           |            |            |        |\n     *     scheme     authority       path        query   fragment\n     *        |   _____________________|__\n     *       / \\ /                        \\\n     *       urn:example:animal:ferret:nose\n     *\n     *\n     */\n    var URI = (function () {\n        function URI() {\n            this._scheme = URI._empty;\n            this._authority = URI._empty;\n            this._path = URI._empty;\n            this._query = URI._empty;\n            this._fragment = URI._empty;\n            this._formatted = null;\n            this._fsPath = null;\n        }\n        URI.isUri = function (thing) {\n            if (thing instanceof URI) {\n                return true;\n            }\n            if (!thing) {\n                return false;\n            }\n            return typeof thing.authority === 'string'\n                && typeof thing.fragment === 'string'\n                && typeof thing.path === 'string'\n                && typeof thing.query === 'string'\n                && typeof thing.scheme === 'string';\n        };\n        Object.defineProperty(URI.prototype, \"scheme\", {\n            /**\n             * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n             * The part before the first colon.\n             */\n            get: function () {\n                return this._scheme;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(URI.prototype, \"authority\", {\n            /**\n             * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n             * The part between the first double slashes and the next slash.\n             */\n            get: function () {\n                return this._authority;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(URI.prototype, \"path\", {\n            /**\n             * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n             */\n            get: function () {\n                return this._path;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(URI.prototype, \"query\", {\n            /**\n             * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n             */\n            get: function () {\n                return this._query;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(URI.prototype, \"fragment\", {\n            /**\n             * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n             */\n            get: function () {\n                return this._fragment;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(URI.prototype, \"fsPath\", {\n            // ---- filesystem path -----------------------\n            /**\n             * Returns a string representing the corresponding file system path of this URI.\n             * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n             * uses the platform specific path separator. Will *not* validate the path for\n             * invalid characters and semantics. Will *not* look at the scheme of this URI.\n             */\n            get: function () {\n                if (!this._fsPath) {\n                    var value;\n                    if (this._authority && this._path && this.scheme === 'file') {\n                        // unc path: file://shares/c$/far/boo\n                        value = \"//\" + this._authority + this._path;\n                    }\n                    else if (URI._driveLetterPath.test(this._path)) {\n                        // windows drive letter: file:///c:/far/boo\n                        value = this._path[1].toLowerCase() + this._path.substr(2);\n                    }\n                    else {\n                        // other path\n                        value = this._path;\n                    }\n                    if (platform.isWindows) {\n                        value = value.replace(/\\//g, '\\\\');\n                    }\n                    this._fsPath = value;\n                }\n                return this._fsPath;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        // ---- modify to new -------------------------\n        URI.prototype.with = function (change) {\n            if (!change) {\n                return this;\n            }\n            var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n            if (scheme === void 0) {\n                scheme = this.scheme;\n            }\n            else if (scheme === null) {\n                scheme = '';\n            }\n            if (authority === void 0) {\n                authority = this.authority;\n            }\n            else if (authority === null) {\n                authority = '';\n            }\n            if (path === void 0) {\n                path = this.path;\n            }\n            else if (path === null) {\n                path = '';\n            }\n            if (query === void 0) {\n                query = this.query;\n            }\n            else if (query === null) {\n                query = '';\n            }\n            if (fragment === void 0) {\n                fragment = this.fragment;\n            }\n            else if (fragment === null) {\n                fragment = '';\n            }\n            if (scheme === this.scheme\n                && authority === this.authority\n                && path === this.path\n                && query === this.query\n                && fragment === this.fragment) {\n                return this;\n            }\n            var ret = new URI();\n            ret._scheme = scheme;\n            ret._authority = authority;\n            ret._path = path;\n            ret._query = query;\n            ret._fragment = fragment;\n            URI._validate(ret);\n            return ret;\n        };\n        // ---- parse & validate ------------------------\n        URI.parse = function (value) {\n            var ret = new URI();\n            var data = URI._parseComponents(value);\n            ret._scheme = data.scheme;\n            ret._authority = decodeURIComponent(data.authority);\n            ret._path = decodeURIComponent(data.path);\n            ret._query = decodeURIComponent(data.query);\n            ret._fragment = decodeURIComponent(data.fragment);\n            URI._validate(ret);\n            return ret;\n        };\n        URI.file = function (path) {\n            var ret = new URI();\n            ret._scheme = 'file';\n            // normalize to fwd-slashes\n            path = path.replace(/\\\\/g, URI._slash);\n            // check for authority as used in UNC shares\n            // or use the path as given\n            if (path[0] === URI._slash && path[0] === path[1]) {\n                var idx = path.indexOf(URI._slash, 2);\n                if (idx === -1) {\n                    ret._authority = path.substring(2);\n                }\n                else {\n                    ret._authority = path.substring(2, idx);\n                    ret._path = path.substring(idx);\n                }\n            }\n            else {\n                ret._path = path;\n            }\n            // Ensure that path starts with a slash\n            // or that it is at least a slash\n            if (ret._path[0] !== URI._slash) {\n                ret._path = URI._slash + ret._path;\n            }\n            URI._validate(ret);\n            return ret;\n        };\n        URI._parseComponents = function (value) {\n            var ret = {\n                scheme: URI._empty,\n                authority: URI._empty,\n                path: URI._empty,\n                query: URI._empty,\n                fragment: URI._empty,\n            };\n            var match = URI._regexp.exec(value);\n            if (match) {\n                ret.scheme = match[2] || ret.scheme;\n                ret.authority = match[4] || ret.authority;\n                ret.path = match[5] || ret.path;\n                ret.query = match[7] || ret.query;\n                ret.fragment = match[9] || ret.fragment;\n            }\n            return ret;\n        };\n        URI.from = function (components) {\n            return new URI().with(components);\n        };\n        URI._validate = function (ret) {\n            // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n            // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n            if (ret.scheme && !URI._schemePattern.test(ret.scheme)) {\n                throw new Error('[UriError]: Scheme contains illegal characters.');\n            }\n            // path, http://tools.ietf.org/html/rfc3986#section-3.3\n            // If a URI contains an authority component, then the path component\n            // must either be empty or begin with a slash (\"/\") character.  If a URI\n            // does not contain an authority component, then the path cannot begin\n            // with two slash characters (\"//\").\n            if (ret.path) {\n                if (ret.authority) {\n                    if (!URI._singleSlashStart.test(ret.path)) {\n                        throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n                    }\n                }\n                else {\n                    if (URI._doubleSlashStart.test(ret.path)) {\n                        throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n                    }\n                }\n            }\n        };\n        // ---- printing/externalize ---------------------------\n        /**\n         *\n         * @param skipEncoding Do not encode the result, default is `false`\n         */\n        URI.prototype.toString = function (skipEncoding) {\n            if (skipEncoding === void 0) { skipEncoding = false; }\n            if (!skipEncoding) {\n                if (!this._formatted) {\n                    this._formatted = URI._asFormatted(this, false);\n                }\n                return this._formatted;\n            }\n            else {\n                // we don't cache that\n                return URI._asFormatted(this, true);\n            }\n        };\n        URI._asFormatted = function (uri, skipEncoding) {\n            var encoder = !skipEncoding\n                ? encodeURIComponent2\n                : encodeNoop;\n            var parts = [];\n            var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n            if (scheme) {\n                parts.push(scheme, ':');\n            }\n            if (authority || scheme === 'file') {\n                parts.push('//');\n            }\n            if (authority) {\n                authority = authority.toLowerCase();\n                var idx = authority.indexOf(':');\n                if (idx === -1) {\n                    parts.push(encoder(authority));\n                }\n                else {\n                    parts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\n                }\n            }\n            if (path) {\n                // lower-case windows drive letters in /C:/fff or C:/fff\n                var m = URI._upperCaseDrive.exec(path);\n                if (m) {\n                    if (m[1]) {\n                        path = '/' + m[2].toLowerCase() + path.substr(3); // \"/c:\".length === 3\n                    }\n                    else {\n                        path = m[2].toLowerCase() + path.substr(2); // // \"c:\".length === 2\n                    }\n                }\n                // encode every segement but not slashes\n                // make sure that # and ? are always encoded\n                // when occurring in paths - otherwise the result\n                // cannot be parsed back again\n                var lastIdx = 0;\n                while (true) {\n                    var idx = path.indexOf(URI._slash, lastIdx);\n                    if (idx === -1) {\n                        parts.push(encoder(path.substring(lastIdx)).replace(/[#?]/, _encode));\n                        break;\n                    }\n                    parts.push(encoder(path.substring(lastIdx, idx)).replace(/[#?]/, _encode), URI._slash);\n                    lastIdx = idx + 1;\n                }\n                ;\n            }\n            if (query) {\n                parts.push('?', encoder(query));\n            }\n            if (fragment) {\n                parts.push('#', encoder(fragment));\n            }\n            return parts.join(URI._empty);\n        };\n        URI.prototype.toJSON = function () {\n            return {\n                scheme: this.scheme,\n                authority: this.authority,\n                path: this.path,\n                fsPath: this.fsPath,\n                query: this.query,\n                fragment: this.fragment,\n                external: this.toString(),\n                $mid: 1\n            };\n        };\n        URI.revive = function (data) {\n            var result = new URI();\n            result._scheme = data.scheme;\n            result._authority = data.authority;\n            result._path = data.path;\n            result._query = data.query;\n            result._fragment = data.fragment;\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            URI._validate(result);\n            return result;\n        };\n        URI._empty = '';\n        URI._slash = '/';\n        URI._regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n        URI._driveLetterPath = /^\\/[a-zA-z]:/;\n        URI._upperCaseDrive = /^(\\/)?([A-Z]:)/;\n        URI._schemePattern = /^\\w[\\w\\d+.-]*$/;\n        URI._singleSlashStart = /^\\//;\n        URI._doubleSlashStart = /^\\/\\//;\n        return URI;\n    }());\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = URI;\n});\n\n/**\n * Extracted from https://github.com/winjs/winjs\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\n * Copyright (c) Microsoft Corporation.\n * All Rights Reserved.\n * Licensed under the MIT License.\n */\n(function() {\n\nvar _modules = {};\n_modules[\"WinJS/Core/_WinJS\"] = {};\n\nvar _winjs = function(moduleId, deps, factory) {\n    var exports = {};\n    var exportsPassedIn = false;\n\n    var depsValues = deps.map(function(dep) {\n        if (dep === 'exports') {\n            exportsPassedIn = true;\n            return exports;\n        }\n        return _modules[dep];\n    });\n\n    var result = factory.apply({}, depsValues);\n\n    _modules[moduleId] = exportsPassedIn ? exports : result;\n};\n\n\n_winjs(\"WinJS/Core/_Global\", [], function () {\n    \"use strict\";\n\n    // Appease jshint\n    /* global window, self, global */\n\n    var globalObject =\n        typeof window !== 'undefined' ? window :\n        typeof self !== 'undefined' ? self :\n        typeof global !== 'undefined' ? global :\n        {};\n    return globalObject;\n});\n\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\n    \"use strict\";\n\n    var hasWinRT = !!_Global.Windows;\n\n    function markSupportedForProcessing(func) {\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n        /// or WinJS.Binding.processAll.\n        /// </summary>\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n        /// The function to be marked as compatible with declarative processing.\n        /// </param>\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n        /// The input function.\n        /// </returns>\n        /// </signature>\n        func.supportedForProcessing = true;\n        return func;\n    }\n\n    return {\n        hasWinRT: hasWinRT,\n        markSupportedForProcessing: markSupportedForProcessing,\n        _setImmediate: _Global.setImmediate ? _Global.setImmediate.bind(_Global) : function (handler) {\n            _Global.setTimeout(handler, 0);\n        }\n    };\n});\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\n    \"use strict\";\n\n    return _Global.msWriteProfilerMark || function () { };\n});\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\n    \"use strict\";\n\n    function initializeProperties(target, members, prefix) {\n        var keys = Object.keys(members);\n        var isArray = Array.isArray(target);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    if (prefix && member.setName && typeof member.setName === 'function') {\n                        member.setName(prefix + \".\" + key);\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\n                continue;\n            }\n            if (isArray) {\n                target.forEach(function (target) {\n                    target[key] = member;\n                });\n            } else {\n                target[key] = member;\n            }\n        }\n        if (properties) {\n            if (isArray) {\n                target.forEach(function (target) {\n                    Object.defineProperties(target, properties);\n                });\n            } else {\n                Object.defineProperties(target, properties);\n            }\n        }\n    }\n\n    (function () {\n\n        var _rootNamespace = _WinJS;\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function createNamespace(parentNamespace, name) {\n            var currentNamespace = parentNamespace || {};\n            if (name) {\n                var namespaceFragments = name.split(\".\");\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\n                    currentNamespace = _WinJS;\n                    namespaceFragments.splice(0, 1);\n                }\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                    var namespaceName = namespaceFragments[i];\n                    if (!currentNamespace[namespaceName]) {\n                        Object.defineProperty(currentNamespace, namespaceName,\n                            { value: {}, writable: false, enumerable: true, configurable: true }\n                        );\n                    }\n                    currentNamespace = currentNamespace[namespaceName];\n                }\n            }\n            return currentNamespace;\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = createNamespace(parentNamespace, name);\n\n            if (members) {\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(_Global, name, members);\n        }\n\n        var LazyStates = {\n            uninitialized: 1,\n            working: 2,\n            initialized: 3,\n        };\n\n        function lazy(f) {\n            var name;\n            var state = LazyStates.uninitialized;\n            var result;\n            return {\n                setName: function (value) {\n                    name = value;\n                },\n                get: function () {\n                    switch (state) {\n                        case LazyStates.initialized:\n                            return result;\n\n                        case LazyStates.uninitialized:\n                            state = LazyStates.working;\n                            try {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\n                                result = f();\n                            } finally {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\n                                state = LazyStates.uninitialized;\n                            }\n                            f = null;\n                            state = LazyStates.initialized;\n                            return result;\n\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            throw \"Illegal\";\n                    }\n                },\n                set: function (value) {\n                    switch (state) {\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            state = LazyStates.initialized;\n                            result = value;\n                            break;\n                    }\n                },\n                enumerable: true,\n                configurable: true,\n            };\n        }\n\n        // helper for defining AMD module members\n        function moduleDefine(exports, name, members) {\n            var target = [exports];\n            var publicNS = null;\n            if (name) {\n                publicNS = createNamespace(_Global, name);\n                target.push(publicNS);\n            }\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\n            return publicNS;\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true },\n\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\n\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })();\n\n    (function () {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        _WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })();\n\n    return {\n        Namespace: _WinJS.Namespace,\n        Class: _WinJS.Class\n    };\n\n});\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\n    \"use strict\";\n\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n        /// <summary locid=\"WinJS.ErrorFromName\">\n        /// Creates an Error object with the specified name and message properties.\n        /// </summary>\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n        /// </signature>\n        this.name = name;\n        this.message = message || name;\n    }, {\n        /* empty */\n    }, {\n        supportedForProcessing: false,\n    });\n\n    _Base.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: ErrorFromName\n    });\n\n    return ErrorFromName;\n\n});\n\n\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        };\n    }\n\n    function createEventProperties() {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = _Base.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event is raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n});\n\n\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\n    \"use strict\";\n\n    function nop(v) {\n        return v;\n    }\n\n    return {\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\n    };\n});\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\n    \"use strict\";\n\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise: 0x01,\n        thenPromise: 0x02,\n        errorPromise: 0x04,\n        exceptionPromise: 0x08,\n        completePromise: 0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            // We can special case our own intermediate promises which are not in a\n            //  terminal state by just pushing this promise as a listener without\n            //  having to create new indirection functions\n            if (waitedUpon instanceof ThenPromise &&\n                waitedUpon._state !== state_error &&\n                waitedUpon._state !== state_success) {\n                pushListener(waitedUpon, { promise: promise });\n            } else {\n                var error = function (value) {\n                    if (waitedUpon._errorId) {\n                        promise._chainedError(value, waitedUpon);\n                    } else {\n                        // Because this is an interop boundary we want to indicate that this\n                        //  error has been handled by the promise infrastructure before we\n                        //  begin a new handling chain.\n                        //\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                        promise._error(value);\n                    }\n                };\n                error.handlesOnError = true;\n                waitedUpon.then(\n                    promise._completed.bind(promise),\n                    error,\n                    promise._progress.bind(promise)\n                );\n            }\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = _Base.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\n\n            if (target) {\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    _Trace._traceAsyncCallbackCompleted();\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\n\n            if (target) {\n                var asyncCallbackStarted = false;\n                try {\n                    if (onError) {\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                        asyncCallbackStarted = true;\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value));\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    if (asyncCallbackStarted) {\n                        _Trace._traceAsyncCallbackCompleted();\n                    }\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = _Base.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                Promise._doneHandler(value);\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = _Base.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    Promise._doneHandler(ex);\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = _Global.setTimeout(c, timeoutMS);\n                } else {\n                    _BaseCoreUtils._setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    _Global.clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); };\n        var cancelTimeout = function () { timeout.cancel(); };\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = _Base.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n                // BEGIN monaco change\n                try {\n                    if (this._oncancel) {\n                        this._oncancel();\n                    } else {\n                        throw new Error('Promise did not implement oncancel');\n                    }\n                } catch (ex) {\n                    // Access fields to get them created\n                    var msg = ex.message;\n                    var stack = ex.stack;\n                    promiseEventListeners.dispatchEvent('error', ex);\n                }\n                // END monaco change\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error) {\n                        var keys = Object.keys(values);\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\n                //\n                // Returns a promise which on cancelation will still result in downstream cancelation while\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\n                //  'input' to be shared amoung various consumers.\n                //\n                if (!Promise.is(input)) {\n                    return Promise.wrap(input);\n                }\n                var complete;\n                var error;\n                var output = new Promise(\n                    function (c, e) {\n                        complete = c;\n                        error = e;\n                    },\n                    function () {\n                        complete = null;\n                        error = null;\n                        oncancel && oncancel();\n                    }\n                );\n                input.then(\n                    function (v) { complete && complete(v); },\n                    function (e) { error && error(e); }\n                );\n                return output;\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\n\n    Promise._doneHandler = function (value) {\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\n            throw value;\n        });\n    };\n\n    return {\n        PromiseStateMachine: PromiseStateMachine,\n        Promise: Promise,\n        state_created: state_created\n    };\n});\n\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\n    \"use strict\";\n\n    _Base.Namespace.define(\"WinJS\", {\n        Promise: _StateMachine.Promise\n    });\n\n    return _StateMachine.Promise;\n});\n\nvar exported = _modules[\"WinJS/Core/_WinJS\"];\n\nif (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n    define(\"vs/base/common/winjs.base.raw\", exported);\n} else {\n    module.exports = exported;\n}\n\nif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n    _modules[\"WinJS/Core/_BaseCoreUtils\"]._setImmediate = function(handler) {\n        return process.nextTick(handler);\n    };\n}\n\n})();\ndefine(__m[9], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * A position in the editor.\n     */\n    var Position = (function () {\n        function Position(lineNumber, column) {\n            this.lineNumber = lineNumber;\n            this.column = column;\n        }\n        /**\n         * Test if this position equals other position\n         */\n        Position.prototype.equals = function (other) {\n            return Position.equals(this, other);\n        };\n        /**\n         * Test if position `a` equals position `b`\n         */\n        Position.equals = function (a, b) {\n            if (!a && !b) {\n                return true;\n            }\n            return (!!a &&\n                !!b &&\n                a.lineNumber === b.lineNumber &&\n                a.column === b.column);\n        };\n        /**\n         * Test if this position is before other position.\n         * If the two positions are equal, the result will be false.\n         */\n        Position.prototype.isBefore = function (other) {\n            return Position.isBefore(this, other);\n        };\n        /**\n         * Test if position `a` is before position `b`.\n         * If the two positions are equal, the result will be false.\n         */\n        Position.isBefore = function (a, b) {\n            if (a.lineNumber < b.lineNumber) {\n                return true;\n            }\n            if (b.lineNumber < a.lineNumber) {\n                return false;\n            }\n            return a.column < b.column;\n        };\n        /**\n         * Test if this position is before other position.\n         * If the two positions are equal, the result will be true.\n         */\n        Position.prototype.isBeforeOrEqual = function (other) {\n            return Position.isBeforeOrEqual(this, other);\n        };\n        /**\n         * Test if position `a` is before position `b`.\n         * If the two positions are equal, the result will be true.\n         */\n        Position.isBeforeOrEqual = function (a, b) {\n            if (a.lineNumber < b.lineNumber) {\n                return true;\n            }\n            if (b.lineNumber < a.lineNumber) {\n                return false;\n            }\n            return a.column <= b.column;\n        };\n        /**\n         * Clone this position.\n         */\n        Position.prototype.clone = function () {\n            return new Position(this.lineNumber, this.column);\n        };\n        /**\n         * Convert to a human-readable representation.\n         */\n        Position.prototype.toString = function () {\n            return '(' + this.lineNumber + ',' + this.column + ')';\n        };\n        // ---\n        /**\n         * Create a `Position` from an `IPosition`.\n         */\n        Position.lift = function (pos) {\n            return new Position(pos.lineNumber, pos.column);\n        };\n        /**\n         * Test if `obj` is an `IPosition`.\n         */\n        Position.isIPosition = function (obj) {\n            return (obj\n                && (typeof obj.lineNumber === 'number')\n                && (typeof obj.column === 'number'));\n        };\n        return Position;\n    }());\n    exports.Position = Position;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[7], __M([1,0,9]), function (require, exports, position_1) {\n    'use strict';\n    /**\n     * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n     */\n    var Range = (function () {\n        function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n            if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n                this.startLineNumber = endLineNumber;\n                this.startColumn = endColumn;\n                this.endLineNumber = startLineNumber;\n                this.endColumn = startColumn;\n            }\n            else {\n                this.startLineNumber = startLineNumber;\n                this.startColumn = startColumn;\n                this.endLineNumber = endLineNumber;\n                this.endColumn = endColumn;\n            }\n        }\n        /**\n         * Test if this range is empty.\n         */\n        Range.prototype.isEmpty = function () {\n            return Range.isEmpty(this);\n        };\n        /**\n         * Test if `range` is empty.\n         */\n        Range.isEmpty = function (range) {\n            return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n        };\n        /**\n         * Test if position is in this range. If the position is at the edges, will return true.\n         */\n        Range.prototype.containsPosition = function (position) {\n            return Range.containsPosition(this, position);\n        };\n        /**\n         * Test if `position` is in `range`. If the position is at the edges, will return true.\n         */\n        Range.containsPosition = function (range, position) {\n            if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n                return false;\n            }\n            if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n                return false;\n            }\n            if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n                return false;\n            }\n            return true;\n        };\n        /**\n         * Test if range is in this range. If the range is equal to this range, will return true.\n         */\n        Range.prototype.containsRange = function (range) {\n            return Range.containsRange(this, range);\n        };\n        /**\n         * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n         */\n        Range.containsRange = function (range, otherRange) {\n            if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n                return false;\n            }\n            if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n                return false;\n            }\n            if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n                return false;\n            }\n            if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n                return false;\n            }\n            return true;\n        };\n        /**\n         * A reunion of the two ranges.\n         * The smallest position will be used as the start point, and the largest one as the end point.\n         */\n        Range.prototype.plusRange = function (range) {\n            return Range.plusRange(this, range);\n        };\n        /**\n         * A reunion of the two ranges.\n         * The smallest position will be used as the start point, and the largest one as the end point.\n         */\n        Range.plusRange = function (a, b) {\n            var startLineNumber, startColumn, endLineNumber, endColumn;\n            if (b.startLineNumber < a.startLineNumber) {\n                startLineNumber = b.startLineNumber;\n                startColumn = b.startColumn;\n            }\n            else if (b.startLineNumber === a.startLineNumber) {\n                startLineNumber = b.startLineNumber;\n                startColumn = Math.min(b.startColumn, a.startColumn);\n            }\n            else {\n                startLineNumber = a.startLineNumber;\n                startColumn = a.startColumn;\n            }\n            if (b.endLineNumber > a.endLineNumber) {\n                endLineNumber = b.endLineNumber;\n                endColumn = b.endColumn;\n            }\n            else if (b.endLineNumber === a.endLineNumber) {\n                endLineNumber = b.endLineNumber;\n                endColumn = Math.max(b.endColumn, a.endColumn);\n            }\n            else {\n                endLineNumber = a.endLineNumber;\n                endColumn = a.endColumn;\n            }\n            return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n        };\n        /**\n         * A intersection of the two ranges.\n         */\n        Range.prototype.intersectRanges = function (range) {\n            return Range.intersectRanges(this, range);\n        };\n        /**\n         * A intersection of the two ranges.\n         */\n        Range.intersectRanges = function (a, b) {\n            var resultStartLineNumber = a.startLineNumber, resultStartColumn = a.startColumn, resultEndLineNumber = a.endLineNumber, resultEndColumn = a.endColumn, otherStartLineNumber = b.startLineNumber, otherStartColumn = b.startColumn, otherEndLineNumber = b.endLineNumber, otherEndColumn = b.endColumn;\n            if (resultStartLineNumber < otherStartLineNumber) {\n                resultStartLineNumber = otherStartLineNumber;\n                resultStartColumn = otherStartColumn;\n            }\n            else if (resultStartLineNumber === otherStartLineNumber) {\n                resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n            }\n            if (resultEndLineNumber > otherEndLineNumber) {\n                resultEndLineNumber = otherEndLineNumber;\n                resultEndColumn = otherEndColumn;\n            }\n            else if (resultEndLineNumber === otherEndLineNumber) {\n                resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n            }\n            // Check if selection is now empty\n            if (resultStartLineNumber > resultEndLineNumber) {\n                return null;\n            }\n            if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n                return null;\n            }\n            return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n        };\n        /**\n         * Test if this range equals other.\n         */\n        Range.prototype.equalsRange = function (other) {\n            return Range.equalsRange(this, other);\n        };\n        /**\n         * Test if range `a` equals `b`.\n         */\n        Range.equalsRange = function (a, b) {\n            return (!!a &&\n                !!b &&\n                a.startLineNumber === b.startLineNumber &&\n                a.startColumn === b.startColumn &&\n                a.endLineNumber === b.endLineNumber &&\n                a.endColumn === b.endColumn);\n        };\n        /**\n         * Return the end position (which will be after or equal to the start position)\n         */\n        Range.prototype.getEndPosition = function () {\n            return new position_1.Position(this.endLineNumber, this.endColumn);\n        };\n        /**\n         * Return the start position (which will be before or equal to the end position)\n         */\n        Range.prototype.getStartPosition = function () {\n            return new position_1.Position(this.startLineNumber, this.startColumn);\n        };\n        /**\n         * Clone this range.\n         */\n        Range.prototype.cloneRange = function () {\n            return new Range(this.startLineNumber, this.startColumn, this.endLineNumber, this.endColumn);\n        };\n        /**\n         * Transform to a user presentable string representation.\n         */\n        Range.prototype.toString = function () {\n            return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n        };\n        /**\n         * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n         */\n        Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n            return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        };\n        /**\n         * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n         */\n        Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n            return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        };\n        /**\n         * Create a new empty range using this range's start position.\n         */\n        Range.prototype.collapseToStart = function () {\n            return Range.collapseToStart(this);\n        };\n        /**\n         * Create a new empty range using this range's start position.\n         */\n        Range.collapseToStart = function (range) {\n            return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n        };\n        // ---\n        /**\n         * Create a `Range` from an `IRange`.\n         */\n        Range.lift = function (range) {\n            if (!range) {\n                return null;\n            }\n            return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        };\n        /**\n         * Test if `obj` is an `IRange`.\n         */\n        Range.isIRange = function (obj) {\n            return (obj\n                && (typeof obj.startLineNumber === 'number')\n                && (typeof obj.startColumn === 'number')\n                && (typeof obj.endLineNumber === 'number')\n                && (typeof obj.endColumn === 'number'));\n        };\n        /**\n         * Test if the two ranges are touching in any way.\n         */\n        Range.areIntersectingOrTouching = function (a, b) {\n            // Check if `a` is before `b`\n            if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n                return false;\n            }\n            // Check if `b` is before `a`\n            if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n                return false;\n            }\n            // These ranges must intersect\n            return true;\n        };\n        /**\n         * A function that compares ranges, useful for sorting ranges\n         * It will first compare ranges on the startPosition and then on the endPosition\n         */\n        Range.compareRangesUsingStarts = function (a, b) {\n            var aStartLineNumber = a.startLineNumber | 0;\n            var bStartLineNumber = b.startLineNumber | 0;\n            var aStartColumn = a.startColumn | 0;\n            var bStartColumn = b.startColumn | 0;\n            var aEndLineNumber = a.endLineNumber | 0;\n            var bEndLineNumber = b.endLineNumber | 0;\n            var aEndColumn = a.endColumn | 0;\n            var bEndColumn = b.endColumn | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                if (aStartColumn === bStartColumn) {\n                    if (aEndLineNumber === bEndLineNumber) {\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        };\n        /**\n         * A function that compares ranges, useful for sorting ranges\n         * It will first compare ranges on the endPosition and then on the startPosition\n         */\n        Range.compareRangesUsingEnds = function (a, b) {\n            if (a.endLineNumber === b.endLineNumber) {\n                if (a.endColumn === b.endColumn) {\n                    if (a.startLineNumber === b.startLineNumber) {\n                        return a.startColumn - b.startColumn;\n                    }\n                    return a.startLineNumber - b.startLineNumber;\n                }\n                return a.endColumn - b.endColumn;\n            }\n            return a.endLineNumber - b.endLineNumber;\n        };\n        /**\n         * Test if the range spans multiple lines.\n         */\n        Range.spansMultipleLines = function (range) {\n            return range.endLineNumber > range.startLineNumber;\n        };\n        return Range;\n    }());\n    exports.Range = Range;\n});\n\n\n\n\n\n\ndefine(__m[28], __M([1,0,7]), function (require, exports, range_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /**\n     * The direction of a selection.\n     */\n    (function (SelectionDirection) {\n        /**\n         * The selection starts above where it ends.\n         */\n        SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n        /**\n         * The selection starts below where it ends.\n         */\n        SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n    })(exports.SelectionDirection || (exports.SelectionDirection = {}));\n    var SelectionDirection = exports.SelectionDirection;\n    /**\n     * A selection in the editor.\n     * The selection is a range that has an orientation.\n     */\n    var Selection = (function (_super) {\n        __extends(Selection, _super);\n        function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n            _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n            this.selectionStartLineNumber = selectionStartLineNumber;\n            this.selectionStartColumn = selectionStartColumn;\n            this.positionLineNumber = positionLineNumber;\n            this.positionColumn = positionColumn;\n        }\n        /**\n         * Clone this selection.\n         */\n        Selection.prototype.clone = function () {\n            return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n        };\n        /**\n         * Transform to a human-readable representation.\n         */\n        Selection.prototype.toString = function () {\n            return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n        };\n        /**\n         * Test if equals other selection.\n         */\n        Selection.prototype.equalsSelection = function (other) {\n            return (Selection.selectionsEqual(this, other));\n        };\n        /**\n         * Test if the two selections are equal.\n         */\n        Selection.selectionsEqual = function (a, b) {\n            return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n                a.selectionStartColumn === b.selectionStartColumn &&\n                a.positionLineNumber === b.positionLineNumber &&\n                a.positionColumn === b.positionColumn);\n        };\n        /**\n         * Get directions (LTR or RTL).\n         */\n        Selection.prototype.getDirection = function () {\n            if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n                return SelectionDirection.LTR;\n            }\n            return SelectionDirection.RTL;\n        };\n        /**\n         * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n         */\n        Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n            if (this.getDirection() === SelectionDirection.LTR) {\n                return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n            }\n            return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n        };\n        /**\n         * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n         */\n        Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n            if (this.getDirection() === SelectionDirection.LTR) {\n                return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n            }\n            return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n        };\n        // ----\n        /**\n         * Create a `Selection` from an `ISelection`.\n         */\n        Selection.liftSelection = function (sel) {\n            return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        };\n        /**\n         * `a` equals `b`.\n         */\n        Selection.selectionsArrEqual = function (a, b) {\n            if (a && !b || !a && b) {\n                return false;\n            }\n            if (!a && !b) {\n                return true;\n            }\n            if (a.length !== b.length) {\n                return false;\n            }\n            for (var i = 0, len = a.length; i < len; i++) {\n                if (!this.selectionsEqual(a[i], b[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        /**\n         * Test if `obj` is an `ISelection`.\n         */\n        Selection.isISelection = function (obj) {\n            return (obj\n                && (typeof obj.selectionStartLineNumber === 'number')\n                && (typeof obj.selectionStartColumn === 'number')\n                && (typeof obj.positionLineNumber === 'number')\n                && (typeof obj.positionColumn === 'number'));\n        };\n        /**\n         * Create with a direction.\n         */\n        Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n            if (direction === SelectionDirection.LTR) {\n                return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n            }\n            return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n        };\n        return Selection;\n    }(range_1.Range));\n    exports.Selection = Selection;\n});\n\n\n\n\n\n\ndefine(__m[29], __M([1,0,24,4]), function (require, exports, diff_1, strings) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var MAXIMUM_RUN_TIME = 5000; // 5 seconds\n    var MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n    function computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate) {\n        var diffAlgo = new diff_1.LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n        return diffAlgo.ComputeDiff();\n    }\n    var MarkerSequence = (function () {\n        function MarkerSequence(buffer, startMarkers, endMarkers) {\n            this.buffer = buffer;\n            this.startMarkers = startMarkers;\n            this.endMarkers = endMarkers;\n        }\n        MarkerSequence.prototype.equals = function (other) {\n            if (!(other instanceof MarkerSequence)) {\n                return false;\n            }\n            var otherMarkerSequence = other;\n            if (this.getLength() !== otherMarkerSequence.getLength()) {\n                return false;\n            }\n            for (var i = 0, len = this.getLength(); i < len; i++) {\n                var myElement = this.getElementHash(i);\n                var otherElement = otherMarkerSequence.getElementHash(i);\n                if (myElement !== otherElement) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        MarkerSequence.prototype.getLength = function () {\n            return this.startMarkers.length;\n        };\n        MarkerSequence.prototype.getElementHash = function (i) {\n            return this.buffer.substring(this.startMarkers[i].offset, this.endMarkers[i].offset);\n        };\n        MarkerSequence.prototype.getStartLineNumber = function (i) {\n            if (i === this.startMarkers.length) {\n                // This is the special case where a change happened after the last marker\n                return this.startMarkers[i - 1].lineNumber + 1;\n            }\n            return this.startMarkers[i].lineNumber;\n        };\n        MarkerSequence.prototype.getStartColumn = function (i) {\n            return this.startMarkers[i].column;\n        };\n        MarkerSequence.prototype.getEndLineNumber = function (i) {\n            return this.endMarkers[i].lineNumber;\n        };\n        MarkerSequence.prototype.getEndColumn = function (i) {\n            return this.endMarkers[i].column;\n        };\n        return MarkerSequence;\n    }());\n    var LineMarkerSequence = (function (_super) {\n        __extends(LineMarkerSequence, _super);\n        function LineMarkerSequence(lines, shouldIgnoreTrimWhitespace) {\n            var i, length, pos;\n            var buffer = '';\n            var startMarkers = [], endMarkers = [], startColumn, endColumn;\n            for (pos = 0, i = 0, length = lines.length; i < length; i++) {\n                buffer += lines[i];\n                startColumn = 1;\n                endColumn = lines[i].length + 1;\n                if (shouldIgnoreTrimWhitespace) {\n                    startColumn = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n                    endColumn = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n                }\n                startMarkers.push({\n                    offset: pos + startColumn - 1,\n                    lineNumber: i + 1,\n                    column: startColumn\n                });\n                endMarkers.push({\n                    offset: pos + endColumn - 1,\n                    lineNumber: i + 1,\n                    column: endColumn\n                });\n                pos += lines[i].length;\n            }\n            _super.call(this, buffer, startMarkers, endMarkers);\n        }\n        LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n            var r = strings.firstNonWhitespaceIndex(txt);\n            if (r === -1) {\n                return defaultValue;\n            }\n            return r + 1;\n        };\n        LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n            var r = strings.lastNonWhitespaceIndex(txt);\n            if (r === -1) {\n                return defaultValue;\n            }\n            return r + 2;\n        };\n        LineMarkerSequence.prototype.getCharSequence = function (startIndex, endIndex) {\n            var startMarkers = [], endMarkers = [], index, i, startMarker, endMarker;\n            for (index = startIndex; index <= endIndex; index++) {\n                startMarker = this.startMarkers[index];\n                endMarker = this.endMarkers[index];\n                for (i = startMarker.offset; i < endMarker.offset; i++) {\n                    startMarkers.push({\n                        offset: i,\n                        lineNumber: startMarker.lineNumber,\n                        column: startMarker.column + (i - startMarker.offset)\n                    });\n                    endMarkers.push({\n                        offset: i + 1,\n                        lineNumber: startMarker.lineNumber,\n                        column: startMarker.column + (i - startMarker.offset) + 1\n                    });\n                }\n            }\n            return new MarkerSequence(this.buffer, startMarkers, endMarkers);\n        };\n        return LineMarkerSequence;\n    }(MarkerSequence));\n    var CharChange = (function () {\n        function CharChange(diffChange, originalCharSequence, modifiedCharSequence) {\n            if (diffChange.originalLength === 0) {\n                this.originalStartLineNumber = 0;\n                this.originalStartColumn = 0;\n                this.originalEndLineNumber = 0;\n                this.originalEndColumn = 0;\n            }\n            else {\n                this.originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n                this.originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n                this.originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n                this.originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n            }\n            if (diffChange.modifiedLength === 0) {\n                this.modifiedStartLineNumber = 0;\n                this.modifiedStartColumn = 0;\n                this.modifiedEndLineNumber = 0;\n                this.modifiedEndColumn = 0;\n            }\n            else {\n                this.modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n                this.modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n                this.modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n                this.modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            }\n        }\n        return CharChange;\n    }());\n    function postProcessCharChanges(rawChanges) {\n        if (rawChanges.length <= 1) {\n            return rawChanges;\n        }\n        var result = [rawChanges[0]];\n        var i, len, originalMatchingLength, modifiedMatchingLength, matchingLength, prevChange = result[0], currChange;\n        for (i = 1, len = rawChanges.length; i < len; i++) {\n            currChange = rawChanges[i];\n            originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n            modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n            // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n            matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n            if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n                // Merge the current change into the previous one\n                prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n                prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n            }\n            else {\n                // Add the current change\n                result.push(currChange);\n                prevChange = currChange;\n            }\n        }\n        return result;\n    }\n    var LineChange = (function () {\n        function LineChange(diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldPostProcessCharChanges) {\n            if (diffChange.originalLength === 0) {\n                this.originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n                this.originalEndLineNumber = 0;\n            }\n            else {\n                this.originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n                this.originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            }\n            if (diffChange.modifiedLength === 0) {\n                this.modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n                this.modifiedEndLineNumber = 0;\n            }\n            else {\n                this.modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n                this.modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            }\n            if (diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n                var originalCharSequence = originalLineSequence.getCharSequence(diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n                var modifiedCharSequence = modifiedLineSequence.getCharSequence(diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n                var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate);\n                if (shouldPostProcessCharChanges) {\n                    rawChanges = postProcessCharChanges(rawChanges);\n                }\n                this.charChanges = [];\n                for (var i = 0, length = rawChanges.length; i < length; i++) {\n                    this.charChanges.push(new CharChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n                }\n            }\n        }\n        return LineChange;\n    }());\n    var DiffComputer = (function () {\n        function DiffComputer(originalLines, modifiedLines, opts) {\n            this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n            this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n            this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n            this.original = new LineMarkerSequence(originalLines, this.shouldIgnoreTrimWhitespace);\n            this.modified = new LineMarkerSequence(modifiedLines, this.shouldIgnoreTrimWhitespace);\n            if (opts.shouldConsiderTrimWhitespaceInEmptyCase && this.shouldIgnoreTrimWhitespace && this.original.equals(this.modified)) {\n                // Diff would be empty with `shouldIgnoreTrimWhitespace`\n                this.shouldIgnoreTrimWhitespace = false;\n                this.original = new LineMarkerSequence(originalLines, this.shouldIgnoreTrimWhitespace);\n                this.modified = new LineMarkerSequence(modifiedLines, this.shouldIgnoreTrimWhitespace);\n            }\n        }\n        DiffComputer.prototype.computeDiff = function () {\n            this.computationStartTime = (new Date()).getTime();\n            var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this));\n            var lineChanges = [];\n            for (var i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(new LineChange(rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        };\n        DiffComputer.prototype._continueProcessingPredicate = function () {\n            if (this.maximumRunTimeMs === 0) {\n                return true;\n            }\n            var now = (new Date()).getTime();\n            return now - this.computationStartTime < this.maximumRunTimeMs;\n        };\n        return DiffComputer;\n    }());\n    exports.DiffComputer = DiffComputer;\n});\n\ndefine(__m[17], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n    /**\n     * Create a word definition regular expression based on default word separators.\n     * Optionally provide allowed separators that should be included in words.\n     *\n     * The default would look like this:\n     * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n     */\n    function createWordRegExp(allowInWords) {\n        if (allowInWords === void 0) { allowInWords = ''; }\n        var usualSeparators = exports.USUAL_WORD_SEPARATORS;\n        var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n        for (var i = 0; i < usualSeparators.length; i++) {\n            if (allowInWords.indexOf(usualSeparators[i]) >= 0) {\n                continue;\n            }\n            source += '\\\\' + usualSeparators[i];\n        }\n        source += '\\\\s]+)';\n        return new RegExp(source, 'g');\n    }\n    exports.createWordRegExp = createWordRegExp;\n    // catches numbers (including floating numbers) in the first group, and alphanum in the second\n    exports.DEFAULT_WORD_REGEXP = createWordRegExp();\n    function ensureValidWordDefinition(wordDefinition) {\n        var result = exports.DEFAULT_WORD_REGEXP;\n        if (wordDefinition && (wordDefinition instanceof RegExp)) {\n            if (!wordDefinition.global) {\n                var flags = 'g';\n                if (wordDefinition.ignoreCase) {\n                    flags += 'i';\n                }\n                if (wordDefinition.multiline) {\n                    flags += 'm';\n                }\n                result = new RegExp(wordDefinition.source, flags);\n            }\n            else {\n                result = wordDefinition;\n            }\n        }\n        result.lastIndex = 0;\n        return result;\n    }\n    exports.ensureValidWordDefinition = ensureValidWordDefinition;\n    function getWordAtText(column, wordDefinition, text, textOffset) {\n        // console.log('_getWordAtText: ', column, text, textOffset);\n        var words = text.match(wordDefinition), k, startWord, endWord, startColumn, endColumn, word;\n        if (words) {\n            for (k = 0; k < words.length; k++) {\n                word = words[k].trim();\n                if (word.length > 0) {\n                    startWord = text.indexOf(word, endWord);\n                    endWord = startWord + word.length;\n                    startColumn = textOffset + startWord + 1;\n                    endColumn = textOffset + endWord + 1;\n                    if (startColumn <= column && column <= endColumn) {\n                        return {\n                            word: word,\n                            startColumn: startColumn,\n                            endColumn: endColumn\n                        };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    exports.getWordAtText = getWordAtText;\n});\n\ndefine(__m[18], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // State machine for http:// or https:// or file://\n    var STATE_MAP = [];\n    var START_STATE = 1;\n    var END_STATE = 12;\n    var ACCEPT_STATE = 13;\n    STATE_MAP[1] = { 'h': 2, 'H': 2, 'f': 6, 'F': 6 };\n    STATE_MAP[2] = { 't': 3, 'T': 3 };\n    STATE_MAP[3] = { 't': 4, 'T': 4 };\n    STATE_MAP[4] = { 'p': 5, 'P': 5 };\n    STATE_MAP[5] = { 's': 9, 'S': 9, ':': 10 };\n    STATE_MAP[6] = { 'i': 7, 'I': 7 };\n    STATE_MAP[7] = { 'l': 8, 'L': 8 };\n    STATE_MAP[8] = { 'e': 9, 'E': 9 };\n    STATE_MAP[9] = { ':': 10 };\n    STATE_MAP[10] = { '/': 11 };\n    STATE_MAP[11] = { '/': END_STATE };\n    var CharacterClass;\n    (function (CharacterClass) {\n        CharacterClass[CharacterClass[\"None\"] = 0] = \"None\";\n        CharacterClass[CharacterClass[\"ForceTermination\"] = 1] = \"ForceTermination\";\n        CharacterClass[CharacterClass[\"CannotEndIn\"] = 2] = \"CannotEndIn\";\n    })(CharacterClass || (CharacterClass = {}));\n    var _openParens = '('.charCodeAt(0);\n    var _closeParens = ')'.charCodeAt(0);\n    var _openSquareBracket = '['.charCodeAt(0);\n    var _closeSquareBracket = ']'.charCodeAt(0);\n    var _openCurlyBracket = '{'.charCodeAt(0);\n    var _closeCurlyBracket = '}'.charCodeAt(0);\n    var CharacterClassifier = (function () {\n        function CharacterClassifier() {\n            var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n            var CANNOT_END_WITH_CHARACTERS = '.,;';\n            this._asciiMap = [];\n            for (var i = 0; i < 256; i++) {\n                this._asciiMap[i] = CharacterClass.None;\n            }\n            this._map = [];\n            for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n                this._set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n            }\n            for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n                this._set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n            }\n        }\n        CharacterClassifier.prototype._set = function (charCode, charClass) {\n            if (charCode < 256) {\n                this._asciiMap[charCode] = charClass;\n            }\n            this._map[charCode] = charClass;\n        };\n        CharacterClassifier.prototype.classify = function (charCode) {\n            if (charCode < 256) {\n                return this._asciiMap[charCode];\n            }\n            var charClass = this._map[charCode];\n            if (charClass) {\n                return charClass;\n            }\n            return CharacterClass.None;\n        };\n        return CharacterClassifier;\n    }());\n    var characterClassifier = new CharacterClassifier();\n    var LinkComputer = (function () {\n        function LinkComputer() {\n        }\n        LinkComputer._createLink = function (line, lineNumber, linkBeginIndex, linkEndIndex) {\n            // Do not allow to end link in certain characters...\n            var lastIncludedCharIndex = linkEndIndex - 1;\n            do {\n                var chCode = line.charCodeAt(lastIncludedCharIndex);\n                var chClass = characterClassifier.classify(chCode);\n                if (chClass !== CharacterClass.CannotEndIn) {\n                    break;\n                }\n                lastIncludedCharIndex--;\n            } while (lastIncludedCharIndex > linkBeginIndex);\n            return {\n                range: {\n                    startLineNumber: lineNumber,\n                    startColumn: linkBeginIndex + 1,\n                    endLineNumber: lineNumber,\n                    endColumn: lastIncludedCharIndex + 2\n                },\n                url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n            };\n        };\n        LinkComputer.computeLinks = function (model) {\n            var result = [];\n            for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n                var line = model.getLineContent(i);\n                var len = line.length;\n                var j = 0;\n                var linkBeginIndex = 0;\n                var state = START_STATE;\n                var hasOpenParens = false;\n                var hasOpenSquareBracket = false;\n                var hasOpenCurlyBracket = false;\n                while (j < len) {\n                    var resetStateMachine = false;\n                    if (state === ACCEPT_STATE) {\n                        var chCode = line.charCodeAt(j);\n                        var chClass = void 0;\n                        switch (chCode) {\n                            case _openParens:\n                                hasOpenParens = true;\n                                chClass = CharacterClass.None;\n                                break;\n                            case _closeParens:\n                                chClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n                                break;\n                            case _openSquareBracket:\n                                hasOpenSquareBracket = true;\n                                chClass = CharacterClass.None;\n                                break;\n                            case _closeSquareBracket:\n                                chClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n                                break;\n                            case _openCurlyBracket:\n                                hasOpenCurlyBracket = true;\n                                chClass = CharacterClass.None;\n                                break;\n                            case _closeCurlyBracket:\n                                chClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n                                break;\n                            default:\n                                chClass = characterClassifier.classify(chCode);\n                        }\n                        // Check if character terminates link\n                        if (chClass === CharacterClass.ForceTermination) {\n                            result.push(LinkComputer._createLink(line, i, linkBeginIndex, j));\n                            resetStateMachine = true;\n                        }\n                    }\n                    else if (state === END_STATE) {\n                        var chCode = line.charCodeAt(j);\n                        var chClass = characterClassifier.classify(chCode);\n                        // Check if character terminates link\n                        if (chClass === CharacterClass.ForceTermination) {\n                            resetStateMachine = true;\n                        }\n                        else {\n                            state = ACCEPT_STATE;\n                        }\n                    }\n                    else {\n                        var ch = line.charAt(j);\n                        if (STATE_MAP[state].hasOwnProperty(ch)) {\n                            state = STATE_MAP[state][ch];\n                        }\n                        else {\n                            resetStateMachine = true;\n                        }\n                    }\n                    if (resetStateMachine) {\n                        state = START_STATE;\n                        hasOpenParens = false;\n                        hasOpenSquareBracket = false;\n                        hasOpenCurlyBracket = false;\n                        // Record where the link started\n                        linkBeginIndex = j + 1;\n                    }\n                    j++;\n                }\n                if (state === ACCEPT_STATE) {\n                    result.push(LinkComputer._createLink(line, i, linkBeginIndex, len));\n                }\n            }\n            return result;\n        };\n        return LinkComputer;\n    }());\n    /**\n     * Returns an array of all links contains in the provided\n     * document. *Note* that this operation is computational\n     * expensive and should not run in the UI thread.\n     */\n    function computeLinks(model) {\n        if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n            // Unknown caller!\n            return [];\n        }\n        return LinkComputer.computeLinks(model);\n    }\n    exports.computeLinks = computeLinks;\n});\n\ndefine(__m[16], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var BasicInplaceReplace = (function () {\n        function BasicInplaceReplace() {\n            this._defaultValueSet = [\n                ['true', 'false'],\n                ['True', 'False'],\n                ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n                ['public', 'protected', 'private'],\n            ];\n        }\n        BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n            if (range1 && text1) {\n                var result = this.doNavigateValueSet(text1, up);\n                if (result) {\n                    return {\n                        range: range1,\n                        value: result\n                    };\n                }\n            }\n            if (range2 && text2) {\n                var result = this.doNavigateValueSet(text2, up);\n                if (result) {\n                    return {\n                        range: range2,\n                        value: result\n                    };\n                }\n            }\n            return null;\n        };\n        BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n            var numberResult = this.numberReplace(text, up);\n            if (numberResult !== null) {\n                return numberResult;\n            }\n            return this.textReplace(text, up);\n        };\n        BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n            var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1)), n1 = Number(value), n2 = parseFloat(value);\n            if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n                if (n1 === 0 && !up) {\n                    return null; // don't do negative\n                }\n                else {\n                    n1 = Math.floor(n1 * precision);\n                    n1 += up ? precision : -precision;\n                    return String(n1 / precision);\n                }\n            }\n            return null;\n        };\n        BasicInplaceReplace.prototype.textReplace = function (value, up) {\n            return this.valueSetsReplace(this._defaultValueSet, value, up);\n        };\n        BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n            var result = null;\n            for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n                result = this.valueSetReplace(valueSets[i], value, up);\n            }\n            return result;\n        };\n        BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n            var idx = valueSet.indexOf(value);\n            if (idx >= 0) {\n                idx += up ? +1 : -1;\n                if (idx < 0) {\n                    idx = valueSet.length - 1;\n                }\n                else {\n                    idx %= valueSet.length;\n                }\n                return valueSet[idx];\n            }\n            return null;\n        };\n        BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n        return BasicInplaceReplace;\n    }());\n    exports.BasicInplaceReplace = BasicInplaceReplace;\n});\n\ndefine(__m[20], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var PrefixSumIndexOfResult = (function () {\n        function PrefixSumIndexOfResult(index, remainder) {\n            this.index = index;\n            this.remainder = remainder;\n        }\n        return PrefixSumIndexOfResult;\n    }());\n    exports.PrefixSumIndexOfResult = PrefixSumIndexOfResult;\n    var PrefixSumComputer = (function () {\n        function PrefixSumComputer(values) {\n            this.values = values;\n            this.prefixSum = [];\n            for (var i = 0, len = this.values.length; i < len; i++) {\n                this.prefixSum[i] = 0;\n            }\n            this.prefixSumValidIndex = -1;\n        }\n        PrefixSumComputer.prototype.getCount = function () {\n            return this.values.length;\n        };\n        PrefixSumComputer.prototype.insertValue = function (insertIndex, value) {\n            insertIndex = Math.floor(insertIndex); //@perf\n            value = Math.floor(value); //@perf\n            this.values.splice(insertIndex, 0, value);\n            this.prefixSum.splice(insertIndex, 0, 0);\n            if (insertIndex - 1 < this.prefixSumValidIndex) {\n                this.prefixSumValidIndex = insertIndex - 1;\n            }\n        };\n        PrefixSumComputer.prototype.insertValues = function (insertIndex, values) {\n            insertIndex = Math.floor(insertIndex); //@perf\n            if (values.length === 0) {\n                return;\n            }\n            this.values = this.values.slice(0, insertIndex).concat(values).concat(this.values.slice(insertIndex));\n            this.prefixSum = this.prefixSum.slice(0, insertIndex).concat(PrefixSumComputer._zeroArray(values.length)).concat(this.prefixSum.slice(insertIndex));\n            if (insertIndex - 1 < this.prefixSumValidIndex) {\n                this.prefixSumValidIndex = insertIndex - 1;\n            }\n        };\n        PrefixSumComputer._zeroArray = function (count) {\n            count = Math.floor(count); //@perf\n            var r = [];\n            for (var i = 0; i < count; i++) {\n                r[i] = 0;\n            }\n            return r;\n        };\n        PrefixSumComputer.prototype.changeValue = function (index, value) {\n            index = Math.floor(index); //@perf\n            value = Math.floor(value); //@perf\n            if (this.values[index] === value) {\n                return;\n            }\n            this.values[index] = value;\n            if (index - 1 < this.prefixSumValidIndex) {\n                this.prefixSumValidIndex = index - 1;\n            }\n        };\n        PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n            startIndex = Math.floor(startIndex); //@perf\n            cnt = Math.floor(cnt); //@perf\n            this.values.splice(startIndex, cnt);\n            this.prefixSum.splice(startIndex, cnt);\n            if (startIndex - 1 < this.prefixSumValidIndex) {\n                this.prefixSumValidIndex = startIndex - 1;\n            }\n        };\n        PrefixSumComputer.prototype.getTotalValue = function () {\n            if (this.values.length === 0) {\n                return 0;\n            }\n            return this.getAccumulatedValue(this.values.length - 1);\n        };\n        PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n            index = Math.floor(index); //@perf\n            if (index < 0) {\n                return 0;\n            }\n            if (index <= this.prefixSumValidIndex) {\n                return this.prefixSum[index];\n            }\n            var startIndex = this.prefixSumValidIndex + 1;\n            if (startIndex === 0) {\n                this.prefixSum[0] = this.values[0];\n                startIndex++;\n            }\n            if (index >= this.values.length) {\n                index = this.values.length - 1;\n            }\n            for (var i = startIndex; i <= index; i++) {\n                this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n            }\n            this.prefixSumValidIndex = Math.max(this.prefixSumValidIndex, index);\n            return this.prefixSum[index];\n        };\n        PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n            accumulatedValue = Math.floor(accumulatedValue); //@perf\n            var low = 0;\n            var high = this.values.length - 1;\n            var mid;\n            var midStop;\n            var midStart;\n            while (low <= high) {\n                mid = low + ((high - low) / 2) | 0;\n                midStop = this.getAccumulatedValue(mid);\n                midStart = midStop - this.values[mid];\n                if (accumulatedValue < midStart) {\n                    high = mid - 1;\n                }\n                else if (accumulatedValue >= midStop) {\n                    low = mid + 1;\n                }\n                else {\n                    break;\n                }\n            }\n            return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n        };\n        return PrefixSumComputer;\n    }());\n    exports.PrefixSumComputer = PrefixSumComputer;\n});\n\ndefine(__m[21], __M([1,0,20]), function (require, exports, prefixSumComputer_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var MirrorModel2 = (function () {\n        function MirrorModel2(uri, lines, eol, versionId) {\n            this._uri = uri;\n            this._lines = lines;\n            this._eol = eol;\n            this._versionId = versionId;\n        }\n        MirrorModel2.prototype.dispose = function () {\n            this._lines.length = 0;\n        };\n        Object.defineProperty(MirrorModel2.prototype, \"version\", {\n            get: function () {\n                return this._versionId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MirrorModel2.prototype.getText = function () {\n            return this._lines.join(this._eol);\n        };\n        MirrorModel2.prototype.onEvents = function (events) {\n            var newEOL = null;\n            for (var i = 0, len = events.length; i < len; i++) {\n                var e = events[i];\n                if (e.eol) {\n                    newEOL = e.eol;\n                }\n            }\n            if (newEOL && newEOL !== this._eol) {\n                this._eol = newEOL;\n                this._lineStarts = null;\n            }\n            // Update my lines\n            var lastVersionId = -1;\n            for (var i = 0, len = events.length; i < len; i++) {\n                var e = events[i];\n                this._acceptDeleteRange(e.range);\n                this._acceptInsertText({\n                    lineNumber: e.range.startLineNumber,\n                    column: e.range.startColumn\n                }, e.text);\n                lastVersionId = Math.max(lastVersionId, e.versionId);\n            }\n            if (lastVersionId !== -1) {\n                this._versionId = lastVersionId;\n            }\n        };\n        MirrorModel2.prototype._ensureLineStarts = function () {\n            if (!this._lineStarts) {\n                var lineStartValues = [];\n                var eolLength = this._eol.length;\n                for (var i = 0, len = this._lines.length; i < len; i++) {\n                    lineStartValues.push(this._lines[i].length + eolLength);\n                }\n                this._lineStarts = new prefixSumComputer_1.PrefixSumComputer(lineStartValues);\n            }\n        };\n        /**\n         * All changes to a line's text go through this method\n         */\n        MirrorModel2.prototype._setLineText = function (lineIndex, newValue) {\n            this._lines[lineIndex] = newValue;\n            if (this._lineStarts) {\n                // update prefix sum\n                this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n            }\n        };\n        MirrorModel2.prototype._acceptDeleteRange = function (range) {\n            if (range.startLineNumber === range.endLineNumber) {\n                if (range.startColumn === range.endColumn) {\n                    // Nothing to delete\n                    return;\n                }\n                // Delete text on the affected line\n                this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                    + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n                return;\n            }\n            // Take remaining text on last line and append it to remaining text on first line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n            // Delete middle lines\n            this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n            if (this._lineStarts) {\n                // update prefix sum\n                this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n            }\n        };\n        MirrorModel2.prototype._acceptInsertText = function (position, insertText) {\n            if (insertText.length === 0) {\n                // Nothing to insert\n                return;\n            }\n            var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n            if (insertLines.length === 1) {\n                // Inserting text on one line\n                this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                    + insertLines[0]\n                    + this._lines[position.lineNumber - 1].substring(position.column - 1));\n                return;\n            }\n            // Append overflowing text from first line to the end of text to insert\n            insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n            // Delete overflowing text from first line and insert text on first line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]);\n            // Insert new lines & store lengths\n            var newLengths = new Array(insertLines.length - 1);\n            for (var i = 1; i < insertLines.length; i++) {\n                this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n                newLengths[i - 1] = insertLines[i].length + this._eol.length;\n            }\n            if (this._lineStarts) {\n                // update prefix sum\n                this._lineStarts.insertValues(position.lineNumber, newLengths);\n            }\n        };\n        return MirrorModel2;\n    }());\n    exports.MirrorModel2 = MirrorModel2;\n});\n\ndefine(__m[22], __M([11,12]), function(nls, data) { return nls.create(\"vs/base/common/errors\", data); });\ndefine(__m[5], __M([1,0,22,23,3,6,27,4]), function (require, exports, nls, objects, platform, types, arrays, strings) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    // Avoid circular dependency on EventEmitter by implementing a subset of the interface.\n    var ErrorHandler = (function () {\n        function ErrorHandler() {\n            this.listeners = [];\n            this.unexpectedErrorHandler = function (e) {\n                platform.setTimeout(function () {\n                    if (e.stack) {\n                        throw new Error(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw e;\n                }, 0);\n            };\n        }\n        ErrorHandler.prototype.addListener = function (listener) {\n            var _this = this;\n            this.listeners.push(listener);\n            return function () {\n                _this._removeListener(listener);\n            };\n        };\n        ErrorHandler.prototype.emit = function (e) {\n            this.listeners.forEach(function (listener) {\n                listener(e);\n            });\n        };\n        ErrorHandler.prototype._removeListener = function (listener) {\n            this.listeners.splice(this.listeners.indexOf(listener), 1);\n        };\n        ErrorHandler.prototype.setUnexpectedErrorHandler = function (newUnexpectedErrorHandler) {\n            this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n        };\n        ErrorHandler.prototype.getUnexpectedErrorHandler = function () {\n            return this.unexpectedErrorHandler;\n        };\n        ErrorHandler.prototype.onUnexpectedError = function (e) {\n            this.unexpectedErrorHandler(e);\n            this.emit(e);\n        };\n        return ErrorHandler;\n    }());\n    exports.ErrorHandler = ErrorHandler;\n    exports.errorHandler = new ErrorHandler();\n    function setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n        exports.errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n    }\n    exports.setUnexpectedErrorHandler = setUnexpectedErrorHandler;\n    function onUnexpectedError(e) {\n        // ignore errors from cancelled promises\n        if (!isPromiseCanceledError(e)) {\n            exports.errorHandler.onUnexpectedError(e);\n        }\n    }\n    exports.onUnexpectedError = onUnexpectedError;\n    function onUnexpectedPromiseError(promise) {\n        return promise.then(null, onUnexpectedError);\n    }\n    exports.onUnexpectedPromiseError = onUnexpectedPromiseError;\n    function transformErrorForSerialization(error) {\n        if (error instanceof Error) {\n            var name_1 = error.name, message = error.message;\n            var stack = error.stacktrace || error.stack;\n            return {\n                $isError: true,\n                name: name_1,\n                message: message,\n                stack: stack\n            };\n        }\n        // return as is\n        return error;\n    }\n    exports.transformErrorForSerialization = transformErrorForSerialization;\n    /**\n     * The base class for all connection errors originating from XHR requests.\n     */\n    var ConnectionError = (function () {\n        function ConnectionError(arg) {\n            this.status = arg.status;\n            this.statusText = arg.statusText;\n            this.name = 'ConnectionError';\n            try {\n                this.responseText = arg.responseText;\n            }\n            catch (e) {\n                this.responseText = '';\n            }\n            this.errorMessage = null;\n            this.errorCode = null;\n            this.errorObject = null;\n            if (this.responseText) {\n                try {\n                    var errorObj = JSON.parse(this.responseText);\n                    this.errorMessage = errorObj.message;\n                    this.errorCode = errorObj.code;\n                    this.errorObject = errorObj;\n                }\n                catch (error) {\n                }\n            }\n        }\n        Object.defineProperty(ConnectionError.prototype, \"message\", {\n            get: function () {\n                return this.connectionErrorToMessage(this, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ConnectionError.prototype, \"verboseMessage\", {\n            get: function () {\n                return this.connectionErrorToMessage(this, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ConnectionError.prototype.connectionErrorDetailsToMessage = function (error, verbose) {\n            var errorCode = error.errorCode;\n            var errorMessage = error.errorMessage;\n            if (errorCode !== null && errorMessage !== null) {\n                return nls.localize(0, null, strings.rtrim(errorMessage, '.'), errorCode);\n\n\n\n\n\n\n            }\n            if (errorMessage !== null) {\n                return errorMessage;\n            }\n            if (verbose && error.responseText !== null) {\n                return error.responseText;\n            }\n            return null;\n        };\n        ConnectionError.prototype.connectionErrorToMessage = function (error, verbose) {\n            var details = this.connectionErrorDetailsToMessage(error, verbose);\n            // Status Code based Error\n            if (error.status === 401) {\n                if (details !== null) {\n                    return nls.localize(1, null, details);\n\n\n\n\n\n                }\n                return nls.localize(2, null);\n            }\n            // Return error details if present\n            if (details) {\n                return details;\n            }\n            // Fallback to HTTP Status and Code\n            if (error.status > 0 && error.statusText !== null) {\n                if (verbose && error.responseText !== null && error.responseText.length > 0) {\n                    return nls.localize(3, null, error.statusText, error.status, error.responseText);\n                }\n                return nls.localize(4, null, error.statusText, error.status);\n            }\n            // Finally its an Unknown Connection Error\n            if (verbose && error.responseText !== null && error.responseText.length > 0) {\n                return nls.localize(5, null, error.responseText);\n            }\n            return nls.localize(6, null);\n        };\n        return ConnectionError;\n    }());\n    exports.ConnectionError = ConnectionError;\n    // Bug: Can not subclass a JS Type. Do it manually (as done in WinJS.Class.derive)\n    objects.derive(Error, ConnectionError);\n    function xhrToErrorMessage(xhr, verbose) {\n        var ce = new ConnectionError(xhr);\n        if (verbose) {\n            return ce.verboseMessage;\n        }\n        else {\n            return ce.message;\n        }\n    }\n    function exceptionToErrorMessage(exception, verbose) {\n        if (exception.message) {\n            if (verbose && (exception.stack || exception.stacktrace)) {\n                return nls.localize(7, null, detectSystemErrorMessage(exception), exception.stack || exception.stacktrace);\n            }\n            return detectSystemErrorMessage(exception);\n        }\n        return nls.localize(8, null);\n    }\n    function detectSystemErrorMessage(exception) {\n        // See https://nodejs.org/api/errors.html#errors_class_system_error\n        if (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n            return nls.localize(9, null, exception.message);\n        }\n        return exception.message;\n    }\n    /**\n     * Tries to generate a human readable error message out of the error. If the verbose parameter\n     * is set to true, the error message will include stacktrace details if provided.\n     * @returns A string containing the error message.\n     */\n    function toErrorMessage(error, verbose) {\n        if (error === void 0) { error = null; }\n        if (verbose === void 0) { verbose = false; }\n        if (!error) {\n            return nls.localize(10, null);\n        }\n        if (Array.isArray(error)) {\n            var errors = arrays.coalesce(error);\n            var msg = toErrorMessage(errors[0], verbose);\n            if (errors.length > 1) {\n                return nls.localize(11, null, msg, errors.length);\n            }\n            return msg;\n        }\n        if (types.isString(error)) {\n            return error;\n        }\n        if (!types.isUndefinedOrNull(error.status)) {\n            return xhrToErrorMessage(error, verbose);\n        }\n        if (error.detail) {\n            var detail = error.detail;\n            if (detail.error) {\n                if (detail.error && !types.isUndefinedOrNull(detail.error.status)) {\n                    return xhrToErrorMessage(detail.error, verbose);\n                }\n                if (types.isArray(detail.error)) {\n                    for (var i = 0; i < detail.error.length; i++) {\n                        if (detail.error[i] && !types.isUndefinedOrNull(detail.error[i].status)) {\n                            return xhrToErrorMessage(detail.error[i], verbose);\n                        }\n                    }\n                }\n                else {\n                    return exceptionToErrorMessage(detail.error, verbose);\n                }\n            }\n            if (detail.exception) {\n                if (!types.isUndefinedOrNull(detail.exception.status)) {\n                    return xhrToErrorMessage(detail.exception, verbose);\n                }\n                return exceptionToErrorMessage(detail.exception, verbose);\n            }\n        }\n        if (error.stack) {\n            return exceptionToErrorMessage(error, verbose);\n        }\n        if (error.message) {\n            return error.message;\n        }\n        return nls.localize(12, null);\n    }\n    exports.toErrorMessage = toErrorMessage;\n    var canceledName = 'Canceled';\n    /**\n     * Checks if the given error is a promise in canceled state\n     */\n    function isPromiseCanceledError(error) {\n        return error instanceof Error && error.name === canceledName && error.message === canceledName;\n    }\n    exports.isPromiseCanceledError = isPromiseCanceledError;\n    /**\n     * Returns an error that signals cancellation.\n     */\n    function canceled() {\n        var error = new Error(canceledName);\n        error.name = error.message;\n        return error;\n    }\n    exports.canceled = canceled;\n    /**\n     * Returns an error that signals something is not implemented.\n     */\n    function notImplemented() {\n        return new Error(nls.localize(13, null));\n    }\n    exports.notImplemented = notImplemented;\n    function illegalArgument(name) {\n        if (name) {\n            return new Error(nls.localize(14, null, name));\n        }\n        else {\n            return new Error(nls.localize(15, null));\n        }\n    }\n    exports.illegalArgument = illegalArgument;\n    function illegalState(name) {\n        if (name) {\n            return new Error(nls.localize(16, null, name));\n        }\n        else {\n            return new Error(nls.localize(17, null));\n        }\n    }\n    exports.illegalState = illegalState;\n    function readonly(name) {\n        return name\n            ? new Error(\"readonly property '\" + name + \" cannot be changed'\")\n            : new Error('readonly property cannot be changed');\n    }\n    exports.readonly = readonly;\n    function loaderError(err) {\n        if (platform.isWeb) {\n            return new Error(nls.localize(18, null));\n        }\n        return new Error(nls.localize(19, null, JSON.stringify(err)));\n    }\n    exports.loaderError = loaderError;\n    function create(message, options) {\n        if (options === void 0) { options = {}; }\n        var result = new Error(message);\n        if (types.isNumber(options.severity)) {\n            result.severity = options.severity;\n        }\n        if (options.actions) {\n            result.actions = options.actions;\n        }\n        return result;\n    }\n    exports.create = create;\n});\n\ndefine(__m[26], __M([1,0,5]), function (require, exports, errors_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var CallbackList = (function () {\n        function CallbackList() {\n        }\n        CallbackList.prototype.add = function (callback, context, bucket) {\n            var _this = this;\n            if (context === void 0) { context = null; }\n            if (!this._callbacks) {\n                this._callbacks = [];\n                this._contexts = [];\n            }\n            this._callbacks.push(callback);\n            this._contexts.push(context);\n            if (Array.isArray(bucket)) {\n                bucket.push({ dispose: function () { return _this.remove(callback, context); } });\n            }\n        };\n        CallbackList.prototype.remove = function (callback, context) {\n            if (context === void 0) { context = null; }\n            if (!this._callbacks) {\n                return;\n            }\n            var foundCallbackWithDifferentContext = false;\n            for (var i = 0, len = this._callbacks.length; i < len; i++) {\n                if (this._callbacks[i] === callback) {\n                    if (this._contexts[i] === context) {\n                        // callback & context match => remove it\n                        this._callbacks.splice(i, 1);\n                        this._contexts.splice(i, 1);\n                        return;\n                    }\n                    else {\n                        foundCallbackWithDifferentContext = true;\n                    }\n                }\n            }\n            if (foundCallbackWithDifferentContext) {\n                throw new Error('When adding a listener with a context, you should remove it with the same context');\n            }\n        };\n        CallbackList.prototype.invoke = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (!this._callbacks) {\n                return;\n            }\n            var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n            for (var i = 0, len = callbacks.length; i < len; i++) {\n                try {\n                    ret.push(callbacks[i].apply(contexts[i], args));\n                }\n                catch (e) {\n                    errors_1.onUnexpectedError(e);\n                }\n            }\n            return ret;\n        };\n        CallbackList.prototype.isEmpty = function () {\n            return !this._callbacks || this._callbacks.length === 0;\n        };\n        CallbackList.prototype.dispose = function () {\n            this._callbacks = undefined;\n            this._contexts = undefined;\n        };\n        return CallbackList;\n    }());\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = CallbackList;\n});\n\ndefine(__m[14], __M([1,0,26]), function (require, exports, callbackList_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var Event;\n    (function (Event) {\n        var _disposable = { dispose: function () { } };\n        Event.None = function () { return _disposable; };\n    })(Event || (Event = {}));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = Event;\n    /**\n     * The Emitter can be used to expose an Event to the public\n     * to fire it from the insides.\n     * Sample:\n        class Document {\n    \n            private _onDidChange = new Emitter<(value:string)=>any>();\n    \n            public onDidChange = this._onDidChange.event;\n    \n            // getter-style\n            // get onDidChange(): Event<(value:string)=>any> {\n            // \treturn this._onDidChange.event;\n            // }\n    \n            private _doIt() {\n                //...\n                this._onDidChange.fire(value);\n            }\n        }\n     */\n    var Emitter = (function () {\n        function Emitter(_options) {\n            this._options = _options;\n        }\n        Object.defineProperty(Emitter.prototype, \"event\", {\n            /**\n             * For the public to allow to subscribe\n             * to events from this Emitter\n             */\n            get: function () {\n                var _this = this;\n                if (!this._event) {\n                    this._event = function (listener, thisArgs, disposables) {\n                        if (!_this._callbacks) {\n                            _this._callbacks = new callbackList_1.default();\n                        }\n                        if (_this._options && _this._options.onFirstListenerAdd && _this._callbacks.isEmpty()) {\n                            _this._options.onFirstListenerAdd(_this);\n                        }\n                        _this._callbacks.add(listener, thisArgs);\n                        var result;\n                        result = {\n                            dispose: function () {\n                                result.dispose = Emitter._noop;\n                                if (!_this._disposed) {\n                                    _this._callbacks.remove(listener, thisArgs);\n                                    if (_this._options && _this._options.onLastListenerRemove && _this._callbacks.isEmpty()) {\n                                        _this._options.onLastListenerRemove(_this);\n                                    }\n                                }\n                            }\n                        };\n                        if (Array.isArray(disposables)) {\n                            disposables.push(result);\n                        }\n                        return result;\n                    };\n                }\n                return this._event;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * To be kept private to fire an event to\n         * subscribers\n         */\n        Emitter.prototype.fire = function (event) {\n            if (this._callbacks) {\n                this._callbacks.invoke.call(this._callbacks, event);\n            }\n        };\n        Emitter.prototype.dispose = function () {\n            if (this._callbacks) {\n                this._callbacks.dispose();\n                this._callbacks = undefined;\n                this._disposed = true;\n            }\n        };\n        Emitter._noop = function () { };\n        return Emitter;\n    }());\n    exports.Emitter = Emitter;\n    /**\n     * Creates an Event which is backed-up by the event emitter. This allows\n     * to use the existing eventing pattern and is likely using less memory.\n     * Sample:\n     *\n     * \tclass Document {\n     *\n     *\t\tprivate _eventbus = new EventEmitter();\n     *\n     *\t\tpublic onDidChange = fromEventEmitter(this._eventbus, 'changed');\n     *\n     *\t\t// getter-style\n     *\t\t// get onDidChange(): Event<(value:string)=>any> {\n     *\t\t// \tcache fromEventEmitter result and return\n     *\t\t// }\n     *\n     *\t\tprivate _doIt() {\n     *\t\t\t// ...\n     *\t\t\tthis._eventbus.emit('changed', value)\n     *\t\t}\n     *\t}\n     */\n    function fromEventEmitter(emitter, eventType) {\n        return function (listener, thisArgs, disposables) {\n            var result = emitter.addListener2(eventType, function () {\n                listener.apply(thisArgs, arguments);\n            });\n            if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            return result;\n        };\n    }\n    exports.fromEventEmitter = fromEventEmitter;\n    function fromPromise(promise) {\n        var toCancel = null;\n        var listener = null;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                toCancel = promise.then(function (event) { return listener = event(function (e) { return emitter.fire(e); }); }, function () { return null; });\n            },\n            onLastListenerRemove: function () {\n                if (toCancel) {\n                    toCancel.cancel();\n                    toCancel = null;\n                }\n                if (listener) {\n                    listener.dispose();\n                    listener = null;\n                }\n            }\n        });\n        return emitter.event;\n    }\n    exports.fromPromise = fromPromise;\n    function once(event) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            var result = event(function (e) {\n                result.dispose();\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            return result;\n        };\n    }\n    exports.once = once;\n    function mapEvent(event, map) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n        };\n    }\n    exports.mapEvent = mapEvent;\n    function filterEvent(event, filter) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n        };\n    }\n    exports.filterEvent = filterEvent;\n    function debounceEvent(event, merger, delay) {\n        if (delay === void 0) { delay = 100; }\n        var subscription;\n        var output;\n        var handle;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                subscription = event(function (cur) {\n                    output = merger(output, cur);\n                    clearTimeout(handle);\n                    handle = setTimeout(function () {\n                        var _output = output;\n                        output = undefined;\n                        emitter.fire(_output);\n                    }, delay);\n                });\n            },\n            onLastListenerRemove: function () {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    exports.debounceEvent = debounceEvent;\n    var EventDelayerState;\n    (function (EventDelayerState) {\n        EventDelayerState[EventDelayerState[\"Idle\"] = 0] = \"Idle\";\n        EventDelayerState[EventDelayerState[\"Running\"] = 1] = \"Running\";\n    })(EventDelayerState || (EventDelayerState = {}));\n    /**\n     * The EventDelayer is useful in situations in which you want\n     * to delay firing your events during some code.\n     * You can wrap that code and be sure that the event will not\n     * be fired during that wrap.\n     *\n     * ```\n     * const emitter: Emitter;\n     * const delayer = new EventDelayer();\n     * const delayedEvent = delayer.delay(emitter.event);\n     *\n     * delayedEvent(console.log);\n     *\n     * delayer.wrap(() => {\n     *   emitter.fire(); // event will not be fired yet\n     * });\n     *\n     * // event will only be fired at this point\n     * ```\n     */\n    var EventBufferer = (function () {\n        function EventBufferer() {\n            this.buffers = [];\n        }\n        EventBufferer.prototype.wrapEvent = function (event) {\n            var _this = this;\n            return function (listener, thisArgs, disposables) {\n                return event(function (i) {\n                    var buffer = _this.buffers[_this.buffers.length - 1];\n                    if (buffer) {\n                        buffer.push(function () { return listener.call(thisArgs, i); });\n                    }\n                    else {\n                        listener.call(thisArgs, i);\n                    }\n                }, void 0, disposables);\n            };\n        };\n        EventBufferer.prototype.bufferEvents = function (fn) {\n            var buffer = [];\n            this.buffers.push(buffer);\n            fn();\n            this.buffers.pop();\n            buffer.forEach(function (flush) { return flush(); });\n        };\n        return EventBufferer;\n    }());\n    exports.EventBufferer = EventBufferer;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[15], __M([1,0,14]), function (require, exports, event_1) {\n    'use strict';\n    var shortcutEvent = Object.freeze(function (callback, context) {\n        var handle = setTimeout(callback.bind(context), 0);\n        return { dispose: function () { clearTimeout(handle); } };\n    });\n    var CancellationToken;\n    (function (CancellationToken) {\n        CancellationToken.None = Object.freeze({\n            isCancellationRequested: false,\n            onCancellationRequested: event_1.default.None\n        });\n        CancellationToken.Cancelled = Object.freeze({\n            isCancellationRequested: true,\n            onCancellationRequested: shortcutEvent\n        });\n    })(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\n    var MutableToken = (function () {\n        function MutableToken() {\n            this._isCancelled = false;\n        }\n        MutableToken.prototype.cancel = function () {\n            if (!this._isCancelled) {\n                this._isCancelled = true;\n                if (this._emitter) {\n                    this._emitter.fire(undefined);\n                    this._emitter = undefined;\n                }\n            }\n        };\n        Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n            get: function () {\n                return this._isCancelled;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n            get: function () {\n                if (this._isCancelled) {\n                    return shortcutEvent;\n                }\n                if (!this._emitter) {\n                    this._emitter = new event_1.Emitter();\n                }\n                return this._emitter.event;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return MutableToken;\n    }());\n    var CancellationTokenSource = (function () {\n        function CancellationTokenSource() {\n        }\n        Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n            get: function () {\n                if (!this._token) {\n                    // be lazy and create the token only when\n                    // actually needed\n                    this._token = new MutableToken();\n                }\n                return this._token;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        CancellationTokenSource.prototype.cancel = function () {\n            if (!this._token) {\n                // save an object by returning the default\n                // cancelled token when cancellation happens\n                // before someone asks for the token\n                this._token = CancellationToken.Cancelled;\n            }\n            else {\n                this._token.cancel();\n            }\n        };\n        CancellationTokenSource.prototype.dispose = function () {\n            this.cancel();\n        };\n        return CancellationTokenSource;\n    }());\n    exports.CancellationTokenSource = CancellationTokenSource;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\ndefine(__m[2], __M([37,5]), function (winjs, __Errors__) {\n\t'use strict';\n\n\tvar outstandingPromiseErrors = {};\n\tfunction promiseErrorHandler(e) {\n\n\t\t//\n\t\t// e.detail looks like: { exception, error, promise, handler, id, parent }\n\t\t//\n\t\tvar details = e.detail;\n\t\tvar id = details.id;\n\n\t\t// If the error has a parent promise then this is not the origination of the\n\t\t//  error so we check if it has a handler, and if so we mark that the error\n\t\t//  was handled by removing it from outstandingPromiseErrors\n\t\t//\n\t\tif (details.parent) {\n\t\t\tif (details.handler && outstandingPromiseErrors) {\n\t\t\t\tdelete outstandingPromiseErrors[id];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Indicate that this error was originated and needs to be handled\n\t\toutstandingPromiseErrors[id] = details;\n\n\t\t// The first time the queue fills up this iteration, schedule a timeout to\n\t\t// check if any errors are still unhandled.\n\t\tif (Object.keys(outstandingPromiseErrors).length === 1) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar errors = outstandingPromiseErrors;\n\t\t\t\toutstandingPromiseErrors = {};\n\t\t\t\tObject.keys(errors).forEach(function (errorId) {\n\t\t\t\t\tvar error = errors[errorId];\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.exception);\n\t\t\t\t\t} else if(error.error) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.error);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"WARNING: Promise with no error callback:\" + error.id);\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\tconsole.log(error.exception.stack);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\twinjs.Promise.addEventListener(\"error\", promiseErrorHandler);\n\n\treturn {\n\t\tPromise: winjs.Promise,\n\t\tTPromise: winjs.Promise,\n\t\tPPromise: winjs.Promise\n\t};\n});\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\ndefine(__m[31], __M([1,0,5,3,2,15,10]), function (require, exports, errors, platform, winjs_base_1, cancellation_1, lifecycle_1) {\n    'use strict';\n    function isThenable(obj) {\n        return obj && typeof obj.then === 'function';\n    }\n    function toThenable(arg) {\n        if (isThenable(arg)) {\n            return arg;\n        }\n        else {\n            return winjs_base_1.TPromise.as(arg);\n        }\n    }\n    exports.toThenable = toThenable;\n    function asWinJsPromise(callback) {\n        var source = new cancellation_1.CancellationTokenSource();\n        return new winjs_base_1.TPromise(function (resolve, reject, progress) {\n            var item = callback(source.token);\n            if (winjs_base_1.TPromise.is(item)) {\n                item.then(resolve, reject, progress);\n            }\n            else if (isThenable(item)) {\n                item.then(resolve, reject);\n            }\n            else {\n                resolve(item);\n            }\n        }, function () {\n            source.cancel();\n        });\n    }\n    exports.asWinJsPromise = asWinJsPromise;\n    /**\n     * Hook a cancellation token to a WinJS Promise\n     */\n    function wireCancellationToken(token, promise, resolveAsUndefinedWhenCancelled) {\n        var subscription = token.onCancellationRequested(function () { return promise.cancel(); });\n        if (resolveAsUndefinedWhenCancelled) {\n            promise = promise.then(undefined, function (err) {\n                if (!errors.isPromiseCanceledError(err)) {\n                    return winjs_base_1.TPromise.wrapError(err);\n                }\n            });\n        }\n        return always(promise, function () { return subscription.dispose(); });\n    }\n    exports.wireCancellationToken = wireCancellationToken;\n    /**\n     * A helper to prevent accumulation of sequential async tasks.\n     *\n     * Imagine a mail man with the sole task of delivering letters. As soon as\n     * a letter submitted for delivery, he drives to the destination, delivers it\n     * and returns to his base. Imagine that during the trip, N more letters were submitted.\n     * When the mail man returns, he picks those N letters and delivers them all in a\n     * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n     *\n     * The throttler implements this via the queue() method, by providing it a task\n     * factory. Following the example:\n     *\n     * \t\tvar throttler = new Throttler();\n     * \t\tvar letters = [];\n     *\n     * \t\tfunction deliver() {\n     * \t\t\tconst lettersToDeliver = letters;\n     * \t\t\tletters = [];\n     * \t\t\treturn makeTheTrip(lettersToDeliver);\n     * \t\t}\n     *\n     * \t\tfunction onLetterReceived(l) {\n     * \t\t\tletters.push(l);\n     * \t\t\tthrottler.queue(deliver);\n     * \t\t}\n     */\n    var Throttler = (function () {\n        function Throttler() {\n            this.activePromise = null;\n            this.queuedPromise = null;\n            this.queuedPromiseFactory = null;\n        }\n        Throttler.prototype.queue = function (promiseFactory) {\n            var _this = this;\n            if (this.activePromise) {\n                this.queuedPromiseFactory = promiseFactory;\n                if (!this.queuedPromise) {\n                    var onComplete_1 = function () {\n                        _this.queuedPromise = null;\n                        var result = _this.queue(_this.queuedPromiseFactory);\n                        _this.queuedPromiseFactory = null;\n                        return result;\n                    };\n                    this.queuedPromise = new winjs_base_1.Promise(function (c, e, p) {\n                        _this.activePromise.then(onComplete_1, onComplete_1, p).done(c);\n                    }, function () {\n                        _this.activePromise.cancel();\n                    });\n                }\n                return new winjs_base_1.Promise(function (c, e, p) {\n                    _this.queuedPromise.then(c, e, p);\n                }, function () {\n                    // no-op\n                });\n            }\n            this.activePromise = promiseFactory();\n            return new winjs_base_1.Promise(function (c, e, p) {\n                _this.activePromise.done(function (result) {\n                    _this.activePromise = null;\n                    c(result);\n                }, function (err) {\n                    _this.activePromise = null;\n                    e(err);\n                }, p);\n            }, function () {\n                _this.activePromise.cancel();\n            });\n        };\n        return Throttler;\n    }());\n    exports.Throttler = Throttler;\n    // TODO@Joao: can the previous throttler be replaced with this?\n    var SimpleThrottler = (function () {\n        function SimpleThrottler() {\n            this.current = winjs_base_1.TPromise.as(null);\n        }\n        SimpleThrottler.prototype.queue = function (promiseTask) {\n            return this.current = this.current.then(function () { return promiseTask(); });\n        };\n        return SimpleThrottler;\n    }());\n    exports.SimpleThrottler = SimpleThrottler;\n    /**\n     * A helper to delay execution of a task that is being requested often.\n     *\n     * Following the throttler, now imagine the mail man wants to optimize the number of\n     * trips proactively. The trip itself can be long, so the he decides not to make the trip\n     * as soon as a letter is submitted. Instead he waits a while, in case more\n     * letters are submitted. After said waiting period, if no letters were submitted, he\n     * decides to make the trip. Imagine that N more letters were submitted after the first\n     * one, all within a short period of time between each other. Even though N+1\n     * submissions occurred, only 1 delivery was made.\n     *\n     * The delayer offers this behavior via the trigger() method, into which both the task\n     * to be executed and the waiting period (delay) must be passed in as arguments. Following\n     * the example:\n     *\n     * \t\tvar delayer = new Delayer(WAITING_PERIOD);\n     * \t\tvar letters = [];\n     *\n     * \t\tfunction letterReceived(l) {\n     * \t\t\tletters.push(l);\n     * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n     * \t\t}\n     */\n    var Delayer = (function () {\n        function Delayer(defaultDelay) {\n            this.defaultDelay = defaultDelay;\n            this.timeout = null;\n            this.completionPromise = null;\n            this.onSuccess = null;\n            this.task = null;\n        }\n        Delayer.prototype.trigger = function (task, delay) {\n            var _this = this;\n            if (delay === void 0) { delay = this.defaultDelay; }\n            this.task = task;\n            this.cancelTimeout();\n            if (!this.completionPromise) {\n                this.completionPromise = new winjs_base_1.Promise(function (c) {\n                    _this.onSuccess = c;\n                }, function () {\n                    // no-op\n                }).then(function () {\n                    _this.completionPromise = null;\n                    _this.onSuccess = null;\n                    var task = _this.task;\n                    _this.task = null;\n                    return task();\n                });\n            }\n            this.timeout = setTimeout(function () {\n                _this.timeout = null;\n                _this.onSuccess(null);\n            }, delay);\n            return this.completionPromise;\n        };\n        Delayer.prototype.isTriggered = function () {\n            return this.timeout !== null;\n        };\n        Delayer.prototype.cancel = function () {\n            this.cancelTimeout();\n            if (this.completionPromise) {\n                this.completionPromise.cancel();\n                this.completionPromise = null;\n            }\n        };\n        Delayer.prototype.cancelTimeout = function () {\n            if (this.timeout !== null) {\n                clearTimeout(this.timeout);\n                this.timeout = null;\n            }\n        };\n        return Delayer;\n    }());\n    exports.Delayer = Delayer;\n    /**\n     * A helper to delay execution of a task that is being requested often, while\n     * preventing accumulation of consecutive executions, while the task runs.\n     *\n     * Simply combine the two mail man strategies from the Throttler and Delayer\n     * helpers, for an analogy.\n     */\n    var ThrottledDelayer = (function (_super) {\n        __extends(ThrottledDelayer, _super);\n        function ThrottledDelayer(defaultDelay) {\n            _super.call(this, defaultDelay);\n            this.throttler = new Throttler();\n        }\n        ThrottledDelayer.prototype.trigger = function (promiseFactory, delay) {\n            var _this = this;\n            return _super.prototype.trigger.call(this, function () { return _this.throttler.queue(promiseFactory); }, delay);\n        };\n        return ThrottledDelayer;\n    }(Delayer));\n    exports.ThrottledDelayer = ThrottledDelayer;\n    /**\n     * Similar to the ThrottledDelayer, except it also guarantees that the promise\n     * factory doesn't get called more often than every `minimumPeriod` milliseconds.\n     */\n    var PeriodThrottledDelayer = (function (_super) {\n        __extends(PeriodThrottledDelayer, _super);\n        function PeriodThrottledDelayer(defaultDelay, minimumPeriod) {\n            if (minimumPeriod === void 0) { minimumPeriod = 0; }\n            _super.call(this, defaultDelay);\n            this.minimumPeriod = minimumPeriod;\n            this.periodThrottler = new Throttler();\n        }\n        PeriodThrottledDelayer.prototype.trigger = function (promiseFactory, delay) {\n            var _this = this;\n            return _super.prototype.trigger.call(this, function () {\n                return _this.periodThrottler.queue(function () {\n                    return winjs_base_1.Promise.join([\n                        winjs_base_1.TPromise.timeout(_this.minimumPeriod),\n                        promiseFactory()\n                    ]).then(function (r) { return r[1]; });\n                });\n            }, delay);\n        };\n        return PeriodThrottledDelayer;\n    }(ThrottledDelayer));\n    exports.PeriodThrottledDelayer = PeriodThrottledDelayer;\n    var PromiseSource = (function () {\n        function PromiseSource() {\n            var _this = this;\n            this._value = new winjs_base_1.TPromise(function (c, e) {\n                _this._completeCallback = c;\n                _this._errorCallback = e;\n            });\n        }\n        Object.defineProperty(PromiseSource.prototype, \"value\", {\n            get: function () {\n                return this._value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        PromiseSource.prototype.complete = function (value) {\n            this._completeCallback(value);\n        };\n        PromiseSource.prototype.error = function (err) {\n            this._errorCallback(err);\n        };\n        return PromiseSource;\n    }());\n    exports.PromiseSource = PromiseSource;\n    var ShallowCancelThenPromise = (function (_super) {\n        __extends(ShallowCancelThenPromise, _super);\n        function ShallowCancelThenPromise(outer) {\n            var completeCallback, errorCallback, progressCallback;\n            _super.call(this, function (c, e, p) {\n                completeCallback = c;\n                errorCallback = e;\n                progressCallback = p;\n            }, function () {\n                // cancel this promise but not the\n                // outer promise\n                errorCallback(errors.canceled());\n            });\n            outer.then(completeCallback, errorCallback, progressCallback);\n        }\n        return ShallowCancelThenPromise;\n    }(winjs_base_1.TPromise));\n    exports.ShallowCancelThenPromise = ShallowCancelThenPromise;\n    /**\n     * Returns a new promise that joins the provided promise. Upon completion of\n     * the provided promise the provided function will always be called. This\n     * method is comparable to a try-finally code block.\n     * @param promise a promise\n     * @param f a function that will be call in the success and error case.\n     */\n    function always(promise, f) {\n        return new winjs_base_1.TPromise(function (c, e, p) {\n            promise.done(function (result) {\n                try {\n                    f(result);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                c(result);\n            }, function (err) {\n                try {\n                    f(err);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                e(err);\n            }, function (progress) {\n                p(progress);\n            });\n        }, function () {\n            promise.cancel();\n        });\n    }\n    exports.always = always;\n    /**\n     * Runs the provided list of promise factories in sequential order. The returned\n     * promise will complete to an array of results from each promise.\n     */\n    function sequence(promiseFactory) {\n        var results = [];\n        // reverse since we start with last element using pop()\n        promiseFactory = promiseFactory.reverse();\n        function next() {\n            if (promiseFactory.length) {\n                return promiseFactory.pop()();\n            }\n            return null;\n        }\n        function thenHandler(result) {\n            if (result) {\n                results.push(result);\n            }\n            var n = next();\n            if (n) {\n                return n.then(thenHandler);\n            }\n            return winjs_base_1.TPromise.as(results);\n        }\n        return winjs_base_1.TPromise.as(null).then(thenHandler);\n    }\n    exports.sequence = sequence;\n    function once(fn) {\n        var _this = this;\n        var didCall = false;\n        var result;\n        return function () {\n            if (didCall) {\n                return result;\n            }\n            didCall = true;\n            result = fn.apply(_this, arguments);\n            return result;\n        };\n    }\n    exports.once = once;\n    /**\n     * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n     * ensures that at any time no more than M promises are running at the same time.\n     */\n    var Limiter = (function () {\n        function Limiter(maxDegreeOfParalellism) {\n            this.maxDegreeOfParalellism = maxDegreeOfParalellism;\n            this.outstandingPromises = [];\n            this.runningPromises = 0;\n        }\n        Limiter.prototype.queue = function (promiseFactory) {\n            var _this = this;\n            return new winjs_base_1.TPromise(function (c, e, p) {\n                _this.outstandingPromises.push({\n                    factory: promiseFactory,\n                    c: c,\n                    e: e,\n                    p: p\n                });\n                _this.consume();\n            });\n        };\n        Limiter.prototype.consume = function () {\n            var _this = this;\n            while (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n                var iLimitedTask = this.outstandingPromises.shift();\n                this.runningPromises++;\n                var promise = iLimitedTask.factory();\n                promise.done(iLimitedTask.c, iLimitedTask.e, iLimitedTask.p);\n                promise.done(function () { return _this.consumed(); }, function () { return _this.consumed(); });\n            }\n        };\n        Limiter.prototype.consumed = function () {\n            this.runningPromises--;\n            this.consume();\n        };\n        return Limiter;\n    }());\n    exports.Limiter = Limiter;\n    var TimeoutTimer = (function (_super) {\n        __extends(TimeoutTimer, _super);\n        function TimeoutTimer() {\n            _super.call(this);\n            this._token = -1;\n        }\n        TimeoutTimer.prototype.dispose = function () {\n            this.cancel();\n            _super.prototype.dispose.call(this);\n        };\n        TimeoutTimer.prototype.cancel = function () {\n            if (this._token !== -1) {\n                platform.clearTimeout(this._token);\n                this._token = -1;\n            }\n        };\n        TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\n            var _this = this;\n            this.cancel();\n            this._token = platform.setTimeout(function () {\n                _this._token = -1;\n                runner();\n            }, timeout);\n        };\n        TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\n            var _this = this;\n            if (this._token !== -1) {\n                // timer is already set\n                return;\n            }\n            this._token = platform.setTimeout(function () {\n                _this._token = -1;\n                runner();\n            }, timeout);\n        };\n        return TimeoutTimer;\n    }(lifecycle_1.Disposable));\n    exports.TimeoutTimer = TimeoutTimer;\n    var IntervalTimer = (function (_super) {\n        __extends(IntervalTimer, _super);\n        function IntervalTimer() {\n            _super.call(this);\n            this._token = -1;\n        }\n        IntervalTimer.prototype.dispose = function () {\n            this.cancel();\n            _super.prototype.dispose.call(this);\n        };\n        IntervalTimer.prototype.cancel = function () {\n            if (this._token !== -1) {\n                platform.clearInterval(this._token);\n                this._token = -1;\n            }\n        };\n        IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\n            this.cancel();\n            this._token = platform.setInterval(function () {\n                runner();\n            }, interval);\n        };\n        return IntervalTimer;\n    }(lifecycle_1.Disposable));\n    exports.IntervalTimer = IntervalTimer;\n    var RunOnceScheduler = (function () {\n        function RunOnceScheduler(runner, timeout) {\n            this.timeoutToken = -1;\n            this.runner = runner;\n            this.timeout = timeout;\n            this.timeoutHandler = this.onTimeout.bind(this);\n        }\n        /**\n         * Dispose RunOnceScheduler\n         */\n        RunOnceScheduler.prototype.dispose = function () {\n            this.cancel();\n            this.runner = null;\n        };\n        /**\n         * Cancel current scheduled runner (if any).\n         */\n        RunOnceScheduler.prototype.cancel = function () {\n            if (this.isScheduled()) {\n                platform.clearTimeout(this.timeoutToken);\n                this.timeoutToken = -1;\n            }\n        };\n        /**\n         * Replace runner. If there is a runner already scheduled, the new runner will be called.\n         */\n        RunOnceScheduler.prototype.setRunner = function (runner) {\n            this.runner = runner;\n        };\n        /**\n         * Cancel previous runner (if any) & schedule a new runner.\n         */\n        RunOnceScheduler.prototype.schedule = function (delay) {\n            if (delay === void 0) { delay = this.timeout; }\n            this.cancel();\n            this.timeoutToken = platform.setTimeout(this.timeoutHandler, delay);\n        };\n        /**\n         * Returns true if scheduled.\n         */\n        RunOnceScheduler.prototype.isScheduled = function () {\n            return this.timeoutToken !== -1;\n        };\n        RunOnceScheduler.prototype.onTimeout = function () {\n            this.timeoutToken = -1;\n            if (this.runner) {\n                this.runner();\n            }\n        };\n        return RunOnceScheduler;\n    }());\n    exports.RunOnceScheduler = RunOnceScheduler;\n    function nfcall(fn) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return new winjs_base_1.Promise(function (c, e) { return fn.apply(void 0, args.concat([function (err, result) { return err ? e(err) : c(result); }])); });\n    }\n    exports.nfcall = nfcall;\n    function ninvoke(thisArg, fn) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        return new winjs_base_1.Promise(function (c, e) { return fn.call.apply(fn, [thisArg].concat(args, [function (err, result) { return err ? e(err) : c(result); }])); });\n    }\n    exports.ninvoke = ninvoke;\n});\n\n\n\n\n\n\ndefine(__m[36], __M([1,0,5,10,2,31]), function (require, exports, errors_1, lifecycle_1, winjs_base_1, async_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var INITIALIZE = '$initialize';\n    var SimpleWorkerProtocol = (function () {\n        function SimpleWorkerProtocol(handler) {\n            this._workerId = -1;\n            this._handler = handler;\n            this._lastSentReq = 0;\n            this._pendingReplies = Object.create(null);\n        }\n        SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n            this._workerId = workerId;\n        };\n        SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n            var req = String(++this._lastSentReq);\n            var reply = {\n                c: null,\n                e: null\n            };\n            var result = new winjs_base_1.TPromise(function (c, e, p) {\n                reply.c = c;\n                reply.e = e;\n            }, function () {\n                // Cancel not supported\n            });\n            this._pendingReplies[req] = reply;\n            this._send({\n                vsWorker: this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n            return result;\n        };\n        SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n            var message;\n            try {\n                message = JSON.parse(serializedMessage);\n            }\n            catch (e) {\n            }\n            if (!message.vsWorker) {\n                return;\n            }\n            if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n                return;\n            }\n            this._handleMessage(message);\n        };\n        SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n            var _this = this;\n            if (msg.seq) {\n                var replyMessage = msg;\n                if (!this._pendingReplies[replyMessage.seq]) {\n                    console.warn('Got reply to unknown seq');\n                    return;\n                }\n                var reply = this._pendingReplies[replyMessage.seq];\n                delete this._pendingReplies[replyMessage.seq];\n                if (replyMessage.err) {\n                    var err = replyMessage.err;\n                    if (replyMessage.err.$isError) {\n                        err = new Error();\n                        err.name = replyMessage.err.name;\n                        err.message = replyMessage.err.message;\n                        err.stack = replyMessage.err.stack;\n                    }\n                    reply.e(err);\n                    return;\n                }\n                reply.c(replyMessage.res);\n                return;\n            }\n            var requestMessage = msg;\n            var req = requestMessage.req;\n            var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n            result.then(function (r) {\n                _this._send({\n                    vsWorker: _this._workerId,\n                    seq: req,\n                    res: r,\n                    err: undefined\n                });\n            }, function (e) {\n                _this._send({\n                    vsWorker: _this._workerId,\n                    seq: req,\n                    res: undefined,\n                    err: errors_1.transformErrorForSerialization(e)\n                });\n            });\n        };\n        SimpleWorkerProtocol.prototype._send = function (msg) {\n            var strMsg = JSON.stringify(msg);\n            // console.log('SENDING: ' + strMsg);\n            this._handler.sendMessage(strMsg);\n        };\n        return SimpleWorkerProtocol;\n    }());\n    /**\n     * Main thread side\n     */\n    var SimpleWorkerClient = (function (_super) {\n        __extends(SimpleWorkerClient, _super);\n        function SimpleWorkerClient(workerFactory, moduleId) {\n            var _this = this;\n            _super.call(this);\n            this._lastRequestTimestamp = -1;\n            var lazyProxyFulfill = null;\n            var lazyProxyReject = null;\n            this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n                _this._protocol.handleMessage(msg);\n            }, function (err) {\n                // in Firefox, web workers fail lazily :(\n                // we will reject the proxy\n                lazyProxyReject(err);\n            }));\n            this._protocol = new SimpleWorkerProtocol({\n                sendMessage: function (msg) {\n                    _this._worker.postMessage(msg);\n                },\n                handleMessage: function (method, args) {\n                    // Intentionally not supporting worker -> main requests\n                    return winjs_base_1.TPromise.as(null);\n                }\n            });\n            this._protocol.setWorkerId(this._worker.getId());\n            // Gather loader configuration\n            var loaderConfiguration = null;\n            var globalRequire = window.require;\n            if (typeof globalRequire.getConfig === 'function') {\n                // Get the configuration from the Monaco AMD Loader\n                loaderConfiguration = globalRequire.getConfig();\n            }\n            else if (typeof window.requirejs !== 'undefined') {\n                // Get the configuration from requirejs\n                loaderConfiguration = window.requirejs.s.contexts._.config;\n            }\n            this._lazyProxy = new winjs_base_1.TPromise(function (c, e, p) {\n                lazyProxyFulfill = c;\n                lazyProxyReject = e;\n            }, function () { });\n            // Send initialize message\n            this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n                this._worker.getId(),\n                moduleId,\n                loaderConfiguration\n            ]);\n            this._onModuleLoaded.then(function (availableMethods) {\n                var proxy = {};\n                for (var i = 0; i < availableMethods.length; i++) {\n                    proxy[availableMethods[i]] = createProxyMethod(availableMethods[i], proxyMethodRequest);\n                }\n                lazyProxyFulfill(proxy);\n            }, function (e) {\n                lazyProxyReject(e);\n                _this._onError('Worker failed to load ' + moduleId, e);\n            });\n            // Create proxy to loaded code\n            var proxyMethodRequest = function (method, args) {\n                return _this._request(method, args);\n            };\n            var createProxyMethod = function (method, proxyMethodRequest) {\n                return function () {\n                    var args = Array.prototype.slice.call(arguments, 0);\n                    return proxyMethodRequest(method, args);\n                };\n            };\n        }\n        SimpleWorkerClient.prototype.getProxyObject = function () {\n            // Do not allow chaining promises to cancel the proxy creation\n            return new async_1.ShallowCancelThenPromise(this._lazyProxy);\n        };\n        SimpleWorkerClient.prototype.getLastRequestTimestamp = function () {\n            return this._lastRequestTimestamp;\n        };\n        SimpleWorkerClient.prototype._request = function (method, args) {\n            var _this = this;\n            return new winjs_base_1.TPromise(function (c, e, p) {\n                _this._onModuleLoaded.then(function () {\n                    _this._lastRequestTimestamp = Date.now();\n                    _this._protocol.sendMessage(method, args).then(c, e);\n                }, e);\n            }, function () {\n                // Cancel intentionally not supported\n            });\n        };\n        SimpleWorkerClient.prototype._onError = function (message, error) {\n            console.error(message);\n            console.info(error);\n        };\n        return SimpleWorkerClient;\n    }(lifecycle_1.Disposable));\n    exports.SimpleWorkerClient = SimpleWorkerClient;\n    /**\n     * Worker side\n     */\n    var SimpleWorkerServer = (function () {\n        function SimpleWorkerServer(postSerializedMessage) {\n            var _this = this;\n            this._protocol = new SimpleWorkerProtocol({\n                sendMessage: function (msg) {\n                    postSerializedMessage(msg);\n                },\n                handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n            });\n        }\n        SimpleWorkerServer.prototype.onmessage = function (msg) {\n            this._protocol.handleMessage(msg);\n        };\n        SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n            if (method === INITIALIZE) {\n                return this.initialize(args[0], args[1], args[2]);\n            }\n            if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n                return winjs_base_1.TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n            }\n            try {\n                return winjs_base_1.TPromise.as(this._requestHandler[method].apply(this._requestHandler, args));\n            }\n            catch (e) {\n                return winjs_base_1.TPromise.wrapError(e);\n            }\n        };\n        SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n            var _this = this;\n            this._protocol.setWorkerId(workerId);\n            // TODO@Alex: share this code with workerServer\n            if (loaderConfig) {\n                // Remove 'baseUrl', handling it is beyond scope for now\n                if (typeof loaderConfig.baseUrl !== 'undefined') {\n                    delete loaderConfig['baseUrl'];\n                }\n                if (typeof loaderConfig.paths !== 'undefined') {\n                    if (typeof loaderConfig.paths.vs !== 'undefined') {\n                        delete loaderConfig.paths['vs'];\n                    }\n                }\n                var nlsConfig_1 = loaderConfig['vs/nls'];\n                // We need to have pseudo translation\n                if (nlsConfig_1 && nlsConfig_1.pseudo) {\n                    require(['vs/nls'], function (nlsPlugin) {\n                        nlsPlugin.setPseudoTranslation(nlsConfig_1.pseudo);\n                    });\n                }\n                // Since this is in a web worker, enable catching errors\n                loaderConfig.catchError = true;\n                self.require.config(loaderConfig);\n            }\n            var cc;\n            var ee;\n            var r = new winjs_base_1.TPromise(function (c, e, p) {\n                cc = c;\n                ee = e;\n            });\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], function () {\n                var result = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    result[_i - 0] = arguments[_i];\n                }\n                var handlerModule = result[0];\n                _this._requestHandler = handlerModule.create();\n                var methods = [];\n                for (var prop in _this._requestHandler) {\n                    if (typeof _this._requestHandler[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                cc(methods);\n            }, ee);\n            return r;\n        };\n        return SimpleWorkerServer;\n    }());\n    exports.SimpleWorkerServer = SimpleWorkerServer;\n    /**\n     * Called on the worker side\n     */\n    function create(postMessage) {\n        return new SimpleWorkerServer(postMessage);\n    }\n    exports.create = create;\n});\n\ndefine(__m[33], __M([11,12]), function(nls, data) { return nls.create(\"vs/base/common/keyCodes\", data); });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[34], __M([1,0,33,3]), function (require, exports, nls, defaultPlatform) {\n    'use strict';\n    /**\n     * Virtual Key Codes, the value does not hold any inherent meaning.\n     * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n     * But these are \"more general\", as they should work across browsers & OS`s.\n     */\n    (function (KeyCode) {\n        /**\n         * Placed first to cover the 0 value of the enum.\n         */\n        KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n        KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n        KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n        KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n        KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n        KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n        KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n        KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n        KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n        KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n        KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n        KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n        KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n        KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n        KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n        KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n        KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n        KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n        KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n        KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n        KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n        KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n        KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n        KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n        KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n        KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n        KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n        KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n        KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n        KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n        KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n        KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n        KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n        KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n        KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n        KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n        KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n        KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n        KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n        KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n        KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n        KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n        KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n        KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n        KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n        KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n        KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n        KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n        KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n        KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n        KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n        KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n        KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n        KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n        KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n        KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n        KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n        KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n        KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n        KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n        KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n        KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n        KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n        KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n        KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n        KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n        KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n        KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n        KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n        KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n        KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n        KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n        KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n        KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n        KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n        KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n        KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n        KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n        KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n        KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the ';:' key\n         */\n        KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n        /**\n         * For any country/region, the '+' key\n         * For the US standard keyboard, the '=+' key\n         */\n        KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n        /**\n         * For any country/region, the ',' key\n         * For the US standard keyboard, the ',<' key\n         */\n        KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n        /**\n         * For any country/region, the '-' key\n         * For the US standard keyboard, the '-_' key\n         */\n        KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n        /**\n         * For any country/region, the '.' key\n         * For the US standard keyboard, the '.>' key\n         */\n        KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the '/?' key\n         */\n        KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the '`~' key\n         */\n        KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the '[{' key\n         */\n        KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the '\\|' key\n         */\n        KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the ']}' key\n         */\n        KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the ''\"' key\n         */\n        KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         */\n        KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n        /**\n         * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n         */\n        KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n        KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n        KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n        KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n        KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n        KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n        KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n        KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n        KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n        KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n        KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n        KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n        KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n        KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n        KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n        KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n        KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n        /**\n         * Placed last to cover the length of the enum.\n         */\n        KeyCode[KeyCode[\"MAX_VALUE\"] = 109] = \"MAX_VALUE\";\n    })(exports.KeyCode || (exports.KeyCode = {}));\n    var KeyCode = exports.KeyCode;\n    var Mapping = (function () {\n        function Mapping(fromKeyCode, toKeyCode) {\n            this._fromKeyCode = fromKeyCode;\n            this._toKeyCode = toKeyCode;\n        }\n        Mapping.prototype.fromKeyCode = function (keyCode) {\n            return this._fromKeyCode[keyCode];\n        };\n        Mapping.prototype.toKeyCode = function (str) {\n            if (this._toKeyCode.hasOwnProperty(str)) {\n                return this._toKeyCode[str];\n            }\n            return KeyCode.Unknown;\n        };\n        return Mapping;\n    }());\n    function createMapping(fill1, fill2) {\n        var MAP = [];\n        fill1(MAP);\n        var REVERSE_MAP = {};\n        for (var i = 0, len = MAP.length; i < len; i++) {\n            if (!MAP[i]) {\n                continue;\n            }\n            REVERSE_MAP[MAP[i]] = i;\n        }\n        fill2(REVERSE_MAP);\n        var FINAL_REVERSE_MAP = {};\n        for (var entry in REVERSE_MAP) {\n            if (REVERSE_MAP.hasOwnProperty(entry)) {\n                FINAL_REVERSE_MAP[entry] = REVERSE_MAP[entry];\n                FINAL_REVERSE_MAP[entry.toLowerCase()] = REVERSE_MAP[entry];\n            }\n        }\n        return new Mapping(MAP, FINAL_REVERSE_MAP);\n    }\n    var STRING = createMapping(function (TO_STRING_MAP) {\n        TO_STRING_MAP[KeyCode.Unknown] = 'unknown';\n        TO_STRING_MAP[KeyCode.Backspace] = 'Backspace';\n        TO_STRING_MAP[KeyCode.Tab] = 'Tab';\n        TO_STRING_MAP[KeyCode.Enter] = 'Enter';\n        TO_STRING_MAP[KeyCode.Shift] = 'Shift';\n        TO_STRING_MAP[KeyCode.Ctrl] = 'Ctrl';\n        TO_STRING_MAP[KeyCode.Alt] = 'Alt';\n        TO_STRING_MAP[KeyCode.PauseBreak] = 'PauseBreak';\n        TO_STRING_MAP[KeyCode.CapsLock] = 'CapsLock';\n        TO_STRING_MAP[KeyCode.Escape] = 'Escape';\n        TO_STRING_MAP[KeyCode.Space] = 'Space';\n        TO_STRING_MAP[KeyCode.PageUp] = 'PageUp';\n        TO_STRING_MAP[KeyCode.PageDown] = 'PageDown';\n        TO_STRING_MAP[KeyCode.End] = 'End';\n        TO_STRING_MAP[KeyCode.Home] = 'Home';\n        TO_STRING_MAP[KeyCode.LeftArrow] = 'LeftArrow';\n        TO_STRING_MAP[KeyCode.UpArrow] = 'UpArrow';\n        TO_STRING_MAP[KeyCode.RightArrow] = 'RightArrow';\n        TO_STRING_MAP[KeyCode.DownArrow] = 'DownArrow';\n        TO_STRING_MAP[KeyCode.Insert] = 'Insert';\n        TO_STRING_MAP[KeyCode.Delete] = 'Delete';\n        TO_STRING_MAP[KeyCode.KEY_0] = '0';\n        TO_STRING_MAP[KeyCode.KEY_1] = '1';\n        TO_STRING_MAP[KeyCode.KEY_2] = '2';\n        TO_STRING_MAP[KeyCode.KEY_3] = '3';\n        TO_STRING_MAP[KeyCode.KEY_4] = '4';\n        TO_STRING_MAP[KeyCode.KEY_5] = '5';\n        TO_STRING_MAP[KeyCode.KEY_6] = '6';\n        TO_STRING_MAP[KeyCode.KEY_7] = '7';\n        TO_STRING_MAP[KeyCode.KEY_8] = '8';\n        TO_STRING_MAP[KeyCode.KEY_9] = '9';\n        TO_STRING_MAP[KeyCode.KEY_A] = 'A';\n        TO_STRING_MAP[KeyCode.KEY_B] = 'B';\n        TO_STRING_MAP[KeyCode.KEY_C] = 'C';\n        TO_STRING_MAP[KeyCode.KEY_D] = 'D';\n        TO_STRING_MAP[KeyCode.KEY_E] = 'E';\n        TO_STRING_MAP[KeyCode.KEY_F] = 'F';\n        TO_STRING_MAP[KeyCode.KEY_G] = 'G';\n        TO_STRING_MAP[KeyCode.KEY_H] = 'H';\n        TO_STRING_MAP[KeyCode.KEY_I] = 'I';\n        TO_STRING_MAP[KeyCode.KEY_J] = 'J';\n        TO_STRING_MAP[KeyCode.KEY_K] = 'K';\n        TO_STRING_MAP[KeyCode.KEY_L] = 'L';\n        TO_STRING_MAP[KeyCode.KEY_M] = 'M';\n        TO_STRING_MAP[KeyCode.KEY_N] = 'N';\n        TO_STRING_MAP[KeyCode.KEY_O] = 'O';\n        TO_STRING_MAP[KeyCode.KEY_P] = 'P';\n        TO_STRING_MAP[KeyCode.KEY_Q] = 'Q';\n        TO_STRING_MAP[KeyCode.KEY_R] = 'R';\n        TO_STRING_MAP[KeyCode.KEY_S] = 'S';\n        TO_STRING_MAP[KeyCode.KEY_T] = 'T';\n        TO_STRING_MAP[KeyCode.KEY_U] = 'U';\n        TO_STRING_MAP[KeyCode.KEY_V] = 'V';\n        TO_STRING_MAP[KeyCode.KEY_W] = 'W';\n        TO_STRING_MAP[KeyCode.KEY_X] = 'X';\n        TO_STRING_MAP[KeyCode.KEY_Y] = 'Y';\n        TO_STRING_MAP[KeyCode.KEY_Z] = 'Z';\n        TO_STRING_MAP[KeyCode.ContextMenu] = 'ContextMenu';\n        TO_STRING_MAP[KeyCode.F1] = 'F1';\n        TO_STRING_MAP[KeyCode.F2] = 'F2';\n        TO_STRING_MAP[KeyCode.F3] = 'F3';\n        TO_STRING_MAP[KeyCode.F4] = 'F4';\n        TO_STRING_MAP[KeyCode.F5] = 'F5';\n        TO_STRING_MAP[KeyCode.F6] = 'F6';\n        TO_STRING_MAP[KeyCode.F7] = 'F7';\n        TO_STRING_MAP[KeyCode.F8] = 'F8';\n        TO_STRING_MAP[KeyCode.F9] = 'F9';\n        TO_STRING_MAP[KeyCode.F10] = 'F10';\n        TO_STRING_MAP[KeyCode.F11] = 'F11';\n        TO_STRING_MAP[KeyCode.F12] = 'F12';\n        TO_STRING_MAP[KeyCode.F13] = 'F13';\n        TO_STRING_MAP[KeyCode.F14] = 'F14';\n        TO_STRING_MAP[KeyCode.F15] = 'F15';\n        TO_STRING_MAP[KeyCode.F16] = 'F16';\n        TO_STRING_MAP[KeyCode.F17] = 'F17';\n        TO_STRING_MAP[KeyCode.F18] = 'F18';\n        TO_STRING_MAP[KeyCode.F19] = 'F19';\n        TO_STRING_MAP[KeyCode.NumLock] = 'NumLock';\n        TO_STRING_MAP[KeyCode.ScrollLock] = 'ScrollLock';\n        TO_STRING_MAP[KeyCode.US_SEMICOLON] = ';';\n        TO_STRING_MAP[KeyCode.US_EQUAL] = '=';\n        TO_STRING_MAP[KeyCode.US_COMMA] = ',';\n        TO_STRING_MAP[KeyCode.US_MINUS] = '-';\n        TO_STRING_MAP[KeyCode.US_DOT] = '.';\n        TO_STRING_MAP[KeyCode.US_SLASH] = '/';\n        TO_STRING_MAP[KeyCode.US_BACKTICK] = '`';\n        TO_STRING_MAP[KeyCode.US_OPEN_SQUARE_BRACKET] = '[';\n        TO_STRING_MAP[KeyCode.US_BACKSLASH] = '\\\\';\n        TO_STRING_MAP[KeyCode.US_CLOSE_SQUARE_BRACKET] = ']';\n        TO_STRING_MAP[KeyCode.US_QUOTE] = '\\'';\n        TO_STRING_MAP[KeyCode.OEM_8] = 'OEM_8';\n        TO_STRING_MAP[KeyCode.OEM_102] = 'OEM_102';\n        TO_STRING_MAP[KeyCode.NUMPAD_0] = 'NumPad0';\n        TO_STRING_MAP[KeyCode.NUMPAD_1] = 'NumPad1';\n        TO_STRING_MAP[KeyCode.NUMPAD_2] = 'NumPad2';\n        TO_STRING_MAP[KeyCode.NUMPAD_3] = 'NumPad3';\n        TO_STRING_MAP[KeyCode.NUMPAD_4] = 'NumPad4';\n        TO_STRING_MAP[KeyCode.NUMPAD_5] = 'NumPad5';\n        TO_STRING_MAP[KeyCode.NUMPAD_6] = 'NumPad6';\n        TO_STRING_MAP[KeyCode.NUMPAD_7] = 'NumPad7';\n        TO_STRING_MAP[KeyCode.NUMPAD_8] = 'NumPad8';\n        TO_STRING_MAP[KeyCode.NUMPAD_9] = 'NumPad9';\n        TO_STRING_MAP[KeyCode.NUMPAD_MULTIPLY] = 'NumPad_Multiply';\n        TO_STRING_MAP[KeyCode.NUMPAD_ADD] = 'NumPad_Add';\n        TO_STRING_MAP[KeyCode.NUMPAD_SEPARATOR] = 'NumPad_Separator';\n        TO_STRING_MAP[KeyCode.NUMPAD_SUBTRACT] = 'NumPad_Subtract';\n        TO_STRING_MAP[KeyCode.NUMPAD_DECIMAL] = 'NumPad_Decimal';\n        TO_STRING_MAP[KeyCode.NUMPAD_DIVIDE] = 'NumPad_Divide';\n        // for (let i = 0; i < KeyCode.MAX_VALUE; i++) {\n        // \tif (!TO_STRING_MAP[i]) {\n        // \t\tconsole.warn('Missing string representation for ' + KeyCode[i]);\n        // \t}\n        // }\n    }, function (FROM_STRING_MAP) {\n        FROM_STRING_MAP['\\r'] = KeyCode.Enter;\n    });\n    var USER_SETTINGS = createMapping(function (TO_USER_SETTINGS_MAP) {\n        for (var i = 0, len = STRING._fromKeyCode.length; i < len; i++) {\n            TO_USER_SETTINGS_MAP[i] = STRING._fromKeyCode[i];\n        }\n        TO_USER_SETTINGS_MAP[KeyCode.LeftArrow] = 'Left';\n        TO_USER_SETTINGS_MAP[KeyCode.UpArrow] = 'Up';\n        TO_USER_SETTINGS_MAP[KeyCode.RightArrow] = 'Right';\n        TO_USER_SETTINGS_MAP[KeyCode.DownArrow] = 'Down';\n    }, function (FROM_USER_SETTINGS_MAP) {\n        FROM_USER_SETTINGS_MAP['OEM_1'] = KeyCode.US_SEMICOLON;\n        FROM_USER_SETTINGS_MAP['OEM_PLUS'] = KeyCode.US_EQUAL;\n        FROM_USER_SETTINGS_MAP['OEM_COMMA'] = KeyCode.US_COMMA;\n        FROM_USER_SETTINGS_MAP['OEM_MINUS'] = KeyCode.US_MINUS;\n        FROM_USER_SETTINGS_MAP['OEM_PERIOD'] = KeyCode.US_DOT;\n        FROM_USER_SETTINGS_MAP['OEM_2'] = KeyCode.US_SLASH;\n        FROM_USER_SETTINGS_MAP['OEM_3'] = KeyCode.US_BACKTICK;\n        FROM_USER_SETTINGS_MAP['OEM_4'] = KeyCode.US_OPEN_SQUARE_BRACKET;\n        FROM_USER_SETTINGS_MAP['OEM_5'] = KeyCode.US_BACKSLASH;\n        FROM_USER_SETTINGS_MAP['OEM_6'] = KeyCode.US_CLOSE_SQUARE_BRACKET;\n        FROM_USER_SETTINGS_MAP['OEM_7'] = KeyCode.US_QUOTE;\n        FROM_USER_SETTINGS_MAP['OEM_8'] = KeyCode.OEM_8;\n        FROM_USER_SETTINGS_MAP['OEM_102'] = KeyCode.OEM_102;\n    });\n    var KeyCode;\n    (function (KeyCode) {\n        function toString(key) {\n            return STRING.fromKeyCode(key);\n        }\n        KeyCode.toString = toString;\n        function fromString(key) {\n            return STRING.toKeyCode(key);\n        }\n        KeyCode.fromString = fromString;\n    })(KeyCode = exports.KeyCode || (exports.KeyCode = {}));\n    // Binary encoding strategy:\n    // 15:  1 bit for ctrlCmd\n    // 14:  1 bit for shift\n    // 13:  1 bit for alt\n    // 12:  1 bit for winCtrl\n    //  0: 12 bits for keyCode (up to a maximum keyCode of 4096. Given we have 83 at this point thats good enough)\n    var BIN_CTRLCMD_MASK = 1 << 15;\n    var BIN_SHIFT_MASK = 1 << 14;\n    var BIN_ALT_MASK = 1 << 13;\n    var BIN_WINCTRL_MASK = 1 << 12;\n    var BIN_KEYCODE_MASK = 0x00000fff;\n    var BinaryKeybindings = (function () {\n        function BinaryKeybindings() {\n        }\n        BinaryKeybindings.extractFirstPart = function (keybinding) {\n            return keybinding & 0x0000ffff;\n        };\n        BinaryKeybindings.extractChordPart = function (keybinding) {\n            return (keybinding >> 16) & 0x0000ffff;\n        };\n        BinaryKeybindings.hasChord = function (keybinding) {\n            return (this.extractChordPart(keybinding) !== 0);\n        };\n        BinaryKeybindings.hasCtrlCmd = function (keybinding) {\n            return (keybinding & BIN_CTRLCMD_MASK ? true : false);\n        };\n        BinaryKeybindings.hasShift = function (keybinding) {\n            return (keybinding & BIN_SHIFT_MASK ? true : false);\n        };\n        BinaryKeybindings.hasAlt = function (keybinding) {\n            return (keybinding & BIN_ALT_MASK ? true : false);\n        };\n        BinaryKeybindings.hasWinCtrl = function (keybinding) {\n            return (keybinding & BIN_WINCTRL_MASK ? true : false);\n        };\n        BinaryKeybindings.extractKeyCode = function (keybinding) {\n            return (keybinding & BIN_KEYCODE_MASK);\n        };\n        return BinaryKeybindings;\n    }());\n    exports.BinaryKeybindings = BinaryKeybindings;\n    var KeyMod = (function () {\n        function KeyMod() {\n        }\n        KeyMod.chord = function (firstPart, secondPart) {\n            return firstPart | ((secondPart & 0x0000ffff) << 16);\n        };\n        KeyMod.CtrlCmd = BIN_CTRLCMD_MASK;\n        KeyMod.Shift = BIN_SHIFT_MASK;\n        KeyMod.Alt = BIN_ALT_MASK;\n        KeyMod.WinCtrl = BIN_WINCTRL_MASK;\n        return KeyMod;\n    }());\n    exports.KeyMod = KeyMod;\n    /**\n     * A set of usual keybindings that can be reused in code\n     */\n    var CommonKeybindings = (function () {\n        function CommonKeybindings() {\n        }\n        CommonKeybindings.ENTER = KeyCode.Enter;\n        CommonKeybindings.SHIFT_ENTER = KeyMod.Shift | KeyCode.Enter;\n        CommonKeybindings.CTRLCMD_ENTER = KeyMod.CtrlCmd | KeyCode.Enter;\n        CommonKeybindings.WINCTRL_ENTER = KeyMod.WinCtrl | KeyCode.Enter;\n        CommonKeybindings.TAB = KeyCode.Tab;\n        CommonKeybindings.SHIFT_TAB = KeyMod.Shift | KeyCode.Tab;\n        CommonKeybindings.ESCAPE = KeyCode.Escape;\n        CommonKeybindings.SPACE = KeyCode.Space;\n        CommonKeybindings.DELETE = KeyCode.Delete;\n        CommonKeybindings.SHIFT_DELETE = KeyMod.Shift | KeyCode.Delete;\n        CommonKeybindings.CTRLCMD_BACKSPACE = KeyMod.CtrlCmd | KeyCode.Backspace;\n        CommonKeybindings.UP_ARROW = KeyCode.UpArrow;\n        CommonKeybindings.SHIFT_UP_ARROW = KeyMod.Shift | KeyCode.UpArrow;\n        CommonKeybindings.CTRLCMD_UP_ARROW = KeyMod.CtrlCmd | KeyCode.UpArrow;\n        CommonKeybindings.DOWN_ARROW = KeyCode.DownArrow;\n        CommonKeybindings.SHIFT_DOWN_ARROW = KeyMod.Shift | KeyCode.DownArrow;\n        CommonKeybindings.CTRLCMD_DOWN_ARROW = KeyMod.CtrlCmd | KeyCode.DownArrow;\n        CommonKeybindings.LEFT_ARROW = KeyCode.LeftArrow;\n        CommonKeybindings.RIGHT_ARROW = KeyCode.RightArrow;\n        CommonKeybindings.HOME = KeyCode.Home;\n        CommonKeybindings.END = KeyCode.End;\n        CommonKeybindings.PAGE_UP = KeyCode.PageUp;\n        CommonKeybindings.SHIFT_PAGE_UP = KeyMod.Shift | KeyCode.PageUp;\n        CommonKeybindings.PAGE_DOWN = KeyCode.PageDown;\n        CommonKeybindings.SHIFT_PAGE_DOWN = KeyMod.Shift | KeyCode.PageDown;\n        CommonKeybindings.F2 = KeyCode.F2;\n        CommonKeybindings.CTRLCMD_S = KeyMod.CtrlCmd | KeyCode.KEY_S;\n        CommonKeybindings.CTRLCMD_C = KeyMod.CtrlCmd | KeyCode.KEY_C;\n        CommonKeybindings.CTRLCMD_V = KeyMod.CtrlCmd | KeyCode.KEY_V;\n        return CommonKeybindings;\n    }());\n    exports.CommonKeybindings = CommonKeybindings;\n    var Keybinding = (function () {\n        function Keybinding(keybinding) {\n            this.value = keybinding;\n        }\n        /**\n         * Format the binding to a format appropiate for rendering in the UI\n         */\n        Keybinding._toUSLabel = function (value, Platform) {\n            return _asString(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE), Platform);\n        };\n        /**\n         * Format the binding to a format appropiate for placing in an aria-label.\n         */\n        Keybinding._toUSAriaLabel = function (value, Platform) {\n            return _asString(value, AriaKeyLabelProvider.INSTANCE, Platform);\n        };\n        /**\n         * Format the binding to a format appropiate for rendering in the UI\n         */\n        Keybinding._toUSHTMLLabel = function (value, Platform) {\n            return _asHTML(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE), Platform);\n        };\n        /**\n         * Format the binding to a format appropiate for rendering in the UI\n         */\n        Keybinding._toCustomLabel = function (value, labelProvider, Platform) {\n            return _asString(value, labelProvider, Platform);\n        };\n        /**\n         * Format the binding to a format appropiate for rendering in the UI\n         */\n        Keybinding._toCustomHTMLLabel = function (value, labelProvider, Platform) {\n            return _asHTML(value, labelProvider, Platform);\n        };\n        /**\n         * This prints the binding in a format suitable for electron's accelerators.\n         * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n         */\n        Keybinding._toElectronAccelerator = function (value, Platform) {\n            if (BinaryKeybindings.hasChord(value)) {\n                // Electron cannot handle chords\n                return null;\n            }\n            return _asString(value, ElectronAcceleratorLabelProvider.INSTANCE, Platform);\n        };\n        Keybinding.getUserSettingsKeybindingRegex = function () {\n            if (!this._cachedKeybindingRegex) {\n                var numpadKey = 'numpad(0|1|2|3|4|5|6|7|8|9|_multiply|_add|_subtract|_decimal|_divide|_separator)';\n                var oemKey = '`|\\\\-|=|\\\\[|\\\\]|\\\\\\\\\\\\\\\\|;|\\'|,|\\\\.|\\\\/|oem_8|oem_102';\n                var specialKey = 'left|up|right|down|pageup|pagedown|end|home|tab|enter|escape|space|backspace|delete|pausebreak|capslock|insert|contextmenu|numlock|scrolllock';\n                var casualKey = '[a-z]|[0-9]|f(1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19)';\n                var key = '((' + [numpadKey, oemKey, specialKey, casualKey].join(')|(') + '))';\n                var mod = '((ctrl|shift|alt|cmd|win|meta)\\\\+)*';\n                var keybinding = '(' + mod + key + ')';\n                this._cachedKeybindingRegex = '\"\\\\s*(' + keybinding + '(\\\\s+' + keybinding + ')?' + ')\\\\s*\"';\n            }\n            return this._cachedKeybindingRegex;\n        };\n        /**\n         * Format the binding to a format appropiate for the user settings file.\n         */\n        Keybinding.toUserSettingsLabel = function (value, Platform) {\n            if (Platform === void 0) { Platform = defaultPlatform; }\n            var result = _asString(value, UserSettingsKeyLabelProvider.INSTANCE, Platform);\n            result = result.toLowerCase();\n            if (Platform.isMacintosh) {\n                result = result.replace(/meta/g, 'cmd');\n            }\n            else if (Platform.isWindows) {\n                result = result.replace(/meta/g, 'win');\n            }\n            return result;\n        };\n        Keybinding.fromUserSettingsLabel = function (input, Platform) {\n            if (Platform === void 0) { Platform = defaultPlatform; }\n            if (!input) {\n                return null;\n            }\n            input = input.toLowerCase().trim();\n            var ctrlCmd = false, shift = false, alt = false, winCtrl = false, key = '';\n            while (/^(ctrl|shift|alt|meta|win|cmd)(\\+|\\-)/.test(input)) {\n                if (/^ctrl(\\+|\\-)/.test(input)) {\n                    if (Platform.isMacintosh) {\n                        winCtrl = true;\n                    }\n                    else {\n                        ctrlCmd = true;\n                    }\n                    input = input.substr('ctrl-'.length);\n                }\n                if (/^shift(\\+|\\-)/.test(input)) {\n                    shift = true;\n                    input = input.substr('shift-'.length);\n                }\n                if (/^alt(\\+|\\-)/.test(input)) {\n                    alt = true;\n                    input = input.substr('alt-'.length);\n                }\n                if (/^meta(\\+|\\-)/.test(input)) {\n                    if (Platform.isMacintosh) {\n                        ctrlCmd = true;\n                    }\n                    else {\n                        winCtrl = true;\n                    }\n                    input = input.substr('meta-'.length);\n                }\n                if (/^win(\\+|\\-)/.test(input)) {\n                    if (Platform.isMacintosh) {\n                        ctrlCmd = true;\n                    }\n                    else {\n                        winCtrl = true;\n                    }\n                    input = input.substr('win-'.length);\n                }\n                if (/^cmd(\\+|\\-)/.test(input)) {\n                    if (Platform.isMacintosh) {\n                        ctrlCmd = true;\n                    }\n                    else {\n                        winCtrl = true;\n                    }\n                    input = input.substr('cmd-'.length);\n                }\n            }\n            var chord = 0;\n            var firstSpaceIdx = input.indexOf(' ');\n            if (firstSpaceIdx > 0) {\n                key = input.substring(0, firstSpaceIdx);\n                chord = Keybinding.fromUserSettingsLabel(input.substring(firstSpaceIdx), Platform);\n            }\n            else {\n                key = input;\n            }\n            var keyCode = USER_SETTINGS.toKeyCode(key);\n            var result = 0;\n            if (ctrlCmd) {\n                result |= KeyMod.CtrlCmd;\n            }\n            if (shift) {\n                result |= KeyMod.Shift;\n            }\n            if (alt) {\n                result |= KeyMod.Alt;\n            }\n            if (winCtrl) {\n                result |= KeyMod.WinCtrl;\n            }\n            result |= keyCode;\n            return KeyMod.chord(result, chord);\n        };\n        Keybinding.prototype.hasCtrlCmd = function () {\n            return BinaryKeybindings.hasCtrlCmd(this.value);\n        };\n        Keybinding.prototype.hasShift = function () {\n            return BinaryKeybindings.hasShift(this.value);\n        };\n        Keybinding.prototype.hasAlt = function () {\n            return BinaryKeybindings.hasAlt(this.value);\n        };\n        Keybinding.prototype.hasWinCtrl = function () {\n            return BinaryKeybindings.hasWinCtrl(this.value);\n        };\n        Keybinding.prototype.extractKeyCode = function () {\n            return BinaryKeybindings.extractKeyCode(this.value);\n        };\n        /**\n         * Format the binding to a format appropiate for rendering in the UI\n         */\n        Keybinding.prototype._toUSLabel = function (Platform) {\n            if (Platform === void 0) { Platform = defaultPlatform; }\n            return Keybinding._toUSLabel(this.value, Platform);\n        };\n        /**\n         * Format the binding to a format appropiate for placing in an aria-label.\n         */\n        Keybinding.prototype._toUSAriaLabel = function (Platform) {\n            if (Platform === void 0) { Platform = defaultPlatform; }\n            return Keybinding._toUSAriaLabel(this.value, Platform);\n        };\n        /**\n         * Format the binding to a format appropiate for rendering in the UI\n         */\n        Keybinding.prototype._toUSHTMLLabel = function (Platform) {\n            if (Platform === void 0) { Platform = defaultPlatform; }\n            return Keybinding._toUSHTMLLabel(this.value, Platform);\n        };\n        /**\n         * Format the binding to a format appropiate for rendering in the UI\n         */\n        Keybinding.prototype.toCustomLabel = function (labelProvider, Platform) {\n            if (Platform === void 0) { Platform = defaultPlatform; }\n            return Keybinding._toCustomLabel(this.value, labelProvider, Platform);\n        };\n        /**\n         * Format the binding to a format appropiate for rendering in the UI\n         */\n        Keybinding.prototype.toCustomHTMLLabel = function (labelProvider, Platform) {\n            if (Platform === void 0) { Platform = defaultPlatform; }\n            return Keybinding._toCustomHTMLLabel(this.value, labelProvider, Platform);\n        };\n        /**\n         * This prints the binding in a format suitable for electron's accelerators.\n         * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n         */\n        Keybinding.prototype._toElectronAccelerator = function (Platform) {\n            if (Platform === void 0) { Platform = defaultPlatform; }\n            return Keybinding._toElectronAccelerator(this.value, Platform);\n        };\n        /**\n         * Format the binding to a format appropiate for the user settings file.\n         */\n        Keybinding.prototype.toUserSettingsLabel = function (Platform) {\n            if (Platform === void 0) { Platform = defaultPlatform; }\n            return Keybinding.toUserSettingsLabel(this.value, Platform);\n        };\n        Keybinding._cachedKeybindingRegex = null;\n        return Keybinding;\n    }());\n    exports.Keybinding = Keybinding;\n    /**\n     * Print for Electron\n     */\n    var ElectronAcceleratorLabelProvider = (function () {\n        function ElectronAcceleratorLabelProvider() {\n            this.ctrlKeyLabel = 'Ctrl';\n            this.shiftKeyLabel = 'Shift';\n            this.altKeyLabel = 'Alt';\n            this.cmdKeyLabel = 'Cmd';\n            this.windowsKeyLabel = 'Super';\n            this.modifierSeparator = '+';\n        }\n        ElectronAcceleratorLabelProvider.prototype.getLabelForKey = function (keyCode) {\n            switch (keyCode) {\n                case KeyCode.UpArrow:\n                    return 'Up';\n                case KeyCode.DownArrow:\n                    return 'Down';\n                case KeyCode.LeftArrow:\n                    return 'Left';\n                case KeyCode.RightArrow:\n                    return 'Right';\n            }\n            return KeyCode.toString(keyCode);\n        };\n        ElectronAcceleratorLabelProvider.INSTANCE = new ElectronAcceleratorLabelProvider();\n        return ElectronAcceleratorLabelProvider;\n    }());\n    exports.ElectronAcceleratorLabelProvider = ElectronAcceleratorLabelProvider;\n    /**\n     * Print for Mac UI\n     */\n    var MacUIKeyLabelProvider = (function () {\n        function MacUIKeyLabelProvider() {\n            this.ctrlKeyLabel = '\\u2303';\n            this.shiftKeyLabel = '\\u21E7';\n            this.altKeyLabel = '\\u2325';\n            this.cmdKeyLabel = '\\u2318';\n            this.windowsKeyLabel = nls.localize(0, null);\n            this.modifierSeparator = '';\n        }\n        MacUIKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\n            switch (keyCode) {\n                case KeyCode.LeftArrow:\n                    return MacUIKeyLabelProvider.leftArrowUnicodeLabel;\n                case KeyCode.UpArrow:\n                    return MacUIKeyLabelProvider.upArrowUnicodeLabel;\n                case KeyCode.RightArrow:\n                    return MacUIKeyLabelProvider.rightArrowUnicodeLabel;\n                case KeyCode.DownArrow:\n                    return MacUIKeyLabelProvider.downArrowUnicodeLabel;\n            }\n            return KeyCode.toString(keyCode);\n        };\n        MacUIKeyLabelProvider.INSTANCE = new MacUIKeyLabelProvider();\n        MacUIKeyLabelProvider.leftArrowUnicodeLabel = String.fromCharCode(8592);\n        MacUIKeyLabelProvider.upArrowUnicodeLabel = String.fromCharCode(8593);\n        MacUIKeyLabelProvider.rightArrowUnicodeLabel = String.fromCharCode(8594);\n        MacUIKeyLabelProvider.downArrowUnicodeLabel = String.fromCharCode(8595);\n        return MacUIKeyLabelProvider;\n    }());\n    exports.MacUIKeyLabelProvider = MacUIKeyLabelProvider;\n    /**\n     * Aria label provider for Mac.\n     */\n    var AriaKeyLabelProvider = (function () {\n        function AriaKeyLabelProvider() {\n            this.ctrlKeyLabel = nls.localize(1, null);\n            this.shiftKeyLabel = nls.localize(2, null);\n            this.altKeyLabel = nls.localize(3, null);\n            this.cmdKeyLabel = nls.localize(4, null);\n            this.windowsKeyLabel = nls.localize(5, null);\n            this.modifierSeparator = '+';\n        }\n        AriaKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\n            return KeyCode.toString(keyCode);\n        };\n        AriaKeyLabelProvider.INSTANCE = new MacUIKeyLabelProvider();\n        return AriaKeyLabelProvider;\n    }());\n    exports.AriaKeyLabelProvider = AriaKeyLabelProvider;\n    /**\n     * Print for Windows, Linux UI\n     */\n    var ClassicUIKeyLabelProvider = (function () {\n        function ClassicUIKeyLabelProvider() {\n            this.ctrlKeyLabel = nls.localize(6, null);\n            this.shiftKeyLabel = nls.localize(7, null);\n            this.altKeyLabel = nls.localize(8, null);\n            this.cmdKeyLabel = nls.localize(9, null);\n            this.windowsKeyLabel = nls.localize(10, null);\n            this.modifierSeparator = '+';\n        }\n        ClassicUIKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\n            return KeyCode.toString(keyCode);\n        };\n        ClassicUIKeyLabelProvider.INSTANCE = new ClassicUIKeyLabelProvider();\n        return ClassicUIKeyLabelProvider;\n    }());\n    exports.ClassicUIKeyLabelProvider = ClassicUIKeyLabelProvider;\n    /**\n     * Print for the user settings file.\n     */\n    var UserSettingsKeyLabelProvider = (function () {\n        function UserSettingsKeyLabelProvider() {\n            this.ctrlKeyLabel = 'Ctrl';\n            this.shiftKeyLabel = 'Shift';\n            this.altKeyLabel = 'Alt';\n            this.cmdKeyLabel = 'Meta';\n            this.windowsKeyLabel = 'Meta';\n            this.modifierSeparator = '+';\n        }\n        UserSettingsKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\n            return USER_SETTINGS.fromKeyCode(keyCode);\n        };\n        UserSettingsKeyLabelProvider.INSTANCE = new UserSettingsKeyLabelProvider();\n        return UserSettingsKeyLabelProvider;\n    }());\n    function _asString(keybinding, labelProvider, Platform) {\n        var result = [], ctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding), shift = BinaryKeybindings.hasShift(keybinding), alt = BinaryKeybindings.hasAlt(keybinding), winCtrl = BinaryKeybindings.hasWinCtrl(keybinding), keyCode = BinaryKeybindings.extractKeyCode(keybinding);\n        var keyLabel = labelProvider.getLabelForKey(keyCode);\n        if (!keyLabel) {\n            // cannot trigger this key code under this kb layout\n            return '';\n        }\n        // translate modifier keys: Ctrl-Shift-Alt-Meta\n        if ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\n            result.push(labelProvider.ctrlKeyLabel);\n        }\n        if (shift) {\n            result.push(labelProvider.shiftKeyLabel);\n        }\n        if (alt) {\n            result.push(labelProvider.altKeyLabel);\n        }\n        if (ctrlCmd && Platform.isMacintosh) {\n            result.push(labelProvider.cmdKeyLabel);\n        }\n        if (winCtrl && !Platform.isMacintosh) {\n            result.push(labelProvider.windowsKeyLabel);\n        }\n        // the actual key\n        result.push(keyLabel);\n        var actualResult = result.join(labelProvider.modifierSeparator);\n        if (BinaryKeybindings.hasChord(keybinding)) {\n            return actualResult + ' ' + _asString(BinaryKeybindings.extractChordPart(keybinding), labelProvider, Platform);\n        }\n        return actualResult;\n    }\n    function _pushKey(result, str) {\n        if (result.length > 0) {\n            result.push({\n                tagName: 'span',\n                text: '+'\n            });\n        }\n        result.push({\n            tagName: 'span',\n            className: 'monaco-kbkey',\n            text: str\n        });\n    }\n    function _asHTML(keybinding, labelProvider, Platform, isChord) {\n        if (isChord === void 0) { isChord = false; }\n        var result = [], ctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding), shift = BinaryKeybindings.hasShift(keybinding), alt = BinaryKeybindings.hasAlt(keybinding), winCtrl = BinaryKeybindings.hasWinCtrl(keybinding), keyCode = BinaryKeybindings.extractKeyCode(keybinding);\n        var keyLabel = labelProvider.getLabelForKey(keyCode);\n        if (!keyLabel) {\n            // cannot trigger this key code under this kb layout\n            return [];\n        }\n        // translate modifier keys: Ctrl-Shift-Alt-Meta\n        if ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\n            _pushKey(result, labelProvider.ctrlKeyLabel);\n        }\n        if (shift) {\n            _pushKey(result, labelProvider.shiftKeyLabel);\n        }\n        if (alt) {\n            _pushKey(result, labelProvider.altKeyLabel);\n        }\n        if (ctrlCmd && Platform.isMacintosh) {\n            _pushKey(result, labelProvider.cmdKeyLabel);\n        }\n        if (winCtrl && !Platform.isMacintosh) {\n            _pushKey(result, labelProvider.windowsKeyLabel);\n        }\n        // the actual key\n        _pushKey(result, keyLabel);\n        var chordTo = null;\n        if (BinaryKeybindings.hasChord(keybinding)) {\n            chordTo = _asHTML(BinaryKeybindings.extractChordPart(keybinding), labelProvider, Platform, true);\n            result.push({\n                tagName: 'span',\n                text: ' '\n            });\n            result = result.concat(chordTo);\n        }\n        if (isChord) {\n            return result;\n        }\n        return [{\n                tagName: 'span',\n                className: 'monaco-kb',\n                children: result\n            }];\n    }\n});\n\ndefine(__m[35], __M([11,12]), function(nls, data) { return nls.create(\"vs/base/common/severity\", data); });\ndefine(__m[32], __M([1,0,35,4]), function (require, exports, nls, strings) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var Severity;\n    (function (Severity) {\n        Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n        Severity[Severity[\"Info\"] = 1] = \"Info\";\n        Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n        Severity[Severity[\"Error\"] = 3] = \"Error\";\n    })(Severity || (Severity = {}));\n    var Severity;\n    (function (Severity) {\n        var _error = 'error', _warning = 'warning', _warn = 'warn', _info = 'info';\n        var _displayStrings = Object.create(null);\n        _displayStrings[Severity.Error] = nls.localize(0, null);\n        _displayStrings[Severity.Warning] = nls.localize(1, null);\n        _displayStrings[Severity.Info] = nls.localize(2, null);\n        /**\n         * Parses 'error', 'warning', 'warn', 'info' in call casings\n         * and falls back to ignore.\n         */\n        function fromValue(value) {\n            if (!value) {\n                return Severity.Ignore;\n            }\n            if (strings.equalsIgnoreCase(_error, value)) {\n                return Severity.Error;\n            }\n            if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n                return Severity.Warning;\n            }\n            if (strings.equalsIgnoreCase(_info, value)) {\n                return Severity.Info;\n            }\n            return Severity.Ignore;\n        }\n        Severity.fromValue = fromValue;\n        function toString(value) {\n            return _displayStrings[value] || strings.empty;\n        }\n        Severity.toString = toString;\n        function compare(a, b) {\n            return b - a;\n        }\n        Severity.compare = compare;\n    })(Severity || (Severity = {}));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = Severity;\n});\n\ndefine(__m[30], __M([1,0,14,34,9,7,28,2,15,32,13]), function (require, exports, event_1, keyCodes_1, position_1, range_1, selection_1, winjs_base_1, cancellation_1, severity_1, uri_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function createMonacoBaseAPI() {\n        return {\n            editor: undefined,\n            languages: undefined,\n            CancellationTokenSource: cancellation_1.CancellationTokenSource,\n            Emitter: event_1.Emitter,\n            KeyCode: keyCodes_1.KeyCode,\n            KeyMod: keyCodes_1.KeyMod,\n            Position: position_1.Position,\n            Range: range_1.Range,\n            Selection: selection_1.Selection,\n            SelectionDirection: selection_1.SelectionDirection,\n            Severity: severity_1.default,\n            Promise: winjs_base_1.TPromise,\n            Uri: uri_1.default\n        };\n    }\n    exports.createMonacoBaseAPI = createMonacoBaseAPI;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\ndefine(__m[38], __M([1,0,13,2,7,25,29,21,18,16,17,30]), function (require, exports, uri_1, winjs_base_1, range_1, filters_1, diffComputer_1, mirrorModel2_1, linkComputer_1, inplaceReplaceSupport_1, wordHelper_1, standaloneBase_1) {\n    'use strict';\n    /**\n     * @internal\n     */\n    var MirrorModel = (function (_super) {\n        __extends(MirrorModel, _super);\n        function MirrorModel() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(MirrorModel.prototype, \"uri\", {\n            get: function () {\n                return this._uri;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MirrorModel.prototype, \"version\", {\n            get: function () {\n                return this._versionId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MirrorModel.prototype.getValue = function () {\n            return this.getText();\n        };\n        MirrorModel.prototype.getLinesContent = function () {\n            return this._lines.slice(0);\n        };\n        MirrorModel.prototype.getLineCount = function () {\n            return this._lines.length;\n        };\n        MirrorModel.prototype.getLineContent = function (lineNumber) {\n            return this._lines[lineNumber - 1];\n        };\n        MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n            var wordAtText = wordHelper_1.getWordAtText(position.column, wordHelper_1.ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n            if (wordAtText) {\n                return new range_1.Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n            }\n            return null;\n        };\n        MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n            var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n            if (!wordAtPosition) {\n                return {\n                    word: '',\n                    startColumn: position.column,\n                    endColumn: position.column\n                };\n            }\n            return {\n                word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n                startColumn: wordAtPosition.startColumn,\n                endColumn: position.column\n            };\n        };\n        MirrorModel.prototype._getAllWords = function (wordDefinition) {\n            var _this = this;\n            var result = [];\n            this._lines.forEach(function (line) {\n                _this._wordenize(line, wordDefinition).forEach(function (info) {\n                    result.push(line.substring(info.start, info.end));\n                });\n            });\n            return result;\n        };\n        MirrorModel.prototype.getAllUniqueWords = function (wordDefinition, skipWordOnce) {\n            var foundSkipWord = false;\n            var uniqueWords = {};\n            return this._getAllWords(wordDefinition).filter(function (word) {\n                if (skipWordOnce && !foundSkipWord && skipWordOnce === word) {\n                    foundSkipWord = true;\n                    return false;\n                }\n                else if (uniqueWords[word]) {\n                    return false;\n                }\n                else {\n                    uniqueWords[word] = true;\n                    return true;\n                }\n            });\n        };\n        // TODO@Joh, TODO@Alex - remove these and make sure the super-things work\n        MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n            var result = [];\n            var match;\n            while (match = wordDefinition.exec(content)) {\n                if (match[0].length === 0) {\n                    // it did match the empty string\n                    break;\n                }\n                result.push({ start: match.index, end: match.index + match[0].length });\n            }\n            return result;\n        };\n        MirrorModel.prototype.getValueInRange = function (range) {\n            if (range.startLineNumber === range.endLineNumber) {\n                return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n            }\n            var lineEnding = this._eol, startLineIndex = range.startLineNumber - 1, endLineIndex = range.endLineNumber - 1, resultLines = [];\n            resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n            for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n                resultLines.push(this._lines[i]);\n            }\n            resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n            return resultLines.join(lineEnding);\n        };\n        return MirrorModel;\n    }(mirrorModel2_1.MirrorModel2));\n    exports.MirrorModel = MirrorModel;\n    /**\n     * @internal\n     */\n    var BaseEditorSimpleWorker = (function () {\n        function BaseEditorSimpleWorker() {\n            this._foreignModule = null;\n        }\n        // ---- BEGIN diff --------------------------------------------------------------------------\n        BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n            var original = this._getModel(originalUrl);\n            var modified = this._getModel(modifiedUrl);\n            if (!original || !modified) {\n                return null;\n            }\n            var originalLines = original.getLinesContent();\n            var modifiedLines = modified.getLinesContent();\n            var diffComputer = new diffComputer_1.DiffComputer(originalLines, modifiedLines, {\n                shouldPostProcessCharChanges: true,\n                shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n                shouldConsiderTrimWhitespaceInEmptyCase: true\n            });\n            return winjs_base_1.TPromise.as(diffComputer.computeDiff());\n        };\n        BaseEditorSimpleWorker.prototype.computeDirtyDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n            var original = this._getModel(originalUrl);\n            var modified = this._getModel(modifiedUrl);\n            if (!original || !modified) {\n                return null;\n            }\n            var originalLines = original.getLinesContent();\n            var modifiedLines = modified.getLinesContent();\n            var diffComputer = new diffComputer_1.DiffComputer(originalLines, modifiedLines, {\n                shouldPostProcessCharChanges: false,\n                shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n                shouldConsiderTrimWhitespaceInEmptyCase: false\n            });\n            return winjs_base_1.TPromise.as(diffComputer.computeDiff());\n        };\n        // ---- END diff --------------------------------------------------------------------------\n        BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n            var model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            return winjs_base_1.TPromise.as(linkComputer_1.computeLinks(model));\n        };\n        // ---- BEGIN suggest --------------------------------------------------------------------------\n        BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n            var model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            return winjs_base_1.TPromise.as(this._suggestFiltered(model, position, new RegExp(wordDef, wordDefFlags)));\n        };\n        BaseEditorSimpleWorker.prototype._suggestFiltered = function (model, position, wordDefRegExp) {\n            var value = this._suggestUnfiltered(model, position, wordDefRegExp);\n            // filter suggestions\n            return {\n                currentWord: value.currentWord,\n                suggestions: value.suggestions.filter(function (element) { return !!filters_1.fuzzyContiguousFilter(value.currentWord, element.label); }),\n                incomplete: value.incomplete\n            };\n        };\n        BaseEditorSimpleWorker.prototype._suggestUnfiltered = function (model, position, wordDefRegExp) {\n            var currentWord = model.getWordUntilPosition(position, wordDefRegExp).word;\n            var allWords = model.getAllUniqueWords(wordDefRegExp, currentWord);\n            var suggestions = allWords.filter(function (word) {\n                return !(/^-?\\d*\\.?\\d/.test(word)); // filter out numbers\n            }).map(function (word) {\n                return {\n                    type: 'text',\n                    label: word,\n                    insertText: word,\n                    noAutoAccept: true\n                };\n            });\n            return {\n                currentWord: currentWord,\n                suggestions: suggestions\n            };\n        };\n        // ---- END suggest --------------------------------------------------------------------------\n        BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n            var model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            if (range.startColumn === range.endColumn) {\n                range.endColumn += 1;\n            }\n            var selectionText = model.getValueInRange(range);\n            var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n            var word = null;\n            if (wordRange !== null) {\n                word = model.getValueInRange(wordRange);\n            }\n            var result = inplaceReplaceSupport_1.BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n            return winjs_base_1.TPromise.as(result);\n        };\n        // ---- BEGIN foreign module support --------------------------------------------------------------------------\n        BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n            var _this = this;\n            return new winjs_base_1.TPromise(function (c, e) {\n                // Use the global require to be sure to get the global config\n                self.require([moduleId], function (foreignModule) {\n                    var ctx = {\n                        getMirrorModels: function () {\n                            return _this._getModels();\n                        }\n                    };\n                    _this._foreignModule = foreignModule.create(ctx, createData);\n                    var methods = [];\n                    for (var prop in _this._foreignModule) {\n                        if (typeof _this._foreignModule[prop] === 'function') {\n                            methods.push(prop);\n                        }\n                    }\n                    c(methods);\n                }, e);\n            });\n        };\n        // foreign method request\n        BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n            if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n                return winjs_base_1.TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n            }\n            try {\n                return winjs_base_1.TPromise.as(this._foreignModule[method].apply(this._foreignModule, args));\n            }\n            catch (e) {\n                return winjs_base_1.TPromise.wrapError(e);\n            }\n        };\n        return BaseEditorSimpleWorker;\n    }());\n    exports.BaseEditorSimpleWorker = BaseEditorSimpleWorker;\n    /**\n     * @internal\n     */\n    var EditorSimpleWorkerImpl = (function (_super) {\n        __extends(EditorSimpleWorkerImpl, _super);\n        function EditorSimpleWorkerImpl() {\n            _super.call(this);\n            this._models = Object.create(null);\n        }\n        EditorSimpleWorkerImpl.prototype.dispose = function () {\n            this._models = Object.create(null);\n        };\n        EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n            return this._models[uri];\n        };\n        EditorSimpleWorkerImpl.prototype._getModels = function () {\n            var _this = this;\n            var all = [];\n            Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n            return all;\n        };\n        EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n            this._models[data.url] = new MirrorModel(uri_1.default.parse(data.url), data.value.lines, data.value.EOL, data.versionId);\n        };\n        EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, events) {\n            if (!this._models[strURL]) {\n                return;\n            }\n            var model = this._models[strURL];\n            model.onEvents(events);\n        };\n        EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n            if (!this._models[strURL]) {\n                return;\n            }\n            delete this._models[strURL];\n        };\n        return EditorSimpleWorkerImpl;\n    }(BaseEditorSimpleWorker));\n    exports.EditorSimpleWorkerImpl = EditorSimpleWorkerImpl;\n    /**\n     * Called on the worker side\n     * @internal\n     */\n    function create() {\n        return new EditorSimpleWorkerImpl();\n    }\n    exports.create = create;\n    var global = self;\n    var isWebWorker = (typeof global.importScripts === 'function');\n    if (isWebWorker) {\n        global.monaco = standaloneBase_1.createMonacoBaseAPI();\n    }\n});\n\n}).call(this);\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default ist zero).\n */\nexport function tail<T>(array: T[], n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\n/**\n * Iterates the provided array and allows to remove\n * elements while iterating.\n */\nexport function forEach<T>(array: T[], callback: (element: T, remove: Function) => void): void {\n\tfor (var i = 0, len = array.length; i < len; i++) {\n\t\tcallback(array[i], function() {\n\t\t\tarray.splice(i, 1);\n\t\t\ti--; len--;\n\t\t});\n\t}\n}\n\nexport function equals<T>(one: T[], other: T[], itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (var i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: T[], key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tlet mid = ((low + high) / 2) | 0;\n\t\tlet comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirst<T>(array: T[], p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tlet mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: T[], compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\tfor (let i = n, m = array.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirst(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function merge<T>(arrays: T[][], hashFn?: (element: T) => string): T[] {\n\tconst result = new Array<T>();\n\tif (!hashFn) {\n\t\tfor (let i = 0, len = arrays.length; i < len; i++) {\n\t\t\tresult.push.apply(result, arrays[i]);\n\t\t}\n\t} else {\n\t\tconst map: { [k: string]: boolean } = {};\n\t\tfor (let i = 0; i < arrays.length; i++) {\n\t\t\tfor (let j = 0; j < arrays[i].length; j++) {\n\t\t\t\tlet element = arrays[i][j],\n\t\t\t\t\thash = hashFn(element);\n\n\t\t\t\tif (!map.hasOwnProperty(hash)) {\n\t\t\t\t\tmap[hash] = true;\n\t\t\t\t\tresult.push(element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * @returns a new array with all undefined or null values removed. The original array is not modified at all.\n */\nexport function coalesce<T>(array: T[]): T[] {\n\tif (!array) {\n\t\treturn array;\n\t}\n\n\treturn array.filter(e => !!e);\n}\n\n/**\n * @returns true if the given item is contained in the array.\n */\nexport function contains<T>(array: T[], item: T): boolean {\n\treturn array.indexOf(item) >= 0;\n}\n\n/**\n * Swaps the elements in the array for the provided positions.\n */\nexport function swap(array: any[], pos1: number, pos2: number): void {\n\tconst element1 = array[pos1];\n\tconst element2 = array[pos2];\n\n\tarray[pos1] = element2;\n\tarray[pos2] = element1;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns {{false}} if the provided object is an array\n * \tand not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || (<Array<any>>obj).length === 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: T[], keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function firstIndex<T>(array: T[], fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: T[], fn: (item: T) => boolean, notFoundValue: T = null): T {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function commonPrefixLength<T>(one: T[], other: T[], equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (var i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn arr.reduce((r, v) => r.concat(v), []);\n}\n\nexport function range(to: number, from = 0): number[] {\n\tconst result = [];\n\n\tfor (let i = from; i < to; i++) {\n\t\tresult.push(i);\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, valueFn: () => T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = valueFn();\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: T[], indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T,R>(array: T[], indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T,R>(array: T[], indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport const DifferenceType = {\n\tAdd : 0,\n\tRemove : 1,\n\tChange : 2\n};\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\tpublic originalStart:number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\tpublic originalLength:number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tpublic modifiedStart:number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tpublic modifiedLength:number;\n\n\t/**\n\t * Constructs a new DiffChange with the given sequence information\n\t * and content.\n\t */\n\tconstructor(originalStart:number, originalLength:number, modifiedStart:number, modifiedLength:number) {\n\t\t//Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n\t\tthis.originalStart = originalStart;\n\t\tthis.originalLength = originalLength;\n\t\tthis.modifiedStart = modifiedStart;\n\t\tthis.modifiedLength = modifiedLength;\n\t}\n\n\t/**\n\t * The type of difference.\n\t */\n\tpublic getChangeType() {\n\t\tif (this.originalLength === 0) {\n\t\t\treturn DifferenceType.Add;\n\t\t} else if (this.modifiedLength === 0) {\n\t\t\treturn DifferenceType.Remove;\n\t\t} else {\n\t\t\treturn DifferenceType.Change;\n\t\t}\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the original sequence.\n\t */\n\tpublic getOriginalEnd() {\n\t\treturn this.originalStart + this.originalLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the modified sequence.\n\t */\n\tpublic getModifiedEnd() {\n\t\treturn this.modifiedStart + this.modifiedLength;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {DiffChange} from 'vs/base/common/diff/diffChange';\n\n\nfunction createStringSequence(a: string): ISequence {\n\n\treturn {\n\t\tgetLength() { return a.length; },\n\t\tgetElementHash(pos: number) { return a[pos]; }\n\t};\n}\n\nexport function stringDiff(original: string, modified: string): IDiffChange[] {\n\treturn new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff();\n}\n\n\nexport interface ISequence {\n\tgetLength(): number;\n\tgetElementHash(index:number): string;\n}\n\nexport interface IDiffChange {\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\toriginalStart:number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\toriginalLength:number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tmodifiedStart:number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tmodifiedLength:number;\n}\n\nexport interface IContinueProcessingPredicate {\n\t(furthestOriginalIndex:number, originalSequence:ISequence, matchLengthOfLongest:number): boolean;\n}\n\n//\n// The code below has been ported from a C# implementation in VS\n//\n\nexport class Debug {\n\n\tpublic static Assert(condition:boolean, message:string): void {\n\t\tif (!condition) {\n\t\t\tthrow new Error(message);\n\t\t}\n\t}\n}\n\nexport class MyArray {\n\t/**\n\t * Copies a range of elements from an Array starting at the specified source index and pastes\n\t * them to another Array starting at the specified destination index. The length and the indexes\n\t * are specified as 64-bit integers.\n\t * sourceArray:\n\t *\t\tThe Array that contains the data to copy.\n\t * sourceIndex:\n\t *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n\t * destinationArray:\n\t *\t\tThe Array that receives the data.\n\t * destinationIndex:\n\t *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n\t * length:\n\t *\t\tA 64-bit integer that represents the number of elements to copy.\n\t */\n\tpublic static Copy(sourceArray:any[], sourceIndex:number, destinationArray:any[], destinationIndex:number, length:number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n}\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its letiations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nlet MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n\n\n\n\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n\n\tprivate m_changes:DiffChange[];\n\tprivate m_originalStart:number;\n\tprivate m_modifiedStart:number;\n\tprivate m_originalCount:number;\n\tprivate m_modifiedCount:number;\n\n\t/**\n\t * Constructs a new DiffChangeHelper for the given DiffSequences.\n\t */\n\tconstructor() {\n\t\tthis.m_changes = [];\n\t\tthis.m_originalStart = Number.MAX_VALUE;\n\t\tthis.m_modifiedStart = Number.MAX_VALUE;\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t}\n\n\t/**\n\t * Marks the beginning of the next change in the set of differences.\n\t */\n\tpublic MarkNextChange(): void {\n\t\t// Only add to the list if there is something to add\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Add the new change to our list\n\t\t\tthis.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount,\n\t\t\t\tthis.m_modifiedStart, this.m_modifiedCount));\n\t\t}\n\n\t\t// Reset for the next change\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t\tthis.m_originalStart = Number.MAX_VALUE;\n\t\tthis.m_modifiedStart = Number.MAX_VALUE;\n\t}\n\n\t/**\n\t * Adds the original element at the given position to the elements\n\t * affected by the current change. The modified index gives context\n\t * to the change position with respect to the original sequence.\n\t * @param originalIndex The index of the original element to add.\n\t * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n\t */\n\tpublic AddOriginalElement(originalIndex:number, modifiedIndex:number) {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_originalCount++;\n\t}\n\n\t/**\n\t * Adds the modified element at the given position to the elements\n\t * affected by the current change. The original index gives context\n\t * to the change position with respect to the modified sequence.\n\t * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n\t * @param modifiedIndex The index of the modified element to add.\n\t */\n\tpublic AddModifiedElement(originalIndex:number, modifiedIndex:number): void {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_modifiedCount++;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class.\n\t */\n\tpublic getChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\treturn this.m_changes;\n\t}\n\n\tpublic getReverseChanges(): DiffChange[] {\n\t\t/// <summary>\n\t\t/// Retrieves all of the changes marked by the class in the reverse order\n\t\t/// </summary>\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\tthis.m_changes.reverse();\n\t\treturn this.m_changes;\n\t}\n\n}\n\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its letiations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n\n\tprivate OriginalSequence:ISequence;\n\tprivate ModifiedSequence:ISequence;\n\tprivate ContinueProcessingPredicate:IContinueProcessingPredicate;\n\n\tprivate m_originalIds:number[];\n\tprivate m_modifiedIds:number[];\n\tprivate m_forwardHistory:number[][];\n\tprivate m_reverseHistory:number[][];\n\n\t/**\n\t * Constructs the DiffFinder\n\t */\n\tconstructor(originalSequence:ISequence, newSequence:ISequence, continueProcessingPredicate:IContinueProcessingPredicate = null) {\n\t\tthis.OriginalSequence = originalSequence;\n\t\tthis.ModifiedSequence = newSequence;\n\t\tthis.ContinueProcessingPredicate = continueProcessingPredicate;\n\t\tthis.m_originalIds = [];\n\t\tthis.m_modifiedIds = [];\n\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\n\t\tthis.ComputeUniqueIdentifiers();\n\t}\n\n\tprivate ComputeUniqueIdentifiers(): void {\n\t\tlet originalSequenceLength = this.OriginalSequence.getLength();\n\t\tlet modifiedSequenceLength = this.ModifiedSequence.getLength();\n\t\tthis.m_originalIds = new Array<number>(originalSequenceLength);\n\t\tthis.m_modifiedIds = new Array<number>(modifiedSequenceLength);\n\n\t\t// Create a new hash table for unique elements from the original\n\t\t// sequence.\n\t\tlet hashTable:{[key:string]:number;} = {};\n\t\tlet currentUniqueId = 1;\n\t\tlet i: number;\n\n\t\t// Fill up the hash table for unique elements\n\t\tfor (i = 0; i < originalSequenceLength; i++) {\n\t\t\tlet originalElementHash = this.OriginalSequence.getElementHash(i);\n\t\t\tif (!hashTable.hasOwnProperty(originalElementHash)) {\n\t\t\t\t// No entry in the hashtable so this is a new unique element.\n\t\t\t\t// Assign the element a new unique identifier and add it to the\n\t\t\t\t// hash table\n\t\t\t\tthis.m_originalIds[i] = currentUniqueId++;\n\t\t\t\thashTable[originalElementHash] = this.m_originalIds[i];\n\t\t\t} else {\n\t\t\t\tthis.m_originalIds[i] = hashTable[originalElementHash];\n\t\t\t}\n\t\t}\n\n\t\t// Now match up modified elements\n\t\tfor (i = 0; i < modifiedSequenceLength; i++) {\n\t\t\tlet modifiedElementHash = this.ModifiedSequence.getElementHash(i);\n\t\t\tif (!hashTable.hasOwnProperty(modifiedElementHash)) {\n\t\t\t\tthis.m_modifiedIds[i] = currentUniqueId++;\n\t\t\t\thashTable[modifiedElementHash] = this.m_modifiedIds[i];\n\t\t\t} else {\n\t\t\t\tthis.m_modifiedIds[i] = hashTable[modifiedElementHash];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate ElementsAreEqual(originalIndex:number, newIndex:number): boolean {\n\t\treturn this.m_originalIds[originalIndex] === this.m_modifiedIds[newIndex];\n\t}\n\n\tpublic ComputeDiff(): IDiffChange[] {\n\t\treturn this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1);\n\t}\n\n\t/**\n\t * Computes the differences between the original and modified input\n\t * sequences on the bounded range.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate _ComputeDiff(originalStart:number, originalEnd:number, modifiedStart:number, modifiedEnd:number): DiffChange[] {\n\t\tlet quitEarlyArr = [ false ];\n\t\treturn this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\t}\n\n\t/**\n\t * Private helper method which computes the differences on the bounded range\n\t * recursively.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate ComputeDiffRecursive(originalStart:number, originalEnd:number, modifiedStart:number, modifiedEnd:number, quitEarlyArr:boolean[]): DiffChange[] {\n\t\tquitEarlyArr[0] = false;\n\n\t\t// Find the start of the differences\n\t\twhile (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n\t\t\toriginalStart++;\n\t\t\tmodifiedStart++;\n\t\t}\n\n\t\t// Find the end of the differences\n\t\twhile (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n\t\t\toriginalEnd--;\n\t\t\tmodifiedEnd--;\n\t\t}\n\n\t\t// In the special case where we either have all insertions or all deletions or the sequences are identical\n\t\tif (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n\t\t\tlet changes:DiffChange[];\n\n\t\t\tif (modifiedStart <= modifiedEnd) {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\n\t\t\t\t// All insertions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t];\n\t\t\t} else if (originalStart <= originalEnd) {\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// All deletions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// Identical sequences - No differences\n\t\t\t\tchanges = [];\n\t\t\t}\n\n\t\t\treturn changes;\n\t\t}\n\n\t\t// This problem can be solved using the Divide-And-Conquer technique.\n\t\tlet midOriginalArr = [0], midModifiedArr = [0];\n\t\tlet result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n\n\t\tlet midOriginal = midOriginalArr[0];\n\t\tlet midModified = midModifiedArr[0];\n\n\t\tif (result !== null) {\n\t\t\t// Result is not-null when there was enough memory to compute the changes while\n\t\t\t// searching for the recursion point\n\t\t\treturn result;\n\t\t} else if (!quitEarlyArr[0]) {\n\t\t\t// We can break the problem down recursively by finding the changes in the\n\t\t\t// First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n\t\t\t// Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n\t\t\t// NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n\n\t\t\tlet leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n\t\t\tlet rightChanges: DiffChange[] = [];\n\n\t\t\tif (!quitEarlyArr[0]) {\n\t\t\t\trightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n\t\t\t} else {\n\t\t\t\t// We did't have time to finish the first half, so we don't have time to compute this half.\n\t\t\t\t// Consider the entire rest of the sequence different.\n\t\t\t\trightChanges = [\n\t\t\t\t\tnew DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn this.ConcatenateChanges(leftChanges, rightChanges);\n\t\t}\n\n\t\t// If we hit here, we quit early, and so can't return anything meaningful\n\t\treturn [\n\t\t\tnew DiffChange(originalStart, originalEnd -originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t];\n\t}\n\n\tprivate WALKTRACE(diagonalForwardBase:number, diagonalForwardStart:number, diagonalForwardEnd:number, diagonalForwardOffset:number,\n\t\t\t\t\tdiagonalReverseBase:number, diagonalReverseStart:number, diagonalReverseEnd:number, diagonalReverseOffset:number,\n\t\t\t\t\tforwardPoints:number[], reversePoints:number[],\n\t\t\t\t\toriginalIndex:number, originalEnd:number, midOriginalArr:number[],\n\t\t\t\t\tmodifiedIndex:number, modifiedEnd:number, midModifiedArr:number[],\n\t\t\t\t\tdeltaIsEven:boolean, quitEarlyArr:boolean[]): DiffChange[] {\n\t\tlet forwardChanges: DiffChange[] = null, reverseChanges: DiffChange[] = null;\n\n\t\t// First, walk backward through the forward diagonals history\n\t\tlet changeHelper = new DiffChangeHelper();\n\t\tlet diagonalMin = diagonalForwardStart;\n\t\tlet diagonalMax = diagonalForwardEnd;\n\t\tlet diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n\t\tlet lastOriginalIndex = Number.MIN_VALUE;\n\t\tlet historyIndex = this.m_forwardHistory.length - 1;\n\t\tlet diagonal: number;\n\n\t\tdo {\n\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\tdiagonal = diagonalRelative + diagonalForwardBase;\n\n\t\t\t// Figure out where we came from\n\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t// Vertical line (the element is an insert)\n\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t} else {\n\t\t\t\t// Horizontal line (the element is a deletion)\n\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex - 1;\n\t\t\t\tchangeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t}\n\n\t\t\tif (historyIndex >= 0) {\n\t\t\t\tforwardPoints = this.m_forwardHistory[historyIndex];\n\t\t\t\tdiagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\t\t\t\tdiagonalMin = 1;\n\t\t\t\tdiagonalMax = forwardPoints.length - 1;\n\t\t\t}\n\t\t} while (--historyIndex >= -1);\n\n\t\t// Ironically, we get the forward changes as the reverse of the\n\t\t// order we added them since we technically added them backwards\n\t\tforwardChanges = changeHelper.getReverseChanges();\n\n\t\tif (quitEarlyArr[0]) {\n\t\t\t// TODO: Calculate a partial from the reverse diagonals.\n\t\t\t//       For now, just assume everything after the midOriginal/midModified point is a diff\n\n\t\t\tlet originalStartPoint = midOriginalArr[0] + 1;\n\t\t\tlet modifiedStartPoint = midModifiedArr[0] + 1;\n\n\t\t\tif (forwardChanges !== null && forwardChanges.length > 0) {\n\t\t\t\tlet lastForwardChange = forwardChanges[forwardChanges.length - 1];\n\t\t\t\toriginalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n\t\t\t\tmodifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n\t\t\t}\n\n\t\t\treverseChanges = [\n\t\t\t\tnew DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1,\n\t\t\t\t\t\t\tmodifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n\t\t\t];\n\t\t} else {\n\t\t\t// Now walk backward through the reverse diagonals history\n\t\t\tchangeHelper = new DiffChangeHelper();\n\t\t\tdiagonalMin = diagonalReverseStart;\n\t\t\tdiagonalMax = diagonalReverseEnd;\n\t\t\tdiagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n\t\t\tlastOriginalIndex = Number.MAX_VALUE;\n\t\t\thistoryIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n\t\t\tdo {\n\t\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\t\tdiagonal = diagonalRelative + diagonalReverseBase;\n\n\t\t\t\t// Figure out where we came from\n\t\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\t// Horizontal line (the element is a deletion))\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex + 1;\n\t\t\t\t\tchangeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t} else {\n\t\t\t\t\t// Vertical line (the element is an insertion)\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t}\n\n\t\t\t\tif (historyIndex >= 0) {\n\t\t\t\t\treversePoints = this.m_reverseHistory[historyIndex];\n\t\t\t\t\tdiagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\t\t\t\t\tdiagonalMin = 1;\n\t\t\t\t\tdiagonalMax = reversePoints.length - 1;\n\t\t\t\t}\n\t\t\t} while (--historyIndex >= -1);\n\n\t\t\t// There are cases where the reverse history will find diffs that\n\t\t\t// are correct, but not intuitive, so we need shift them.\n\t\t\treverseChanges = changeHelper.getChanges();\n\t\t}\n\n\t\treturn this.ConcatenateChanges(forwardChanges, reverseChanges);\n\t}\n\n\t/**\n\t * Given the range to compute the diff on, this method finds the point:\n\t * (midOriginal, midModified)\n\t * that exists in the middle of the LCS of the two sequences and\n\t * is the point at which the LCS problem may be broken down recursively.\n\t * This method will try to keep the LCS trace in memory. If the LCS recursion\n\t * point is calculated and the full trace is available in memory, then this method\n\t * will return the change list.\n\t * @param originalStart The start bound of the original sequence range\n\t * @param originalEnd The end bound of the original sequence range\n\t * @param modifiedStart The start bound of the modified sequence range\n\t * @param modifiedEnd The end bound of the modified sequence range\n\t * @param midOriginal The middle point of the original sequence range\n\t * @param midModified The middle point of the modified sequence range\n\t * @returns The diff changes, if available, otherwise null\n\t */\n\tprivate ComputeRecursionPoint(originalStart:number, originalEnd:number, modifiedStart:number, modifiedEnd:number, midOriginalArr:number[], midModifiedArr:number[], quitEarlyArr:boolean[]) {\n\t\tlet originalIndex:number, modifiedIndex:number;\n\t\tlet diagonalForwardStart = 0, diagonalForwardEnd = 0;\n\t\tlet diagonalReverseStart = 0, diagonalReverseEnd = 0;\n\t\tlet numDifferences:number;\n\n\t\t// To traverse the edit graph and produce the proper LCS, our actual\n\t\t// start position is just outside the given boundary\n\t\toriginalStart--;\n\t\tmodifiedStart--;\n\n\t\t// We set these up to make the compiler happy, but they will\n\t\t// be replaced before we return with the actual recursion point\n\t\tmidOriginalArr[0] = 0;\n\t\tmidModifiedArr[0] = 0;\n\n\t\t// Clear out the history\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\n\t\t// Each cell in the two arrays corresponds to a diagonal in the edit graph.\n\t\t// The integer value in the cell represents the originalIndex of the furthest\n\t\t// reaching point found so far that ends in that diagonal.\n\t\t// The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\t\tlet maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n\t\tlet numDiagonals = maxDifferences + 1;\n\t\tlet forwardPoints:number[] = new Array<number>(numDiagonals);\n\t\tlet reversePoints:number[] = new Array<number>(numDiagonals);\n\t\t// diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n\t\t// diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\t\tlet diagonalForwardBase = (modifiedEnd - modifiedStart);\n\t\tlet diagonalReverseBase = (originalEnd - originalStart);\n\t\t// diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalForwardBase)\n\t\t// diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalReverseBase)\n\t\tlet diagonalForwardOffset = (originalStart - modifiedStart);\n\t\tlet diagonalReverseOffset = (originalEnd - modifiedEnd);\n\n\t\t// delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n\t\t//   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n\t\t// The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\t\tlet delta = diagonalReverseBase - diagonalForwardBase;\n\t\tlet deltaIsEven = (delta % 2 === 0);\n\n\t\t// Here we set up the start and end points as the furthest points found so far\n\t\t// in both the forward and reverse directions, respectively\n\t\tforwardPoints[diagonalForwardBase] = originalStart;\n\t\treversePoints[diagonalReverseBase] = originalEnd;\n\n\t\t// Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\t\tquitEarlyArr[0] = false;\n\n\n\n\t\t// A couple of points:\n\t\t// --With this method, we iterate on the number of differences between the two sequences.\n\t\t//   The more differences there actually are, the longer this will take.\n\t\t// --Also, as the number of differences increases, we have to search on diagonals further\n\t\t//   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n\t\t// --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n\t\t//   is even and odd diagonals only when numDifferences is odd.\n\t\tlet diagonal:number, tempOriginalIndex:number;\n\t\tfor (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n\t\t\tlet furthestOriginalIndex = 0;\n\t\t\tlet furthestModifiedIndex = 0;\n\n\t\t\t// Run the algorithm in the forward direction\n\t\t\tdiagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tdiagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tfor (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalStart, modifiedStart)\n\t\t\t\tif (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap in step 3\n\t\t\t\ttempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// so long as the elements are equal.\n\t\t\t\twhile (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n\t\t\t\t\toriginalIndex++;\n\t\t\t\t\tmodifiedIndex++;\n\t\t\t\t}\n\t\t\t\tforwardPoints[diagonal] = originalIndex;\n\n\t\t\t\tif (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n\t\t\t\t\tfurthestOriginalIndex = originalIndex;\n\t\t\t\t\tfurthestModifiedIndex = modifiedIndex;\n\t\t\t\t}\n\n\t\t\t\t// STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n\t\t\t\t// and diagonal is in the range of reverse diagonals computed for numDifferences-1\n\t\t\t\t// (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n\t\t\t\t\tif (originalIndex >= reversePoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check to see if we should be quitting early, before moving on to the next iteration.\n\t\t\tlet matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n\t\t\tif (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n\t\t\t\t// We can't finish, so skip ahead to generating a result from what we have.\n\t\t\t\tquitEarlyArr[0] = true;\n\n\t\t\t\t// Use the furthest distance we got in the forward direction.\n\t\t\t\tmidOriginalArr[0] = furthestOriginalIndex;\n\t\t\t\tmidModifiedArr[0] = furthestModifiedIndex;\n\n\t\t\t\tif (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t// Enough of the history is in memory to walk it backwards\n\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// We didn't actually remember enough of the history.\n\n\t\t\t\t\t//Since we are quiting the diff early, we need to shift back the originalStart and modified start\n\t\t\t\t\t//back into the boundary limits since we decremented their value above beyond the boundary limit.\n\t\t\t\t\toriginalStart++;\n\t\t\t\t\tmodifiedStart++;\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1,\n\t\t\t\t\t\t\t\tmodifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run the algorithm in the reverse direction\n\t\t\tdiagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tdiagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tfor (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalEnd, modifiedEnd)\n\t\t\t\tif (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap\n\t\t\t\ttempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// as long as the elements are equal.\n\t\t\t\twhile (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n\t\t\t\t\toriginalIndex--;\n\t\t\t\t\tmodifiedIndex--;\n\t\t\t\t}\n\t\t\t\treversePoints[diagonal] = originalIndex;\n\n\t\t\t\t// STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n\t\t\t\t// and diagonal is in the range of forward diagonals computed for numDifferences\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n\t\t\t\t\tif (originalIndex <= forwardPoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save current vectors to history before the next iteration\n\t\t\tif (numDifferences <= MaxDifferencesHistory) {\n\t\t\t\t// We are allocating space for one extra int, which we fill with\n\t\t\t\t// the index of the diagonal base index\n\t\t\t\tlet temp:number[] = new Array<number>(diagonalForwardEnd - diagonalForwardStart + 2);\n\t\t\t\ttemp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n\t\t\t\tMyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n\t\t\t\tthis.m_forwardHistory.push(temp);\n\n\t\t\t\ttemp = new Array<number>(diagonalReverseEnd - diagonalReverseStart + 2);\n\t\t\t\ttemp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n\t\t\t\tMyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n\t\t\t\tthis.m_reverseHistory.push(temp);\n\t\t\t}\n\n\t\t}\n\n\n\n\t\t// If we got here, then we have the full trace in history. We just have to convert it to a change list\n\t\t// NOTE: This part is a bit messy\n\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\tforwardPoints, reversePoints,\n\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\tdeltaIsEven, quitEarlyArr\n\t\t);\n\t}\n\n\t/**\n\t * Concatenates the two input DiffChange lists and returns the resulting\n\t * list.\n\t * @param The left changes\n\t * @param The right changes\n\t * @returns The concatenated list\n\t */\n\tprivate ConcatenateChanges(left:DiffChange[], right:DiffChange[]): DiffChange[] {\n\t\tlet mergedChangeArr:DiffChange[] = [];\n\t\tlet result:DiffChange[] = null;\n\n\t\tif (left.length === 0 || right.length === 0) {\n\t\t\treturn (right.length > 0) ? right : left;\n\t\t} else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n\t\t\t// Since we break the problem down recursively, it is possible that we\n\t\t\t// might recurse in the middle of a change thereby splitting it into\n\t\t\t// two changes. Here in the combining stage, we detect and fuse those\n\t\t\t// changes back together\n\t\t\tresult = new Array<DiffChange>(left.length + right.length - 1);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length - 1);\n\t\t\tresult[left.length - 1] = mergedChangeArr[0];\n\t\t\tMyArray.Copy(right, 1, result, left.length, right.length - 1);\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\tresult = new Array<DiffChange>(left.length + right.length);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length);\n\t\t\tMyArray.Copy(right, 0, result, left.length, right.length);\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the two changes overlap and can be merged into a single\n\t * change\n\t * @param left The left change\n\t * @param right The right change\n\t * @param mergedChange The merged change if the two overlap, null otherwise\n\t * @returns True if the two changes overlap\n\t */\n\tprivate ChangesOverlap(left:DiffChange, right:DiffChange, mergedChangeArr:DiffChange[]): boolean {\n\t\tDebug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n\t\tDebug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n\t\tif (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart)\n\t\t{\n\t\t\tlet originalStart = left.originalStart;\n\t\t\tlet originalLength = left.originalLength;\n\t\t\tlet modifiedStart = left.modifiedStart;\n\t\t\tlet modifiedLength = left.modifiedLength;\n\n\t\t\tif (left.originalStart + left.originalLength >= right.originalStart) {\n\t\t\t\toriginalLength = right.originalStart + right.originalLength - left.originalStart;\n\t\t\t}\n\t\t\tif (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\t\tmodifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n\t\t\t}\n\n\t\t\tmergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tmergedChangeArr[0] = null;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Helper method used to clip a diagonal index to the range of valid\n\t * diagonals. This also decides whether or not the diagonal index,\n\t * if it exceeds the boundary, should be clipped to the boundary or clipped\n\t * one inside the boundary depending on the Even/Odd status of the boundary\n\t * and numDifferences.\n\t * @param diagonal The index of the diagonal to clip.\n\t * @param numDifferences The current number of differences being iterated upon.\n\t * @param diagonalBaseIndex The base reference diagonal.\n\t * @param numDiagonals The total number of diagonals.\n\t * @returns The clipped diagonal index.\n\t */\n\n\tprivate ClipDiagonalBound(diagonal:number, numDifferences:number, diagonalBaseIndex:number, numDiagonals:number): number {\n\t\tif (diagonal >= 0 && diagonal < numDiagonals) {\n\t\t\t// Nothing to clip, its in range\n\t\t\treturn diagonal;\n\t\t}\n\n\t\t// diagonalsBelow: The number of diagonals below the reference diagonal\n\t\t// diagonalsAbove: The number of diagonals above the reference diagonal\n\t\tlet diagonalsBelow = diagonalBaseIndex;\n\t\tlet diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n\t\tlet diffEven = (numDifferences % 2 === 0);\n\n\t\tif (diagonal < 0) {\n\t\t\tlet lowerBoundEven = (diagonalsBelow % 2 === 0);\n\t\t\treturn (diffEven === lowerBoundEven) ? 0 : 1;\n\t\t} else {\n\t\t\tlet upperBoundEven = (diagonalsAbove % 2 === 0);\n\t\t\treturn (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n\t\t}\n\t}\n\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nexport interface Key {\n\ttoString():string;\n}\n\nexport interface Entry<K, T> {\n\tnext?: Entry<K, T>;\n\tprev?: Entry<K, T>;\n\tkey: K;\n\tvalue: T;\n}\n\n/**\n * A simple map to store value by a key object. Key can be any object that has toString() function to get\n * string value of the key.\n */\nexport class LinkedMap<K extends Key, T> {\n\n\tprotected map: { [key: string]: Entry<K, T> };\n\tprotected _size: number;\n\n\tconstructor() {\n\t\tthis.map = Object.create(null);\n\t\tthis._size = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this._size;\n\t}\n\n\tpublic get(k: K): T {\n\t\tconst value = this.peek(k);\n\n\t\treturn value ? value : null;\n\t}\n\n\tpublic getOrSet(k: K, t: T): T {\n\t\tconst res = this.get(k);\n\t\tif (res) {\n\t\t\treturn res;\n\t\t}\n\n\t\tthis.set(k, t);\n\n\t\treturn t;\n\t}\n\n\tpublic keys(): K[] {\n\t\tvar keys: K[] = [];\n\t\tfor (let key in this.map) {\n\t\t\tkeys.push(this.map[key].key);\n\t\t}\n\t\treturn keys;\n\t}\n\n\tpublic values(): T[] {\n\t\tvar values: T[] = [];\n\t\tfor (let key in this.map) {\n\t\t\tvalues.push(this.map[key].value);\n\t\t}\n\t\treturn values;\n\t}\n\n\tpublic entries(): Entry<K, T>[] {\n\t\tvar entries: Entry<K, T>[] = [];\n\t\tfor (let key in this.map) {\n\t\t\tentries.push(this.map[key]);\n\t\t}\n\t\treturn entries;\n\t}\n\n\tpublic set(k: K, t: T): boolean {\n\t\tif (this.get(k)) {\n\t\t\treturn false; // already present!\n\t\t}\n\n\t\tthis.push(k, t);\n\n\t\treturn true;\n\t}\n\n\tpublic delete(k: K): T {\n\t\tlet value:T= this.get(k);\n\t\tif (value) {\n\t\t\tthis.pop(k);\n\t\t\treturn value;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic has(k: K): boolean {\n\t\treturn !!this.get(k);\n\t}\n\n\tpublic clear(): void {\n\t\tthis.map = Object.create(null);\n\t\tthis._size = 0;\n\t}\n\n\tprotected push(key: K, value: T): void {\n\t\tconst entry: Entry<K, T> = { key, value };\n\t\tthis.map[key.toString()] = entry;\n\t\tthis._size++;\n\t}\n\n\tprotected pop(k: K): void {\n\t\tdelete this.map[k.toString()];\n\t\tthis._size--;\n\t}\n\n\tprotected peek(k: K): T {\n\t\tconst entry= this.map[k.toString()];\n\t\treturn entry ? entry.value : null;\n\t}\n}\n\n/**\n * A simple Map<T> that optionally allows to set a limit of entries to store. Once the limit is hit,\n * the cache will remove the entry that was last recently added. Or, if a ratio is provided below 1,\n * all elements will be removed until the ratio is full filled (e.g. 0.75 to remove 25% of old elements).\n */\nexport class BoundedLinkedMap<T> {\n\tprotected map: { [key: string]: Entry<string, T> };\n\tprivate head: Entry<string, T>;\n\tprivate tail: Entry<string, T>;\n\tprivate _size: number;\n\tprivate ratio: number;\n\n\tconstructor(private limit = Number.MAX_VALUE, ratio = 1) {\n\t\tthis.map = Object.create(null);\n\t\tthis._size = 0;\n\t\tthis.ratio = limit * ratio;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this._size;\n\t}\n\n\tpublic set(key: string, value: T): boolean {\n\t\tif (this.map[key]) {\n\t\t\treturn false; // already present!\n\t\t}\n\n\t\tconst entry: Entry<string, T> = { key, value };\n\t\tthis.push(entry);\n\n\t\tif (this._size > this.limit) {\n\t\t\tthis.trim();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic get(key: string): T {\n\t\tconst entry = this.map[key];\n\n\t\treturn entry ? entry.value : null;\n\t}\n\n\tpublic getOrSet(k: string, t: T): T {\n\t\tconst res = this.get(k);\n\t\tif (res) {\n\t\t\treturn res;\n\t\t}\n\n\t\tthis.set(k, t);\n\n\t\treturn t;\n\t}\n\n\tpublic delete(key: string): T {\n\t\tconst entry = this.map[key];\n\n\t\tif (entry) {\n\t\t\tthis.map[key] = void 0;\n\t\t\tthis._size--;\n\n\t\t\tif (entry.next) {\n\t\t\t\tentry.next.prev = entry.prev; // [A]<-[x]<-[C] = [A]<-[C]\n\t\t\t} else {\n\t\t\t\tthis.head = entry.prev; // [A]-[x] = [A]\n\t\t\t}\n\n\t\t\tif (entry.prev) {\n\t\t\t\tentry.prev.next = entry.next; // [A]->[x]->[C] = [A]->[C]\n\t\t\t} else {\n\t\t\t\tthis.tail = entry.next; // [x]-[A] = [A]\n\t\t\t}\n\n\t\t\treturn entry.value;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic has(key: string): boolean {\n\t\treturn !!this.map[key];\n\t}\n\n\tpublic clear(): void {\n\t\tthis.map = Object.create(null);\n\t\tthis._size = 0;\n\t\tthis.head = null;\n\t\tthis.tail = null;\n\t}\n\n\tprotected push(entry: Entry<string, T>): void {\n\t\tif (this.head) {\n\t\t\t// [A]-[B] = [A]-[B]->[X]\n\t\t\tentry.prev = this.head;\n\t\t\tthis.head.next = entry;\n\t\t}\n\n\t\tif (!this.tail) {\n\t\t\tthis.tail = entry;\n\t\t}\n\n\t\tthis.head = entry;\n\n\t\tthis.map[entry.key] = entry;\n\t\tthis._size++;\n\t}\n\n\tprivate trim(): void {\n\t\tif (this.tail) {\n\n\t\t\t// Remove all elements until ratio is reached\n\t\t\tif (this.ratio < this.limit) {\n\t\t\t\tlet index = 0;\n\t\t\t\tlet current = this.tail;\n\t\t\t\twhile (current.next) {\n\n\t\t\t\t\t// Remove the entry\n\t\t\t\t\tthis.map[current.key] = void 0;\n\t\t\t\t\tthis._size--;\n\n\t\t\t\t\t// if we reached the element that overflows our ratio condition\n\t\t\t\t\t// make its next element the new tail of the Map and adjust the size\n\t\t\t\t\tif (index === this.ratio) {\n\t\t\t\t\t\tthis.tail = current.next;\n\t\t\t\t\t\tthis.tail.prev = null;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Move on\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Just remove the tail element\n\t\t\telse {\n\t\t\t\tthis.map[this.tail.key] = void 0;\n\t\t\t\tthis._size--;\n\n\t\t\t\t// [x]-[B] = [B]\n\t\t\t\tthis.tail = this.tail.next;\n\t\t\t\tthis.tail.prev = null;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A subclass of Map<T> that makes an entry the MRU entry as soon\n * as it is being accessed. In combination with the limit for the\n * maximum number of elements in the cache, it helps to remove those\n * entries from the cache that are LRU.\n */\nexport class LRUCache<T> extends BoundedLinkedMap<T> {\n\n\tconstructor(limit: number) {\n\t\tsuper(limit);\n\t}\n\n\tpublic get(key: string): T {\n\n\t\t// Upon access of an entry, make it the head of\n\t\t// the linked map so that it is the MRU element\n\t\tconst entry = this.map[key];\n\t\tif (entry) {\n\t\t\tthis.delete(key);\n\t\t\tthis.push(entry);\n\n\t\t\treturn entry.value;\n\t\t}\n\n\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n// --- THIS FILE IS TEMPORARY UNTIL ENV.TS IS CLEANED UP. IT CAN SAFELY BE USED IN ALL TARGET EXECUTION ENVIRONMENTS (node & dom) ---\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isRootUser = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isQunit = false;\nlet _locale = undefined;\nlet _language = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: { [key: string]: string; };\n\tgetuid(): number;\n}\ndeclare let process: INodeProcess;\ndeclare let global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n}\ndeclare let navigator: INavigator;\ndeclare let self: any;\n\nexport const LANGUAGE_DEFAULT = 'en';\n\n// OS detection\nif (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_isRootUser = !_isWindows && (process.getuid() === 0);\n\tlet rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tlet nlsConfig:NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tlet resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n} else if (typeof navigator === 'object') {\n\tlet userAgent = navigator.userAgent;\n\t_isWindows = userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n\t_isLinux = userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t_isQunit = !!(<any>self).QUnit;\n}\n\nexport enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\n\nexport let _platform:Platform = Platform.Web;\nif (_isNative) {\n\tif (_isMacintosh) {\n\t\t_platform = Platform.Mac;\n\t} else if (_isWindows) {\n\t\t_platform = Platform.Windows;\n\t} else if (_isLinux) {\n\t\t_platform = Platform.Linux;\n\t}\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isRootUser = _isRootUser;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isQunit = _isQunit;\nexport const platform = _platform;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\nexport interface TimeoutToken {\n}\n\nexport interface IntervalToken {\n}\n\ninterface IGlobals {\n\tWorker?: any;\n\tsetTimeout(callback: (...args: any[]) => void, delay: number, ...args: any[]): TimeoutToken;\n\tclearTimeout(token: TimeoutToken): void;\n\n\tsetInterval(callback: (...args: any[]) => void, delay: number, ...args: any[]): IntervalToken;\n\tclearInterval(token: IntervalToken);\n}\n\nconst _globals = <IGlobals> (typeof self === 'object' ? self : global);\nexport const globals: any = _globals;\n\nexport function hasWebWorkerSupport(): boolean {\n\treturn typeof _globals.Worker !== 'undefined';\n}\nexport const setTimeout = _globals.setTimeout.bind(_globals);\nexport const clearTimeout = _globals.clearTimeout.bind(_globals);\n\nexport const setInterval = _globals.setInterval.bind(_globals);\nexport const clearInterval = _globals.clearInterval.bind(_globals);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {BoundedLinkedMap} from 'vs/base/common/map';\n\n/**\n * The empty string.\n */\nexport const empty = '';\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tlet str = '' + n;\n\tlet r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function(match, group) {\n\t\tlet idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<|>|&]/g, function(match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tlet trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack?: string, needle?: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tlet needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0,\n\t\tidx = -1;\n\n\twhile ((idx = haystack.indexOf(needle, offset)) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack?: string, needle?: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tlet needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tlet diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, matchCase: boolean, wholeWord: boolean, global:boolean): RegExp {\n\tif (searchString === '') {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = searchString.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n\t}\n\tif (wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tlet match = regexp.exec('');\n\treturn (match && <any>regexp.lastIndex === 0);\n}\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport let canNormalize = typeof ((<any>'').normalize) === 'function';\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nconst normalizedCache = new BoundedLinkedMap<string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize('NFC');\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string): string {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n\t\t\treturn str.substring(0, i);\n\t\t}\n\t}\n\treturn str;\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tif (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if(a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nfunction isAsciiChar(code: number): boolean {\n\treturn (code >= 97 && code <= 122) || (code >= 65 && code <= 90);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\n\tlet len1 = a.length,\n\t\tlen2 = b.length;\n\n\tif (len1 !== len2) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < len1; i++) {\n\n\t\tlet codeA = a.charCodeAt(i),\n\t\t\tcodeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\n\t\t} else if (isAsciiChar(codeA) && isAsciiChar(codeB)) {\n\t\t\tlet diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (String.fromCharCode(codeA).toLocaleLowerCase() !== String.fromCharCode(codeB).toLocaleLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tlet aLastIndex = a.length - 1;\n\tlet bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\n//export function isLeadSurrogate(chr:string) {\n//\tlet chrCode = chr.charCodeAt(0);\n//\treturn ;\n//}\n//\n//export function isTrailSurrogate(chr:string) {\n//\tlet chrCode = chr.charCodeAt(0);\n//\treturn 0xDC00 <= chrCode && chrCode <= 0xDFFF;\n//}\n\nexport function isFullWidthCharacter(charCode:number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * Computes the difference score for two strings. More similar strings have a higher score.\n * We use largest common subsequence dynamic programming approach but penalize in the end for length differences.\n * Strings that have a large length difference will get a bad default score 0.\n * Complexity - both time and space O(first.length * second.length)\n * Dynamic programming LCS computation http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n *\n * @param first a string\n * @param second a string\n */\nexport function difference(first: string, second: string, maxLenDelta: number = 4): number {\n\tlet lengthDifference = Math.abs(first.length - second.length);\n\t// We only compute score if length of the currentWord and length of entry.name are similar.\n\tif (lengthDifference > maxLenDelta) {\n\t\treturn 0;\n\t}\n\t// Initialize LCS (largest common subsequence) matrix.\n\tlet LCS: number[][] = [];\n\tlet zeroArray: number[] = [];\n\tlet i: number, j: number;\n\tfor (i = 0; i < second.length + 1; ++i) {\n\t\tzeroArray.push(0);\n\t}\n\tfor (i = 0; i < first.length + 1; ++i) {\n\t\tLCS.push(zeroArray);\n\t}\n\tfor (i = 1; i < first.length + 1; ++i) {\n\t\tfor (j = 1; j < second.length + 1; ++j) {\n\t\t\tif (first[i - 1] === second[j - 1]) {\n\t\t\t\tLCS[i][j] = LCS[i - 1][j - 1] + 1;\n\t\t\t} else {\n\t\t\t\tLCS[i][j] = Math.max(LCS[i - 1][j], LCS[i][j - 1]);\n\t\t\t}\n\t\t}\n\t}\n\treturn LCS[first.length][second.length] - Math.sqrt(lengthDifference);\n}\n\n/**\n * Returns an array in which every entry is the offset of a\n * line. There is always one entry which is zero.\n */\nexport function computeLineStarts(text: string): number[] {\n\tlet regexp = /\\r\\n|\\r|\\n/g,\n\t\tret: number[] = [0],\n\t\tmatch: RegExpExecArray;\n\twhile ((match = regexp.exec(text))) {\n\t\tret.push(regexp.lastIndex);\n\t}\n\treturn ret;\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number): string {\n\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tlet segments = text.split(/\\b/),\n\t\tcount = 0;\n\n\tfor (let i = segments.length - 1; i >= 0; i--) {\n\t\tcount += segments[i].length;\n\n\t\tif (count > n) {\n\t\t\tsegments.splice(0, i);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn segments.join(empty).replace(/^\\s/, empty);\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst LF = /\\xA/g; // line feed\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(LF, '\\n');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nconst __utf8_bom = 65279;\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(__utf8_bom);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn (str && str.length > 0 && str.charCodeAt(0) === __utf8_bom);\n}\n\n/**\n * Appends two strings. If the appended result is longer than maxLength,\n * trims the start of the result and replaces it with '...'.\n */\nexport function appendWithLimit(first: string, second: string, maxLength: number): string {\n\tconst newLength = first.length + second.length;\n\tif (newLength > maxLength) {\n\t\tfirst = '...' + first.substr(newLength - maxLength);\n\t}\n\tif (second.length > maxLength) {\n\t\tfirst += second.substr(second.length - maxLength);\n\t} else {\n\t\tfirst += second;\n\t}\n\n\treturn first;\n}\n\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s:string, count: number): string {\n\tvar result = '';\n\tfor (var i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport strings = require('vs/base/common/strings');\nimport {BoundedLinkedMap} from 'vs/base/common/map';\n\nexport interface IFilter {\n\t// Returns null if word doesn't match.\n\t(word: string, wordToMatchAgainst: string): IMatch[];\n}\n\nexport interface IMatch {\n\tstart: number;\n\tend: number;\n}\n\n// Combined filters\n\n/**\n * @returns A filter which combines the provided set\n * of filters with an or. The *first* filters that\n * matches defined the return value of the returned\n * filter.\n */\nexport function or(...filter: IFilter[]): IFilter {\n\treturn function (word: string, wordToMatchAgainst: string): IMatch[] {\n\t\tfor (let i = 0, len = filter.length; i < len; i++) {\n\t\t\tlet match = filter[i](word, wordToMatchAgainst);\n\t\t\tif (match) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n}\n\n/**\n * @returns A filter which combines the provided set\n * of filters with an and. The combines matches are\n * returned if *all* filters match.\n */\nexport function and(...filter: IFilter[]): IFilter {\n\treturn function (word: string, wordToMatchAgainst: string): IMatch[] {\n\t\tlet result: IMatch[] = [];\n\t\tfor (let i = 0, len = filter.length; i < len; i++) {\n\t\t\tlet match = filter[i](word, wordToMatchAgainst);\n\t\t\tif (!match) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tresult = result.concat(match);\n\t\t}\n\t\treturn result;\n\t};\n}\n\n// Prefix\n\nexport let matchesStrictPrefix: IFilter = (word: string, wordToMatchAgainst: string): IMatch[] => { return _matchesPrefix(false, word, wordToMatchAgainst); };\nexport let matchesPrefix: IFilter = (word: string, wordToMatchAgainst: string): IMatch[] => { return _matchesPrefix(true, word, wordToMatchAgainst); };\n\nfunction _matchesPrefix(ignoreCase: boolean, word: string, wordToMatchAgainst: string): IMatch[] {\n\tif (!wordToMatchAgainst || wordToMatchAgainst.length === 0 || wordToMatchAgainst.length < word.length) {\n\t\treturn null;\n\t}\n\tif (ignoreCase) {\n\t\tword = word.toLowerCase();\n\t\twordToMatchAgainst = wordToMatchAgainst.toLowerCase();\n\t}\n\tfor (let i = 0; i < word.length; i++) {\n\t\tif (word[i] !== wordToMatchAgainst[i]) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn word.length > 0 ? [{ start: 0, end: word.length }] : [];\n}\n\n// Contiguous Substring\n\nexport function matchesContiguousSubString(word: string, wordToMatchAgainst: string): IMatch[] {\n\tlet index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n\tif (index === -1) {\n\t\treturn null;\n\t}\n\n\treturn [{ start: index, end: index + word.length }];\n}\n\n// Substring\n\nexport function matchesSubString(word: string, wordToMatchAgainst: string): IMatch[] {\n\treturn _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n}\n\nfunction _matchesSubString(word: string, wordToMatchAgainst: string, i: number, j: number): IMatch[] {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === wordToMatchAgainst.length) {\n\t\treturn null;\n\t} else {\n\t\tif (word[i] === wordToMatchAgainst[j]) {\n\t\t\tlet result: IMatch[] = null;\n\t\t\tif (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n\t\t\t\treturn join({ start: j, end: j + 1 }, result);\n\t\t\t}\n\t\t}\n\n\t\treturn _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n\t}\n}\n\n// CamelCase\n\nfunction isLower(code: number): boolean {\n\treturn 97 <= code && code <= 122;\n}\n\nfunction isUpper(code: number): boolean {\n\treturn 65 <= code && code <= 90;\n}\n\nfunction isNumber(code: number): boolean {\n\treturn 48 <= code && code <= 57;\n}\n\nfunction isWhitespace(code: number): boolean {\n\treturn [32, 9, 10, 13].indexOf(code) > -1;\n}\n\nfunction isAlphanumeric(code: number): boolean {\n\treturn isLower(code) || isUpper(code) || isNumber(code);\n}\n\nfunction join(head: IMatch, tail: IMatch[]): IMatch[] {\n\tif (tail.length === 0) {\n\t\ttail = [head];\n\t} else if (head.end === tail[0].start) {\n\t\ttail[0].start = head.start;\n\t} else {\n\t\ttail.unshift(head);\n\t}\n\treturn tail;\n}\n\nfunction nextAnchor(camelCaseWord: string, start: number): number {\n\tfor (let i = start; i < camelCaseWord.length; i++) {\n\t\tlet c = camelCaseWord.charCodeAt(i);\n\t\tif (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn camelCaseWord.length;\n}\n\nfunction _matchesCamelCase(word: string, camelCaseWord: string, i: number, j: number): IMatch[] {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === camelCaseWord.length) {\n\t\treturn null;\n\t} else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n\t\treturn null;\n\t} else {\n\t\tlet result = null;\n\t\tlet nextUpperIndex = j + 1;\n\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n\t\twhile (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n\t\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n\t\t\tnextUpperIndex++;\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camelCaseWords.\nfunction isCamelCaseWord(word: string): boolean {\n\tif (word.length > 60) {\n\t\treturn false;\n\t}\n\n\tlet upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isAlphanumeric(code)) { alpha++; }\n\t\tif (isNumber(code)) { numeric++; }\n\t}\n\n\tlet upperPercent = upper / word.length;\n\tlet lowerPercent = lower / word.length;\n\tlet alphaPercent = alpha / word.length;\n\tlet numericPercent = numeric / word.length;\n\n\treturn lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camel case patterns.\nfunction isCamelCasePattern(word: string): boolean {\n\tlet upper = 0, lower = 0, code = 0, whitespace = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isWhitespace(code)) { whitespace++; }\n\t}\n\n\tif ((upper === 0 || lower === 0) && whitespace === 0) {\n\t\treturn word.length <= 30;\n\t} else {\n\t\treturn upper <= 5;\n\t}\n}\n\nexport function matchesCamelCase(word: string, camelCaseWord: string): IMatch[] {\n\tif (!camelCaseWord || camelCaseWord.length === 0) {\n\t\treturn null;\n\t}\n\n\tif (!isCamelCasePattern(word)) {\n\t\treturn null;\n\t}\n\n\tif (!isCamelCaseWord(camelCaseWord)) {\n\t\treturn null;\n\t}\n\n\tlet result: IMatch[] = null;\n\tlet i = 0;\n\n\twhile (i < camelCaseWord.length && (result = _matchesCamelCase(word.toLowerCase(), camelCaseWord, 0, i)) === null) {\n\t\ti = nextAnchor(camelCaseWord, i + 1);\n\t}\n\n\treturn result;\n}\n\n// Matches beginning of words supporting non-ASCII languages\n// E.g. \"gp\" or \"g p\" will match \"Git: Pull\"\n// Useful in cases where the target is words (e.g. command labels)\n\nexport function matchesWords(word: string, target: string): IMatch[] {\n\tif (!target || target.length === 0) {\n\t\treturn null;\n\t}\n\n\tlet result: IMatch[] = null;\n\tlet i = 0;\n\n\twhile (i < target.length && (result = _matchesWords(word.toLowerCase(), target, 0, i)) === null) {\n\t\ti = nextWord(target, i + 1);\n\t}\n\n\treturn result;\n}\n\nfunction _matchesWords(word: string, target: string, i: number, j: number): IMatch[] {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === target.length) {\n\t\treturn null;\n\t} else if (word[i] !== target[j].toLowerCase()) {\n\t\treturn null;\n\t} else {\n\t\tlet result = null;\n\t\tlet nextWordIndex = j + 1;\n\t\tresult = _matchesWords(word, target, i + 1, j + 1);\n\t\twhile (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {\n\t\t\tresult = _matchesWords(word, target, i + 1, nextWordIndex);\n\t\t\tnextWordIndex++;\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\nfunction nextWord(word: string, start: number): number {\n\tfor (let i = start; i < word.length; i++) {\n\t\tlet c = word.charCodeAt(i);\n\t\tif (isWhitespace(c) || (i > 0 && isWhitespace(word.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn word.length;\n}\n\n// Fuzzy\n\nexport enum SubstringMatching {\n\tContiguous,\n\tSeparate\n}\n\nexport const fuzzyContiguousFilter = or(matchesPrefix, matchesCamelCase, matchesContiguousSubString);\nconst fuzzySeparateFilter = or(matchesPrefix, matchesCamelCase, matchesSubString);\nconst fuzzyRegExpCache = new BoundedLinkedMap<RegExp>(10000); // bounded to 10000 elements\n\nexport function matchesFuzzy(word: string, wordToMatchAgainst: string, enableSeparateSubstringMatching = false): IMatch[] {\n\tif (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {\n\t\treturn null; // return early for invalid input\n\t}\n\n\t// Form RegExp for wildcard matches\n\tlet regexp = fuzzyRegExpCache.get(word);\n\tif (!regexp) {\n\t\tregexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n\t\tfuzzyRegExpCache.set(word, regexp);\n\t}\n\n\t// RegExp Filter\n\tlet match: RegExpExecArray = regexp.exec(wordToMatchAgainst);\n\tif (match) {\n\t\treturn [{ start: match.index, end: match.index + match[0].length }];\n\t}\n\n\t// Default Filter\n\treturn enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string|| str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is any {\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): boolean {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): boolean {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects && objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: TypeConstraint[]): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\tif (arg instanceof constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (arg && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor: Function, ...args: any[]): any {\n\tlet obj = Object.create(ctor.prototype);\n\tctor.apply(obj, args);\n\n\treturn obj;\n}\n\nexport interface IFunction0<T> {\n\t(): T;\n}\nexport interface IFunction1<A1, T> {\n\t(a1: A1): T;\n}\nexport interface IFunction2<A1, A2, T> {\n\t(a1: A1, a2: A2): T;\n}\nexport interface IFunction3<A1, A2, A3, T> {\n\t(a1: A1, a2: A2, a3: A3): T;\n}\nexport interface IFunction4<A1, A2, A3, A4, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4): T;\n}\nexport interface IFunction5<A1, A2, A3, A4, A5, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n}\nexport interface IFunction6<A1, A2, A3, A4, A5, A6, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n}\nexport interface IFunction7<A1, A2, A3, A4, A5, A6, A7, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n}\nexport interface IFunction8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n}\n\nexport interface IAction0 extends IFunction0<void> { }\nexport interface IAction1<A1> extends IFunction1<A1, void> { }\nexport interface IAction2<A1, A2> extends IFunction2<A1, A2, void> { }\nexport interface IAction3<A1, A2, A3> extends IFunction3<A1, A2, A3, void> { }\nexport interface IAction4<A1, A2, A3, A4> extends IFunction4<A1, A2, A3, A4, void> { }\nexport interface IAction5<A1, A2, A3, A4, A5> extends IFunction5<A1, A2, A3, A4, A5, void> { }\nexport interface IAction6<A1, A2, A3, A4, A5, A6> extends IFunction6<A1, A2, A3, A4, A5, A6, void> { }\nexport interface IAction7<A1, A2, A3, A4, A5, A6, A7> extends IFunction7<A1, A2, A3, A4, A5, A6, A7, void> { }\nexport interface IAction8<A1, A2, A3, A4, A5, A6, A7, A8> extends IFunction8<A1, A2, A3, A4, A5, A6, A7, A8, void> { }\n\nexport interface IAsyncFunction0<T> extends IFunction0<TPromise<T>> { }\nexport interface IAsyncFunction1<A1, T> extends IFunction1<A1, TPromise<T>> { }\nexport interface IAsyncFunction2<A1, A2, T> extends IFunction2<A1, A2, TPromise<T>> { }\nexport interface IAsyncFunction3<A1, A2, A3, T> extends IFunction3<A1, A2, A3, TPromise<T>> { }\nexport interface IAsyncFunction4<A1, A2, A3, A4, T> extends IFunction4<A1, A2, A3, A4, TPromise<T>> { }\nexport interface IAsyncFunction5<A1, A2, A3, A4, A5, T> extends IFunction5<A1, A2, A3, A4, A5, TPromise<T>> { }\nexport interface IAsyncFunction6<A1, A2, A3, A4, A5, A6, T> extends IFunction6<A1, A2, A3, A4, A5, A6, TPromise<T>> { }\nexport interface IAsyncFunction7<A1, A2, A3, A4, A5, A6, A7, T> extends IFunction7<A1, A2, A3, A4, A5, A6, A7, TPromise<T>> { }\nexport interface IAsyncFunction8<A1, A2, A3, A4, A5, A6, A7, A8, T> extends IFunction8<A1, A2, A3, A4, A5, A6, A7, A8, TPromise<T>> { }\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { isArray } from './types';\n\nexport const empty: IDisposable = Object.freeze({\n\tdispose() { }\n});\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function dispose<T extends IDisposable>(...disposables: T[]): T;\nexport function dispose<T extends IDisposable>(disposables: T[]): T[];\nexport function dispose<T extends IDisposable>(...disposables: T[]): T[] {\n\tconst first = disposables[0];\n\n\tif (isArray(first)) {\n\t\tdisposables = first as any as T[];\n\t}\n\n\tdisposables.forEach(d => d && d.dispose());\n\treturn [];\n}\n\nexport function combinedDisposable(disposables: IDisposable[]): IDisposable {\n\treturn { dispose: () => dispose(disposables) };\n}\n\nexport function toDisposable(...fns: (() => void)[]): IDisposable {\n\treturn combinedDisposable(fns.map(fn => ({ dispose: fn })));\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tprivate _toDispose: IDisposable[];\n\n\tconstructor() {\n\t\tthis._toDispose = [];\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprotected _register<T extends IDisposable>(t:T): T {\n\t\tthis._toDispose.push(t);\n\t\treturn t;\n\t}\n}\n\nexport class Disposables extends Disposable {\n\n\tpublic add<T extends IDisposable>(e: T): T;\n\tpublic add(...elements: IDisposable[]): void;\n\tpublic add<T extends IDisposable>(arg: T | T[]): T {\n\t\tif (!Array.isArray(arg)) {\n\t\t\treturn this._register(arg);\n\t\t} else {\n\t\t\tfor (let element of arg) {\n\t\t\t\treturn this._register(element);\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as Types from 'vs/base/common/types';\n\nexport function clone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\treturn obj;\n\t}\n\tvar result = (Array.isArray(obj)) ? <any>[] : <any>{};\n\tObject.keys(obj).forEach((key) => {\n\t\tif (obj[key] && typeof obj[key] === 'object') {\n\t\t\tresult[key] = clone(obj[key]);\n\t\t} else {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tvar result = (Array.isArray(obj)) ? <any>[] : <any>{};\n\tObject.getOwnPropertyNames(obj).forEach((key) => {\n\t\tif (obj[key] && typeof obj[key] === 'object') {\n\t\t\tresult[key] = deepClone(obj[key]);\n\t\t} else {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, []);\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, encounteredObjects: any[]): any {\n\tif (Types.isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tvar changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (Types.isArray(obj)) {\n\t\tvar r1: any[] = [];\n\t\tfor (var i1 = 0; i1 < obj.length; i1++) {\n\t\t\tr1.push(_cloneAndChange(obj[i1], changer, encounteredObjects));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (Types.isObject(obj)) {\n\t\tif (encounteredObjects.indexOf(obj) >= 0) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tencounteredObjects.push(obj);\n\t\tvar r2 = {};\n\t\tfor (var i2 in obj) {\n\t\t\tif (hasOwnProperty.call(obj, i2)) {\n\t\t\t\tr2[i2] = _cloneAndChange(obj[i2], changer, encounteredObjects);\n\t\t\t}\n\t\t}\n\t\tencounteredObjects.pop();\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n// DON'T USE THESE FUNCTION UNLESS YOU KNOW HOW CHROME\n// WORKS... WE HAVE SEEN VERY WEIRD BEHAVIOUR WITH CHROME >= 37\n\n///**\n// * Recursively call Object.freeze on object and any properties that are objects.\n// */\n//export function deepFreeze(obj:any):void {\n//\tObject.freeze(obj);\n//\tObject.keys(obj).forEach((key) => {\n//\t\tif(!(typeof obj[key] === 'object') || Object.isFrozen(obj[key])) {\n//\t\t\treturn;\n//\t\t}\n//\n//\t\tdeepFreeze(obj[key]);\n//\t});\n//\tif(!Object.isFrozen(obj)) {\n//\t\tconsole.log('too warm');\n//\t}\n//}\n//\n//export function deepSeal(obj:any):void {\n//\tObject.seal(obj);\n//\tObject.keys(obj).forEach((key) => {\n//\t\tif(!(typeof obj[key] === 'object') || Object.isSealed(obj[key])) {\n//\t\t\treturn;\n//\t\t}\n//\n//\t\tdeepSeal(obj[key]);\n//\t});\n//\tif(!Object.isSealed(obj)) {\n//\t\tconsole.log('NOT sealed');\n//\t}\n//}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!Types.isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (Types.isObject(source)) {\n\t\tObject.keys(source).forEach((key) => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (Types.isObject(destination[key]) && Types.isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach((key) => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function toObject<T,R>(arr: T[], keyMap: (T) => string, valueMap: (T) => R = x => x): { [key: string]: R } {\n\treturn arr.reduce((o, d) => assign(o, { [keyMap(d)]: valueMap(d) }), Object.create(null));\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tvar i: number,\n\t\tkey: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tvar oneKeys:string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tvar otherKeys:string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function ensureProperty(obj: any, property: string, defaultValue: any) {\n\tif (typeof obj[property] === 'undefined') {\n\t\tobj[property] = defaultValue;\n\t}\n}\n\nexport function arrayToHash(array: any[]) {\n\tvar result: any = {};\n\tfor (var i = 0; i < array.length; ++i) {\n\t\tresult[array[i]] = true;\n\t}\n\treturn result;\n}\n\n/**\n * Given an array of strings, returns a function which, given a string\n * returns true or false whether the string is in that array.\n */\nexport function createKeywordMatcher(arr: string[], caseInsensitive: boolean = false): (str: string) => boolean {\n\tif (caseInsensitive) {\n\t\tarr = arr.map(function (x) { return x.toLowerCase(); });\n\t}\n\tvar hash = arrayToHash(arr);\n\tif (caseInsensitive) {\n\t\treturn function (word) {\n\t\t\treturn hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\n\t\t};\n\t} else {\n\t\treturn function (word) {\n\t\t\treturn hash[word] !== undefined && hash.hasOwnProperty(word);\n\t\t};\n\t}\n}\n\n/**\n * Started from TypeScript's __extends function to make a type a subclass of a specific class.\n * Modified to work with properties already defined on the derivedClass, since we can't get TS\n * to call this method before the constructor definition.\n */\nexport function derive(baseClass: any, derivedClass: any): void {\n\n\tfor (var prop in baseClass) {\n\t\tif (baseClass.hasOwnProperty(prop)) {\n\t\t\tderivedClass[prop] = baseClass[prop];\n\t\t}\n\t}\n\n\tderivedClass = derivedClass || function () { };\n\tvar basePrototype = baseClass.prototype;\n\tvar derivedPrototype = derivedClass.prototype;\n\tderivedClass.prototype = Object.create(basePrototype);\n\n\tfor (var prop in derivedPrototype) {\n\t\tif (derivedPrototype.hasOwnProperty(prop)) {\n\t\t\t// handle getters and setters properly\n\t\t\tObject.defineProperty(derivedClass.prototype, prop, Object.getOwnPropertyDescriptor(derivedPrototype, prop));\n\t\t}\n\t}\n\n\t// Cast to any due to Bug 16188:PropertyDescriptor set and get function should be optional.\n\tObject.defineProperty(derivedClass.prototype, 'constructor', <any>{ value: derivedClass, writable: true, configurable: true, enumerable: true });\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tvar seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\n\t\tif (Types.isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T,R>(obj: T, fn: (obj: T) => R, defaultValue: R = null): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport platform = require('vs/base/common/platform');\n\n\nfunction _encode(ch: string): string {\n\treturn '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n}\n\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction encodeURIComponent2(str: string): string {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, _encode);\n}\n\nfunction encodeNoop(str: string): string {\n\treturn str;\n}\n\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nexport default class URI {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string';\n\t}\n\n\tprivate static _empty = '';\n\tprivate static _slash = '/';\n\tprivate static _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\tprivate static _driveLetterPath = /^\\/[a-zA-z]:/;\n\tprivate static _upperCaseDrive = /^(\\/)?([A-Z]:)/;\n\n\tprivate _scheme: string;\n\tprivate _authority: string;\n\tprivate _path: string;\n\tprivate _query: string;\n\tprivate _fragment: string;\n\tprivate _formatted: string;\n\tprivate _fsPath: string;\n\n\tconstructor() {\n\t\tthis._scheme = URI._empty;\n\t\tthis._authority = URI._empty;\n\t\tthis._path = URI._empty;\n\t\tthis._query = URI._empty;\n\t\tthis._fragment = URI._empty;\n\n\t\tthis._formatted = null;\n\t\tthis._fsPath = null;\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\tget scheme() {\n\t\treturn this._scheme;\n\t}\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\tget authority() {\n\t\treturn this._authority;\n\t}\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget path() {\n\t\treturn this._path;\n\t}\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget query() {\n\t\treturn this._query;\n\t}\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget fragment() {\n\t\treturn this._fragment;\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n\t * uses the platform specific path separator. Will *not* validate the path for\n\t * invalid characters and semantics. Will *not* look at the scheme of this URI.\n\t */\n\tget fsPath() {\n\t\tif (!this._fsPath) {\n\t\t\tvar value: string;\n\t\t\tif (this._authority && this._path && this.scheme === 'file') {\n\t\t\t\t// unc path: file://shares/c$/far/boo\n\t\t\t\tvalue = `//${this._authority}${this._path}`;\n\t\t\t} else if (URI._driveLetterPath.test(this._path)) {\n\t\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\t\tvalue = this._path[1].toLowerCase() + this._path.substr(2);\n\t\t\t} else {\n\t\t\t\t// other path\n\t\t\t\tvalue = this._path;\n\t\t\t}\n\t\t\tif (platform.isWindows) {\n\t\t\t\tvalue = value.replace(/\\//g, '\\\\');\n\t\t\t}\n\t\t\tthis._fsPath = value;\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\t// ---- modify to new -------------------------\n\n\tpublic with(change: { scheme?: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet {scheme, authority, path, query, fragment} = change;\n\t\tif (scheme === void 0) {\n\t\t\tscheme = this.scheme;\n\t\t} else if(scheme === null){\n\t\t\tscheme = '';\n\t\t}\n\t\tif (authority === void 0) {\n\t\t\tauthority = this.authority;\n\t\t} else if(authority === null){\n\t\t\tauthority = '';\n\t\t}\n\t\tif (path === void 0) {\n\t\t\tpath = this.path;\n\t\t} else if(path === null){\n\t\t\tpath = '';\n\t\t}\n\t\tif (query === void 0) {\n\t\t\tquery = this.query;\n\t\t} else if(query === null){\n\t\t\tquery = '';\n\t\t}\n\t\tif (fragment === void 0) {\n\t\t\tfragment = this.fragment;\n\t\t} else if(fragment === null){\n\t\t\tfragment = '';\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\tconst ret = new URI();\n\t\tret._scheme = scheme;\n\t\tret._authority = authority;\n\t\tret._path = path;\n\t\tret._query = query;\n\t\tret._fragment = fragment;\n\t\tURI._validate(ret);\n\t\treturn ret;\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\tpublic static parse(value: string): URI {\n\t\tconst ret = new URI();\n\t\tconst data = URI._parseComponents(value);\n\t\tret._scheme = data.scheme;\n\t\tret._authority = decodeURIComponent(data.authority);\n\t\tret._path = decodeURIComponent(data.path);\n\t\tret._query = decodeURIComponent(data.query);\n\t\tret._fragment = decodeURIComponent(data.fragment);\n\t\tURI._validate(ret);\n\t\treturn ret;\n\t}\n\n\tpublic static file(path: string): URI {\n\n\t\tconst ret = new URI();\n\t\tret._scheme = 'file';\n\n\t\t// normalize to fwd-slashes\n\t\tpath = path.replace(/\\\\/g, URI._slash);\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === URI._slash && path[0] === path[1]) {\n\t\t\tlet idx = path.indexOf(URI._slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tret._authority = path.substring(2);\n\t\t\t} else {\n\t\t\t\tret._authority = path.substring(2, idx);\n\t\t\t\tret._path = path.substring(idx);\n\t\t\t}\n\t\t} else {\n\t\t\tret._path = path;\n\t\t}\n\n\t\t// Ensure that path starts with a slash\n\t\t// or that it is at least a slash\n\t\tif (ret._path[0] !== URI._slash) {\n\t\t\tret._path = URI._slash + ret._path;\n\t\t}\n\n\t\tURI._validate(ret);\n\n\t\treturn ret;\n\t}\n\n\tprivate static _parseComponents(value: string): UriComponents {\n\n\t\tconst ret: UriComponents = {\n\t\t\tscheme: URI._empty,\n\t\t\tauthority: URI._empty,\n\t\t\tpath: URI._empty,\n\t\t\tquery: URI._empty,\n\t\t\tfragment: URI._empty,\n\t\t};\n\n\t\tconst match = URI._regexp.exec(value);\n\t\tif (match) {\n\t\t\tret.scheme = match[2] || ret.scheme;\n\t\t\tret.authority = match[4] || ret.authority;\n\t\t\tret.path = match[5] || ret.path;\n\t\t\tret.query = match[7] || ret.query;\n\t\t\tret.fragment = match[9] || ret.fragment;\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static from(components: { scheme?: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new URI().with(components);\n\t}\n\n\tprivate static _schemePattern = /^\\w[\\w\\d+.-]*$/;\n\tprivate static _singleSlashStart = /^\\//;\n\tprivate static _doubleSlashStart = /^\\/\\//;\n\n\tprivate static _validate(ret: URI): void {\n\t\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\t\tif (ret.scheme && !URI._schemePattern.test(ret.scheme)) {\n\t\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t\t}\n\n\t\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t\t// If a URI contains an authority component, then the path component\n\t\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t\t// does not contain an authority component, then the path cannot begin\n\t\t// with two slash characters (\"//\").\n\t\tif (ret.path) {\n\t\t\tif (ret.authority) {\n\t\t\t\tif (!URI._singleSlashStart.test(ret.path)) {\n\t\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (URI._doubleSlashStart.test(ret.path)) {\n\t\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = URI._asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn URI._asFormatted(this, true);\n\t\t}\n\t}\n\n\tprivate static _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\t\tconst encoder = !skipEncoding\n\t\t\t? encodeURIComponent2\n\t\t\t: encodeNoop;\n\n\t\tconst parts: string[] = [];\n\n\t\tlet {scheme, authority, path, query, fragment} = uri;\n\t\tif (scheme) {\n\t\t\tparts.push(scheme, ':');\n\t\t}\n\t\tif (authority || scheme === 'file') {\n\t\t\tparts.push('//');\n\t\t}\n\t\tif (authority) {\n\t\t\tauthority = authority.toLowerCase();\n\t\t\tlet idx = authority.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tparts.push(encoder(authority));\n\t\t\t} else {\n\t\t\t\tparts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\n\t\t\t}\n\t\t}\n\t\tif (path) {\n\t\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\t\tconst m = URI._upperCaseDrive.exec(path);\n\t\t\tif (m) {\n\t\t\t\tif (m[1]) {\n\t\t\t\t\tpath = '/' + m[2].toLowerCase() + path.substr(3); // \"/c:\".length === 3\n\t\t\t\t} else {\n\t\t\t\t\tpath = m[2].toLowerCase() + path.substr(2); // // \"c:\".length === 2\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// encode every segement but not slashes\n\t\t\t// make sure that # and ? are always encoded\n\t\t\t// when occurring in paths - otherwise the result\n\t\t\t// cannot be parsed back again\n\t\t\tlet lastIdx = 0;\n\t\t\twhile(true) {\n\t\t\t\tlet idx = path.indexOf(URI._slash, lastIdx);\n\t\t\t\tif (idx === -1) {\n\t\t\t\t\tparts.push(encoder(path.substring(lastIdx)).replace(/[#?]/, _encode));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tparts.push(encoder(path.substring(lastIdx, idx)).replace(/[#?]/, _encode), URI._slash);\n\t\t\t\tlastIdx = idx + 1;\n\t\t\t};\n\t\t}\n\t\tif (query) {\n\t\t\tparts.push('?', encoder(query));\n\t\t}\n\t\tif (fragment) {\n\t\t\tparts.push('#', encoder(fragment));\n\t\t}\n\n\t\treturn parts.join(URI._empty);\n\t}\n\n\tpublic toJSON(): any {\n\t\treturn <UriState> {\n\t\t\tscheme: this.scheme,\n\t\t\tauthority: this.authority,\n\t\t\tpath: this.path,\n\t\t\tfsPath: this.fsPath,\n\t\t\tquery: this.query,\n\t\t\tfragment: this.fragment,\n\t\t\texternal: this.toString(),\n\t\t\t$mid: 1\n\t\t};\n\t}\n\n\tstatic revive(data: any): URI {\n\t\tlet result = new URI();\n\t\tresult._scheme = (<UriState> data).scheme;\n\t\tresult._authority = (<UriState> data).authority;\n\t\tresult._path = (<UriState> data).path;\n\t\tresult._query = (<UriState> data).query;\n\t\tresult._fragment = (<UriState> data).fragment;\n\t\tresult._fsPath = (<UriState> data).fsPath;\n\t\tresult._formatted = (<UriState>data).external;\n\t\tURI._validate(result);\n\t\treturn result;\n\t}\n}\n\ninterface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\tfsPath: string;\n\texternal: string;\n}\n","/**\n * Extracted from https://github.com/winjs/winjs\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\n * Copyright (c) Microsoft Corporation.\n * All Rights Reserved.\n * Licensed under the MIT License.\n */\n(function() {\n\nvar _modules = {};\n_modules[\"WinJS/Core/_WinJS\"] = {};\n\nvar _winjs = function(moduleId, deps, factory) {\n    var exports = {};\n    var exportsPassedIn = false;\n\n    var depsValues = deps.map(function(dep) {\n        if (dep === 'exports') {\n            exportsPassedIn = true;\n            return exports;\n        }\n        return _modules[dep];\n    });\n\n    var result = factory.apply({}, depsValues);\n\n    _modules[moduleId] = exportsPassedIn ? exports : result;\n};\n\n\n_winjs(\"WinJS/Core/_Global\", [], function () {\n    \"use strict\";\n\n    // Appease jshint\n    /* global window, self, global */\n\n    var globalObject =\n        typeof window !== 'undefined' ? window :\n        typeof self !== 'undefined' ? self :\n        typeof global !== 'undefined' ? global :\n        {};\n    return globalObject;\n});\n\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\n    \"use strict\";\n\n    var hasWinRT = !!_Global.Windows;\n\n    function markSupportedForProcessing(func) {\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n        /// or WinJS.Binding.processAll.\n        /// </summary>\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n        /// The function to be marked as compatible with declarative processing.\n        /// </param>\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n        /// The input function.\n        /// </returns>\n        /// </signature>\n        func.supportedForProcessing = true;\n        return func;\n    }\n\n    return {\n        hasWinRT: hasWinRT,\n        markSupportedForProcessing: markSupportedForProcessing,\n        _setImmediate: _Global.setImmediate ? _Global.setImmediate.bind(_Global) : function (handler) {\n            _Global.setTimeout(handler, 0);\n        }\n    };\n});\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\n    \"use strict\";\n\n    return _Global.msWriteProfilerMark || function () { };\n});\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\n    \"use strict\";\n\n    function initializeProperties(target, members, prefix) {\n        var keys = Object.keys(members);\n        var isArray = Array.isArray(target);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    if (prefix && member.setName && typeof member.setName === 'function') {\n                        member.setName(prefix + \".\" + key);\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\n                continue;\n            }\n            if (isArray) {\n                target.forEach(function (target) {\n                    target[key] = member;\n                });\n            } else {\n                target[key] = member;\n            }\n        }\n        if (properties) {\n            if (isArray) {\n                target.forEach(function (target) {\n                    Object.defineProperties(target, properties);\n                });\n            } else {\n                Object.defineProperties(target, properties);\n            }\n        }\n    }\n\n    (function () {\n\n        var _rootNamespace = _WinJS;\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function createNamespace(parentNamespace, name) {\n            var currentNamespace = parentNamespace || {};\n            if (name) {\n                var namespaceFragments = name.split(\".\");\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\n                    currentNamespace = _WinJS;\n                    namespaceFragments.splice(0, 1);\n                }\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                    var namespaceName = namespaceFragments[i];\n                    if (!currentNamespace[namespaceName]) {\n                        Object.defineProperty(currentNamespace, namespaceName,\n                            { value: {}, writable: false, enumerable: true, configurable: true }\n                        );\n                    }\n                    currentNamespace = currentNamespace[namespaceName];\n                }\n            }\n            return currentNamespace;\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = createNamespace(parentNamespace, name);\n\n            if (members) {\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(_Global, name, members);\n        }\n\n        var LazyStates = {\n            uninitialized: 1,\n            working: 2,\n            initialized: 3,\n        };\n\n        function lazy(f) {\n            var name;\n            var state = LazyStates.uninitialized;\n            var result;\n            return {\n                setName: function (value) {\n                    name = value;\n                },\n                get: function () {\n                    switch (state) {\n                        case LazyStates.initialized:\n                            return result;\n\n                        case LazyStates.uninitialized:\n                            state = LazyStates.working;\n                            try {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\n                                result = f();\n                            } finally {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\n                                state = LazyStates.uninitialized;\n                            }\n                            f = null;\n                            state = LazyStates.initialized;\n                            return result;\n\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            throw \"Illegal\";\n                    }\n                },\n                set: function (value) {\n                    switch (state) {\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            state = LazyStates.initialized;\n                            result = value;\n                            break;\n                    }\n                },\n                enumerable: true,\n                configurable: true,\n            };\n        }\n\n        // helper for defining AMD module members\n        function moduleDefine(exports, name, members) {\n            var target = [exports];\n            var publicNS = null;\n            if (name) {\n                publicNS = createNamespace(_Global, name);\n                target.push(publicNS);\n            }\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\n            return publicNS;\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true },\n\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\n\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })();\n\n    (function () {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        _WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })();\n\n    return {\n        Namespace: _WinJS.Namespace,\n        Class: _WinJS.Class\n    };\n\n});\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\n    \"use strict\";\n\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n        /// <summary locid=\"WinJS.ErrorFromName\">\n        /// Creates an Error object with the specified name and message properties.\n        /// </summary>\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n        /// </signature>\n        this.name = name;\n        this.message = message || name;\n    }, {\n        /* empty */\n    }, {\n        supportedForProcessing: false,\n    });\n\n    _Base.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: ErrorFromName\n    });\n\n    return ErrorFromName;\n\n});\n\n\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        };\n    }\n\n    function createEventProperties() {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = _Base.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event is raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n});\n\n\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\n    \"use strict\";\n\n    function nop(v) {\n        return v;\n    }\n\n    return {\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\n    };\n});\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\n    \"use strict\";\n\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise: 0x01,\n        thenPromise: 0x02,\n        errorPromise: 0x04,\n        exceptionPromise: 0x08,\n        completePromise: 0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            // We can special case our own intermediate promises which are not in a\n            //  terminal state by just pushing this promise as a listener without\n            //  having to create new indirection functions\n            if (waitedUpon instanceof ThenPromise &&\n                waitedUpon._state !== state_error &&\n                waitedUpon._state !== state_success) {\n                pushListener(waitedUpon, { promise: promise });\n            } else {\n                var error = function (value) {\n                    if (waitedUpon._errorId) {\n                        promise._chainedError(value, waitedUpon);\n                    } else {\n                        // Because this is an interop boundary we want to indicate that this\n                        //  error has been handled by the promise infrastructure before we\n                        //  begin a new handling chain.\n                        //\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                        promise._error(value);\n                    }\n                };\n                error.handlesOnError = true;\n                waitedUpon.then(\n                    promise._completed.bind(promise),\n                    error,\n                    promise._progress.bind(promise)\n                );\n            }\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = _Base.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\n\n            if (target) {\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    _Trace._traceAsyncCallbackCompleted();\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\n\n            if (target) {\n                var asyncCallbackStarted = false;\n                try {\n                    if (onError) {\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                        asyncCallbackStarted = true;\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value));\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    if (asyncCallbackStarted) {\n                        _Trace._traceAsyncCallbackCompleted();\n                    }\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = _Base.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                Promise._doneHandler(value);\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = _Base.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    Promise._doneHandler(ex);\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = _Global.setTimeout(c, timeoutMS);\n                } else {\n                    _BaseCoreUtils._setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    _Global.clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); };\n        var cancelTimeout = function () { timeout.cancel(); };\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = _Base.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n                // BEGIN monaco change\n                try {\n                    if (this._oncancel) {\n                        this._oncancel();\n                    } else {\n                        throw new Error('Promise did not implement oncancel');\n                    }\n                } catch (ex) {\n                    // Access fields to get them created\n                    var msg = ex.message;\n                    var stack = ex.stack;\n                    promiseEventListeners.dispatchEvent('error', ex);\n                }\n                // END monaco change\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error) {\n                        var keys = Object.keys(values);\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\n                //\n                // Returns a promise which on cancelation will still result in downstream cancelation while\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\n                //  'input' to be shared amoung various consumers.\n                //\n                if (!Promise.is(input)) {\n                    return Promise.wrap(input);\n                }\n                var complete;\n                var error;\n                var output = new Promise(\n                    function (c, e) {\n                        complete = c;\n                        error = e;\n                    },\n                    function () {\n                        complete = null;\n                        error = null;\n                        oncancel && oncancel();\n                    }\n                );\n                input.then(\n                    function (v) { complete && complete(v); },\n                    function (e) { error && error(e); }\n                );\n                return output;\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\n\n    Promise._doneHandler = function (value) {\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\n            throw value;\n        });\n    };\n\n    return {\n        PromiseStateMachine: PromiseStateMachine,\n        Promise: Promise,\n        state_created: state_created\n    };\n});\n\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\n    \"use strict\";\n\n    _Base.Namespace.define(\"WinJS\", {\n        Promise: _StateMachine.Promise\n    });\n\n    return _StateMachine.Promise;\n});\n\nvar exported = _modules[\"WinJS/Core/_WinJS\"];\n\nif (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n    define(\"vs/base/common/winjs.base.raw\", exported);\n} else {\n    module.exports = exported;\n}\n\nif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n    _modules[\"WinJS/Core/_BaseCoreUtils\"]._setImmediate = function(handler) {\n        return process.nextTick(handler);\n    };\n}\n\n})();","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IPosition} from 'vs/editor/common/editorCommon';\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other:IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a:IPosition, b:IPosition): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other:IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a:IPosition, b:IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other:IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a:IPosition, b:IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos:IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {Position} from 'vs/editor/common/core/position';\nimport {IPosition, IRange} from 'vs/editor/common/editorCommon';\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic startLineNumber:number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic startColumn:number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic endLineNumber:number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic endColumn:number;\n\n\tconstructor(startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range:IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position:IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range:IRange, position:IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range:IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range:IRange, otherRange:IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range:IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a:IRange, b:IRange): Range {\n\t\tvar startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number;\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range:IRange): Range {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a:IRange, b:IRange): Range {\n\t\tvar resultStartLineNumber = a.startLineNumber,\n\t\t\tresultStartColumn = a.startColumn,\n\t\t\tresultEndLineNumber = a.endLineNumber,\n\t\t\tresultEndColumn = a.endColumn,\n\t\t\totherStartLineNumber = b.startLineNumber,\n\t\t\totherStartColumn = b.startColumn,\n\t\t\totherEndLineNumber = b.endLineNumber,\n\t\t\totherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other:IRange): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a:IRange, b:IRange): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn new Position(this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn new Position(this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Clone this range.\n\t */\n\tpublic cloneRange(): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range:IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range:IRange): Range {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a:IRange, b:IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a:IRange, b:IRange): number {\n\t\tlet aStartLineNumber = a.startLineNumber|0;\n\t\tlet bStartLineNumber = b.startLineNumber|0;\n\t\tlet aStartColumn = a.startColumn|0;\n\t\tlet bStartColumn = b.startColumn|0;\n\t\tlet aEndLineNumber = a.endLineNumber|0;\n\t\tlet bEndLineNumber = b.endLineNumber|0;\n\t\tlet aEndColumn = a.endColumn|0;\n\t\tlet bEndColumn = b.endColumn|0;\n\n\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t}\n\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t}\n\t\t\treturn aStartColumn - bStartColumn;\n\t\t}\n\t\treturn aStartLineNumber - bStartLineNumber;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a:IRange, b:IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range:IRange):boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Range} from 'vs/editor/common/core/range';\nimport {ISelection} from 'vs/editor/common/editorCommon';\n\n/**\n * The direction of a selection.\n */\nexport enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tpublic selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tpublic selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpublic positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpublic positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t}\n\n\t/**\n\t * Clone this selection.\n\t */\n\tpublic clone(): Selection {\n\t\treturn new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Transform to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\t/**\n\t * Test if equals other selection.\n\t */\n\tpublic equalsSelection(other: ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two selections are equal.\n\t */\n\tpublic static selectionsEqual(a:ISelection, b:ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tpublic getDirection(): SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn SelectionDirection.LTR;\n\t\t}\n\t\treturn SelectionDirection.RTL;\n\t}\n\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\t/**\n\t * Create a `Selection` from an `ISelection`.\n\t */\n\tpublic static liftSelection(sel:ISelection): Selection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\t/**\n\t * `a` equals `b`.\n\t */\n\tpublic static selectionsArrEqual(a:ISelection[], b:ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `obj` is an `ISelection`.\n\t */\n\tpublic static isISelection(obj: any): obj is ISelection {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Create with a direction.\n\t */\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction:SelectionDirection): Selection {\n\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IDiffChange, ISequence, LcsDiff} from 'vs/base/common/diff/diff';\nimport * as strings from 'vs/base/common/strings';\nimport {ICharChange, ILineChange} from 'vs/editor/common/editorCommon';\n\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n\ninterface IMarker {\n\tlineNumber: number;\n\tcolumn: number;\n\toffset: number;\n}\n\nfunction computeDiff(originalSequence:ISequence, modifiedSequence:ISequence, continueProcessingPredicate:()=>boolean): IDiffChange[] {\n\tvar diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n\treturn diffAlgo.ComputeDiff();\n}\n\nclass MarkerSequence implements ISequence {\n\n\tpublic buffer:string;\n\tpublic startMarkers:IMarker[];\n\tpublic endMarkers:IMarker[];\n\n\tconstructor(buffer:string, startMarkers:IMarker[], endMarkers:IMarker[]) {\n\t\tthis.buffer = buffer;\n\t\tthis.startMarkers = startMarkers;\n\t\tthis.endMarkers = endMarkers;\n\t}\n\n\tpublic equals(other:any): boolean {\n\t\tif (!(other instanceof MarkerSequence)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherMarkerSequence = <MarkerSequence>other;\n\t\tif (this.getLength() !== otherMarkerSequence.getLength()) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0, len = this.getLength(); i < len; i++) {\n\t\t\tvar myElement = this.getElementHash(i);\n\t\t\tvar otherElement = otherMarkerSequence.getElementHash(i);\n\t\t\tif (myElement !== otherElement) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this.startMarkers.length;\n\t}\n\n\tpublic getElementHash(i:number): string {\n\t\treturn this.buffer.substring(this.startMarkers[i].offset, this.endMarkers[i].offset);\n\t}\n\n\tpublic getStartLineNumber(i:number): number {\n\t\tif (i === this.startMarkers.length) {\n\t\t\t// This is the special case where a change happened after the last marker\n\t\t\treturn this.startMarkers[i - 1].lineNumber + 1;\n\t\t}\n\t\treturn this.startMarkers[i].lineNumber;\n\t}\n\n\tpublic getStartColumn(i:number): number {\n\t\treturn this.startMarkers[i].column;\n\t}\n\n\tpublic getEndLineNumber(i:number): number {\n\t\treturn this.endMarkers[i].lineNumber;\n\t}\n\n\tpublic getEndColumn(i:number): number {\n\t\treturn this.endMarkers[i].column;\n\t}\n\n}\n\nclass LineMarkerSequence extends MarkerSequence {\n\n\tconstructor(lines:string[], shouldIgnoreTrimWhitespace:boolean) {\n\t\tvar i:number, length:number, pos:number;\n\t\tvar buffer = '';\n\t\tvar startMarkers:IMarker[] = [], endMarkers:IMarker[] = [], startColumn:number, endColumn:number;\n\n\t\tfor (pos = 0, i = 0, length = lines.length; i < length; i++) {\n\t\t\tbuffer += lines[i];\n\t\t\tstartColumn = 1;\n\t\t\tendColumn = lines[i].length + 1;\n\n\t\t\tif (shouldIgnoreTrimWhitespace) {\n\t\t\t\tstartColumn = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n\t\t\t\tendColumn = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n\t\t\t}\n\n\t\t\tstartMarkers.push({\n\t\t\t\toffset: pos + startColumn - 1,\n\t\t\t\tlineNumber: i + 1,\n\t\t\t\tcolumn: startColumn\n\t\t\t});\n\n\t\t\tendMarkers.push({\n\t\t\t\toffset: pos + endColumn - 1,\n\t\t\t\tlineNumber: i+1,\n\t\t\t\tcolumn: endColumn\n\t\t\t});\n\n\t\t\tpos += lines[i].length;\n\t\t}\n\n\t\tsuper(buffer, startMarkers, endMarkers);\n\t}\n\n\tprivate static _getFirstNonBlankColumn(txt:string, defaultValue:number): number {\n\t\tvar r = strings.firstNonWhitespaceIndex(txt);\n\t\tif (r === -1) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn r + 1;\n\t}\n\n\tprivate static _getLastNonBlankColumn(txt:string, defaultValue:number): number {\n\t\tvar r = strings.lastNonWhitespaceIndex(txt);\n\t\tif (r === -1) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn r + 2;\n\t}\n\n\tpublic getCharSequence(startIndex:number, endIndex:number):MarkerSequence {\n\t\tvar startMarkers:IMarker[] = [], endMarkers:IMarker[] = [], index:number, i:number, startMarker:IMarker, endMarker:IMarker;\n\t\tfor (index = startIndex; index <= endIndex; index++) {\n\t\t\tstartMarker = this.startMarkers[index];\n\t\t\tendMarker = this.endMarkers[index];\n\t\t\tfor (i = startMarker.offset; i < endMarker.offset; i++) {\n\t\t\t\tstartMarkers.push({\n\t\t\t\t\toffset: i,\n\t\t\t\t\tlineNumber: startMarker.lineNumber,\n\t\t\t\t\tcolumn: startMarker.column + (i - startMarker.offset)\n\t\t\t\t});\n\t\t\t\tendMarkers.push({\n\t\t\t\t\toffset: i + 1,\n\t\t\t\t\tlineNumber: startMarker.lineNumber,\n\t\t\t\t\tcolumn: startMarker.column + (i - startMarker.offset) + 1\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn new MarkerSequence(this.buffer, startMarkers, endMarkers);\n\t}\n}\n\nclass CharChange implements ICharChange {\n\n\tpublic originalStartLineNumber:number;\n\tpublic originalStartColumn:number;\n\tpublic originalEndLineNumber:number;\n\tpublic originalEndColumn:number;\n\n\tpublic modifiedStartLineNumber:number;\n\tpublic modifiedStartColumn:number;\n\tpublic modifiedEndLineNumber:number;\n\tpublic modifiedEndColumn:number;\n\n\tconstructor(diffChange:IDiffChange, originalCharSequence:MarkerSequence, modifiedCharSequence:MarkerSequence) {\n\t\tif (diffChange.originalLength === 0) {\n\t\t\tthis.originalStartLineNumber = 0;\n\t\t\tthis.originalStartColumn = 0;\n\t\t\tthis.originalEndLineNumber = 0;\n\t\t\tthis.originalEndColumn = 0;\n\t\t} else {\n\t\t\tthis.originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\tthis.originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n\t\t\tthis.originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\tthis.originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tthis.modifiedStartLineNumber = 0;\n\t\t\tthis.modifiedStartColumn = 0;\n\t\t\tthis.modifiedEndLineNumber = 0;\n\t\t\tthis.modifiedEndColumn = 0;\n\t\t} else {\n\t\t\tthis.modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tthis.modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n\t\t\tthis.modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t\tthis.modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\t}\n\n}\n\nfunction postProcessCharChanges(rawChanges:IDiffChange[]): IDiffChange[] {\n\tif (rawChanges.length <= 1) {\n\t\treturn rawChanges;\n\t}\n\tvar result = [ rawChanges[0] ];\n\n\tvar i:number, len:number, originalMatchingLength:number, modifiedMatchingLength:number, matchingLength:number, prevChange = result[0], currChange:IDiffChange;\n\tfor (i = 1, len = rawChanges.length; i < len; i++) {\n\t\tcurrChange = rawChanges[i];\n\n\t\toriginalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n\t\tmodifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n\t\t// Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n\t\tmatchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n\n\t\tif (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n\t\t\t// Merge the current change into the previous one\n\t\t\tprevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n\t\t\tprevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n\t\t} else {\n\t\t\t// Add the current change\n\t\t\tresult.push(currChange);\n\t\t\tprevChange = currChange;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nclass LineChange implements ILineChange {\n\tpublic originalStartLineNumber:number;\n\tpublic originalEndLineNumber:number;\n\tpublic modifiedStartLineNumber:number;\n\tpublic modifiedEndLineNumber:number;\n\tpublic charChanges:CharChange[];\n\n\tconstructor(diffChange:IDiffChange, originalLineSequence:LineMarkerSequence, modifiedLineSequence:LineMarkerSequence, continueProcessingPredicate:()=>boolean, shouldPostProcessCharChanges:boolean) {\n\t\tif (diffChange.originalLength === 0) {\n\t\t\tthis.originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n\t\t\tthis.originalEndLineNumber = 0;\n\t\t} else {\n\t\t\tthis.originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\tthis.originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tthis.modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n\t\t\tthis.modifiedEndLineNumber = 0;\n\t\t} else {\n\t\t\tthis.modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tthis.modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\tif (diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n\t\t\tvar originalCharSequence = originalLineSequence.getCharSequence(diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\tvar modifiedCharSequence = modifiedLineSequence.getCharSequence(diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\n\t\t\tvar rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate);\n\n\t\t\tif (shouldPostProcessCharChanges) {\n\t\t\t\trawChanges = postProcessCharChanges(rawChanges);\n\t\t\t}\n\n\t\t\tthis.charChanges = [];\n\t\t\tfor (var i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tthis.charChanges.push(new CharChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport interface IDiffComputerOpts {\n\tshouldPostProcessCharChanges: boolean;\n\tshouldIgnoreTrimWhitespace: boolean;\n\tshouldConsiderTrimWhitespaceInEmptyCase: boolean;\n}\n\nexport class DiffComputer {\n\n\tprivate shouldPostProcessCharChanges:boolean;\n\tprivate shouldIgnoreTrimWhitespace:boolean;\n\tprivate maximumRunTimeMs:number;\n\tprivate original:LineMarkerSequence;\n\tprivate modified:LineMarkerSequence;\n\n\tprivate computationStartTime:number;\n\n\tconstructor(originalLines:string[], modifiedLines:string[], opts:IDiffComputerOpts) {\n\t\tthis.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n\t\tthis.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n\t\tthis.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n\t\tthis.original = new LineMarkerSequence(originalLines, this.shouldIgnoreTrimWhitespace);\n\t\tthis.modified = new LineMarkerSequence(modifiedLines, this.shouldIgnoreTrimWhitespace);\n\t\tif (opts.shouldConsiderTrimWhitespaceInEmptyCase && this.shouldIgnoreTrimWhitespace && this.original.equals(this.modified)) {\n\t\t\t// Diff would be empty with `shouldIgnoreTrimWhitespace`\n\t\t\tthis.shouldIgnoreTrimWhitespace = false;\n\t\t\tthis.original = new LineMarkerSequence(originalLines, this.shouldIgnoreTrimWhitespace);\n\t\t\tthis.modified = new LineMarkerSequence(modifiedLines, this.shouldIgnoreTrimWhitespace);\n\t\t}\n\t}\n\n\tpublic computeDiff():ILineChange[] {\n\t\tthis.computationStartTime = (new Date()).getTime();\n\n\t\tvar rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this));\n\n\t\tvar lineChanges: ILineChange[] = [];\n\t\tfor (var i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\tlineChanges.push(new LineChange(rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldPostProcessCharChanges));\n\t\t}\n\t\treturn lineChanges;\n\t}\n\n\tprivate _continueProcessingPredicate(): boolean {\n\t\tif (this.maximumRunTimeMs === 0) {\n\t\t\treturn true;\n\t\t}\n\t\tvar now = (new Date()).getTime();\n\t\treturn now - this.computationStartTime < this.maximumRunTimeMs;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IWordAtPosition} from 'vs/editor/common/editorCommon';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nexport function createWordRegExp(allowInWords:string = ''): RegExp {\n\tvar usualSeparators = USUAL_WORD_SEPARATORS;\n\tvar source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (var i = 0; i < usualSeparators.length; i++) {\n\t\tif (allowInWords.indexOf(usualSeparators[i]) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + usualSeparators[i];\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?:RegExp): RegExp {\n\tvar result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tvar flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\nexport function getWordAtText(column:number, wordDefinition:RegExp, text:string, textOffset:number): IWordAtPosition {\n\n\t// console.log('_getWordAtText: ', column, text, textOffset);\n\n\tvar words = text.match(wordDefinition),\n\t\tk:number,\n\t\tstartWord:number,\n\t\tendWord:number,\n\t\tstartColumn:number,\n\t\tendColumn:number,\n\t\tword:string;\n\n\tif (words) {\n\t\tfor (k = 0; k < words.length; k++) {\n\t\t\tword = words[k].trim();\n\t\t\tif (word.length > 0) {\n\t\t\t\tstartWord = text.indexOf(word, endWord);\n\t\t\t\tendWord = startWord + word.length;\n\n\t\t\t\tstartColumn = textOffset + startWord + 1;\n\t\t\t\tendColumn = textOffset + endWord + 1;\n\n\t\t\t\tif (startColumn <= column && column <= endColumn) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tword: word,\n\t\t\t\t\t\tstartColumn: startColumn,\n\t\t\t\t\t\tendColumn: endColumn\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {ILink} from 'vs/editor/common/modes';\n\nexport interface ILinkComputerTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber:number): string;\n}\n\n// State machine for http:// or https:// or file://\nconst STATE_MAP:{[ch:string]:number}[] = [];\nconst START_STATE = 1;\nconst END_STATE = 12;\nconst ACCEPT_STATE = 13;\n\nSTATE_MAP[1] = { 'h': 2, 'H': 2, 'f': 6, 'F': 6 };\nSTATE_MAP[2] = { 't': 3, 'T': 3 };\nSTATE_MAP[3] = { 't': 4, 'T': 4 };\nSTATE_MAP[4] = { 'p': 5, 'P': 5 };\nSTATE_MAP[5] = { 's': 9, 'S': 9, ':': 10 };\nSTATE_MAP[6] = { 'i': 7, 'I': 7 };\nSTATE_MAP[7] = { 'l': 8, 'L': 8 };\nSTATE_MAP[8] = { 'e': 9, 'E': 9 };\nSTATE_MAP[9] = { ':': 10 };\nSTATE_MAP[10] = { '/': 11 };\nSTATE_MAP[11] = { '/': END_STATE };\n\nenum CharacterClass {\n\tNone = 0,\n\tForceTermination = 1,\n\tCannotEndIn = 2\n}\n\nconst _openParens = '('.charCodeAt(0);\nconst _closeParens = ')'.charCodeAt(0);\nconst _openSquareBracket = '['.charCodeAt(0);\nconst _closeSquareBracket = ']'.charCodeAt(0);\nconst _openCurlyBracket = '{'.charCodeAt(0);\nconst _closeCurlyBracket = '}'.charCodeAt(0);\n\nclass CharacterClassifier {\n\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprivate _asciiMap: CharacterClass[];\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprivate _map: CharacterClass[];\n\n\tconstructor() {\n\t\tconst FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n\t\tconst CANNOT_END_WITH_CHARACTERS = '.,;';\n\n\t\tthis._asciiMap = [];\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tthis._asciiMap[i] = CharacterClass.None;\n\t\t}\n\n\t\tthis._map = [];\n\n\t\tfor (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n\t\t\tthis._set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n\t\t}\n\n\t\tfor (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n\t\t\tthis._set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n\t\t}\n\t}\n\n\tprivate _set(charCode:number, charClass:CharacterClass): void {\n\t\tif (charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = charClass;\n\t\t}\n\t\tthis._map[charCode] = charClass;\n\t}\n\n\tpublic classify(charCode:number): CharacterClass {\n\t\tif (charCode < 256) {\n\t\t\treturn this._asciiMap[charCode];\n\t\t}\n\n\t\tlet charClass = this._map[charCode];\n\t\tif (charClass) {\n\t\t\treturn charClass;\n\t\t}\n\n\t\treturn CharacterClass.None;\n\t}\n}\n\nconst characterClassifier = new CharacterClassifier();\n\nclass LinkComputer {\n\n\tprivate static _createLink(line:string, lineNumber:number, linkBeginIndex:number, linkEndIndex:number):ILink {\n\t\t// Do not allow to end link in certain characters...\n\t\tlet lastIncludedCharIndex = linkEndIndex - 1;\n\t\tdo {\n\t\t\tconst chCode = line.charCodeAt(lastIncludedCharIndex);\n\t\t\tconst chClass = characterClassifier.classify(chCode);\n\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastIncludedCharIndex--;\n\t\t} while (lastIncludedCharIndex > linkBeginIndex);\n\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: linkBeginIndex + 1,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: lastIncludedCharIndex + 2\n\t\t\t},\n\t\t\turl: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n\t\t};\n\t}\n\n\tpublic static computeLinks(model:ILinkComputerTarget):ILink[] {\n\t\tlet result:ILink[] = [];\n\t\tfor (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n\t\t\tconst line = model.getLineContent(i);\n\t\t\tconst len = line.length;\n\n\t\t\tlet j = 0;\n\t\t\tlet linkBeginIndex = 0;\n\t\t\tlet state = START_STATE;\n\t\t\tlet hasOpenParens = false;\n\t\t\tlet hasOpenSquareBracket = false;\n\t\t\tlet hasOpenCurlyBracket = false;\n\n\t\t\twhile (j < len) {\n\n\t\t\t\tlet resetStateMachine = false;\n\n\t\t\t\tif (state === ACCEPT_STATE) {\n\t\t\t\t\tconst chCode = line.charCodeAt(j);\n\t\t\t\t\tlet chClass:CharacterClass;\n\t\t\t\t\tswitch (chCode) {\n\t\t\t\t\t\tcase _openParens:\n\t\t\t\t\t\t\thasOpenParens = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase _closeParens:\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase _openSquareBracket:\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase _closeSquareBracket:\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase _openCurlyBracket:\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase _closeCurlyBracket:\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tchClass = characterClassifier.classify(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(line, i, linkBeginIndex, j));\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === END_STATE) {\n\t\t\t\t\tconst chCode = line.charCodeAt(j);\n\t\t\t\t\tconst chClass = characterClassifier.classify(chCode);\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = ACCEPT_STATE;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst ch = line.charAt(j);\n\t\t\t\t\tif (STATE_MAP[state].hasOwnProperty(ch)) {\n\t\t\t\t\t\tstate = STATE_MAP[state][ch];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resetStateMachine) {\n\t\t\t\t\tstate = START_STATE;\n\t\t\t\t\thasOpenParens = false;\n\t\t\t\t\thasOpenSquareBracket = false;\n\t\t\t\t\thasOpenCurlyBracket = false;\n\n\t\t\t\t\t// Record where the link started\n\t\t\t\t\tlinkBeginIndex = j + 1;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tif (state === ACCEPT_STATE) {\n\t\t\t\tresult.push(LinkComputer._createLink(line, i, linkBeginIndex, len));\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model:ILinkComputerTarget):ILink[] {\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n\t\t// Unknown caller!\n\t\treturn [];\n\t}\n\treturn LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IRange} from 'vs/editor/common/editorCommon';\nimport {IInplaceReplaceSupportResult} from 'vs/editor/common/modes';\n\nexport class BasicInplaceReplace {\n\n\tpublic static INSTANCE = new BasicInplaceReplace();\n\n\tpublic navigateValueSet(range1:IRange, text1:string, range2:IRange, text2:string, up:boolean): IInplaceReplaceSupportResult {\n\n\t\tif (range1 && text1) {\n\t\t\tlet result = this.doNavigateValueSet(text1, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range1,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (range2 && text2) {\n\t\t\tlet result = this.doNavigateValueSet(text2, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range2,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doNavigateValueSet(text:string, up:boolean): string {\n\t\tlet numberResult = this.numberReplace(text, up);\n\t\tif (numberResult !== null) {\n\t\t\treturn numberResult;\n\t\t}\n\t\treturn this.textReplace(text, up);\n\t}\n\n\tprivate numberReplace(value:string, up:boolean):string {\n\t\tvar precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1)),\n\t\t\tn1 = Number(value),\n\t\t\tn2 = parseFloat(value);\n\n\t\tif(!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n\n\t\t\tif(n1 === 0 && !up) {\n\t\t\t\treturn null; // don't do negative\n//\t\t\t} else if(n1 === 9 && up) {\n//\t\t\t\treturn null; // don't insert 10 into a number\n\t\t\t} else {\n\t\t\t\tn1 = Math.floor(n1 * precision);\n\t\t\t\tn1 += up ? precision : -precision;\n\t\t\t\treturn String(n1 / precision);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _defaultValueSet: string[][] = [\n\t\t['true', 'false'],\n\t\t['True', 'False'],\n\t\t['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n\t\t['public', 'protected', 'private'],\n\t];\n\n\tprivate textReplace(value:string, up:boolean):string {\n\t\treturn this.valueSetsReplace(this._defaultValueSet, value, up);\n\t}\n\n\tprivate valueSetsReplace(valueSets:string[][], value:string, up:boolean):string {\n\t\tvar result:string = null;\n\t\tfor (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n\t\t\tresult = this.valueSetReplace(valueSets[i], value, up);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate valueSetReplace(valueSet:string[], value:string, up:boolean):string {\n\t\tvar idx = valueSet.indexOf(value);\n\t\tif(idx >= 0) {\n\t\t\tidx += up ? +1 : -1;\n\t\t\tif(idx < 0) {\n\t\t\t\tidx = valueSet.length - 1;\n\t\t\t} else {\n\t\t\t\tidx %= valueSet.length;\n\t\t\t}\n\t\t\treturn valueSet[idx];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void;\n\n\tindex: number;\n\tremainder: number;\n\n\tconstructor(index:number, remainder:number) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values:number[];\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum:number[];\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate prefixSumValidIndex:number;\n\n\tconstructor(values:number[]) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = [];\n\t\tfor (let i = 0, len = this.values.length; i < len; i++) {\n\t\t\tthis.prefixSum[i] = 0;\n\t\t}\n\t\tthis.prefixSumValidIndex = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValue(insertIndex:number, value:number): void {\n\t\tinsertIndex = Math.floor(insertIndex); //@perf\n\t\tvalue = Math.floor(value); //@perf\n\n\t\tthis.values.splice(insertIndex, 0, value);\n\t\tthis.prefixSum.splice(insertIndex, 0, 0);\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = insertIndex - 1;\n\t\t}\n\t}\n\n\tpublic insertValues(insertIndex: number, values: number[]): void {\n\t\tinsertIndex = Math.floor(insertIndex); //@perf\n\n\t\tif (values.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.values = this.values.slice(0, insertIndex).concat(values).concat(this.values.slice(insertIndex));\n\t\tthis.prefixSum = this.prefixSum.slice(0, insertIndex).concat(PrefixSumComputer._zeroArray(values.length)).concat(this.prefixSum.slice(insertIndex));\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = insertIndex - 1;\n\t\t}\n\t}\n\n\tprivate static _zeroArray(count: number): number[] {\n\t\tcount = Math.floor(count); //@perf\n\n\t\tlet r: number[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tr[i] = 0;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic changeValue(index:number, value:number): void {\n\t\tindex = Math.floor(index); //@perf\n\t\tvalue = Math.floor(value); //@perf\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = index - 1;\n\t\t}\n\t}\n\n\tpublic removeValues(startIndex:number, cnt:number): void {\n\t\tstartIndex = Math.floor(startIndex); //@perf\n\t\tcnt = Math.floor(cnt); //@perf\n\n\t\tthis.values.splice(startIndex, cnt);\n\t\tthis.prefixSum.splice(startIndex, cnt);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = startIndex - 1;\n\t\t}\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index:number): number {\n\t\tindex = Math.floor(index); //@perf\n\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (index <= this.prefixSumValidIndex) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex = Math.max(this.prefixSumValidIndex, index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue:number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid:number;\n\t\tlet midStop:number;\n\t\tlet midStart:number;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ( (high-low)/2 ) | 0;\n\n\t\t\tmidStop = this.getAccumulatedValue(mid);\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {IModelContentChangedEvent2, IPosition, IRange} from 'vs/editor/common/editorCommon';\nimport {PrefixSumComputer} from 'vs/editor/common/viewModel/prefixSumComputer';\n\nexport class MirrorModel2 {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(): string {\n\t\treturn this._lines.join(this._eol);\n\t}\n\n\tonEvents(events: IModelContentChangedEvent2[]): void {\n\t\tlet newEOL: string = null;\n\t\tfor (let i = 0, len = events.length; i < len; i++) {\n\t\t\tlet e = events[i];\n\t\t\tif (e.eol) {\n\t\t\t\tnewEOL = e.eol;\n\t\t\t}\n\t\t}\n\t\tif (newEOL && newEOL !== this._eol) {\n\t\t\tthis._eol = newEOL;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tlet lastVersionId = -1;\n\t\tfor (let i = 0, len = events.length; i < len; i++) {\n\t\t\tlet e = events[i];\n\n\t\t\tthis._acceptDeleteRange(e.range);\n\t\t\tthis._acceptInsertText({\n\t\t\t\tlineNumber: e.range.startLineNumber,\n\t\t\t\tcolumn: e.range.startColumn\n\t\t\t}, e.text);\n\t\t\tlastVersionId = Math.max(lastVersionId, e.versionId);\n\t\t}\n\t\tif (lastVersionId !== -1) {\n\t\t\tthis._versionId = lastVersionId;\n\t\t}\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst lineStartValues:number[] = [];\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tfor (let i = 0, len = this._lines.length; i < len; i++) {\n\t\t\t\tlineStartValues.push(this._lines[i].length + eolLength);\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex:number, newValue:string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: IPosition, insertText:string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tlet insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tlet newLengths:number[] = new Array<number>(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport objects = require('vs/base/common/objects');\nimport platform = require('vs/base/common/platform');\nimport types = require('vs/base/common/types');\nimport arrays = require('vs/base/common/arrays');\nimport strings = require('vs/base/common/strings');\nimport {IAction} from 'vs/base/common/actions';\nimport {IXHRResponse} from 'vs/base/common/http';\nimport Severity from 'vs/base/common/severity';\nimport { TPromise } from 'vs/base/common/winjs.base';\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function(e: any) {\n\t\t\tplatform.setTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tpublic addListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tpublic setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tpublic getUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n}\n\nexport let errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): void {\n\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n}\n\nexport function onUnexpectedPromiseError<T>(promise: TPromise<T>): TPromise<T> {\n\treturn promise.then<T>(null, onUnexpectedError);\n}\n\nexport interface IConnectionErrorData {\n\tstatus: number;\n\tstatusText?: string;\n\tresponseText?: string;\n}\n\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet {name, message} = error;\n\t\tlet stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n/**\n * The base class for all connection errors originating from XHR requests.\n */\nexport class ConnectionError implements Error {\n\tpublic status: number;\n\tpublic statusText: string;\n\tpublic responseText: string;\n\tpublic errorMessage: string;\n\tpublic errorCode: string;\n\tpublic errorObject: any;\n\tpublic name: string;\n\n\tconstructor(mixin: IConnectionErrorData);\n\tconstructor(request: IXHRResponse);\n\tconstructor(arg: any) {\n\t\tthis.status = arg.status;\n\t\tthis.statusText = arg.statusText;\n\t\tthis.name = 'ConnectionError';\n\n\t\ttry {\n\t\t\tthis.responseText = arg.responseText;\n\t\t} catch (e) {\n\t\t\tthis.responseText = '';\n\t\t}\n\n\t\tthis.errorMessage = null;\n\t\tthis.errorCode = null;\n\t\tthis.errorObject = null;\n\n\t\tif (this.responseText) {\n\t\t\ttry {\n\t\t\t\tlet errorObj = JSON.parse(this.responseText);\n\t\t\t\tthis.errorMessage = errorObj.message;\n\t\t\t\tthis.errorCode = errorObj.code;\n\t\t\t\tthis.errorObject = errorObj;\n\t\t\t} catch (error) {\n\t\t\t\t// Ignore\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get message(): string {\n\t\treturn this.connectionErrorToMessage(this, false);\n\t}\n\n\tpublic get verboseMessage(): string {\n\t\treturn this.connectionErrorToMessage(this, true);\n\t}\n\n\tprivate connectionErrorDetailsToMessage(error: ConnectionError, verbose: boolean): string {\n\t\tlet errorCode = error.errorCode;\n\t\tlet errorMessage = error.errorMessage;\n\n\t\tif (errorCode !== null && errorMessage !== null) {\n\t\t\treturn nls.localize(\n\t\t\t\t{\n\t\t\t\t\tkey: 'message',\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'{0} represents the error message',\n\t\t\t\t\t\t'{1} represents the error code'\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"{0}. Error code: {1}\",\n\t\t\t\tstrings.rtrim(errorMessage, '.'), errorCode);\n\t\t}\n\n\t\tif (errorMessage !== null) {\n\t\t\treturn errorMessage;\n\t\t}\n\n\t\tif (verbose && error.responseText !== null) {\n\t\t\treturn error.responseText;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate connectionErrorToMessage(error: ConnectionError, verbose: boolean): string {\n\t\tlet details = this.connectionErrorDetailsToMessage(error, verbose);\n\n\t\t// Status Code based Error\n\t\tif (error.status === 401) {\n\t\t\tif (details !== null) {\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'error.permission.verbose',\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t'{0} represents detailed information why the permission got denied'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"Permission Denied (HTTP {0})\",\n\t\t\t\t\tdetails);\n\t\t\t}\n\n\t\t\treturn nls.localize('error.permission', \"Permission Denied\");\n\t\t}\n\n\t\t// Return error details if present\n\t\tif (details) {\n\t\t\treturn details;\n\t\t}\n\n\t\t// Fallback to HTTP Status and Code\n\t\tif (error.status > 0 && error.statusText !== null) {\n\t\t\tif (verbose && error.responseText !== null && error.responseText.length > 0) {\n\t\t\t\treturn nls.localize('error.http.verbose', \"{0} (HTTP {1}: {2})\", error.statusText, error.status, error.responseText);\n\t\t\t}\n\n\t\t\treturn nls.localize('error.http', \"{0} (HTTP {1})\", error.statusText, error.status);\n\t\t}\n\n\t\t// Finally its an Unknown Connection Error\n\t\tif (verbose && error.responseText !== null && error.responseText.length > 0) {\n\t\t\treturn nls.localize('error.connection.unknown.verbose', \"Unknown Connection Error ({0})\", error.responseText);\n\t\t}\n\n\t\treturn nls.localize('error.connection.unknown', \"An unknown connection error occurred. Either you are no longer connected to the internet or the server you are connected to is offline.\");\n\t}\n}\n\n// Bug: Can not subclass a JS Type. Do it manually (as done in WinJS.Class.derive)\nobjects.derive(Error, ConnectionError);\n\nfunction xhrToErrorMessage(xhr: IConnectionErrorData, verbose: boolean): string {\n\tlet ce = new ConnectionError(xhr);\n\tif (verbose) {\n\t\treturn ce.verboseMessage;\n\t} else {\n\t\treturn ce.message;\n\t}\n}\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (exception.message) {\n\t\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), exception.stack || exception.stacktrace);\n\t\t}\n\n\t\treturn detectSystemErrorMessage(exception);\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occured ({0})\", exception.message);\n\t}\n\n\treturn exception.message;\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tlet errors: any[] = arrays.coalesce(error);\n\t\tlet msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (!types.isUndefinedOrNull(error.status)) {\n\t\treturn xhrToErrorMessage(error, verbose);\n\t}\n\n\tif (error.detail) {\n\t\tlet detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\tif (detail.error && !types.isUndefinedOrNull(detail.error.status)) {\n\t\t\t\treturn xhrToErrorMessage(detail.error, verbose);\n\t\t\t}\n\n\t\t\tif (types.isArray(detail.error)) {\n\t\t\t\tfor (let i = 0; i < detail.error.length; i++) {\n\t\t\t\t\tif (detail.error[i] && !types.isUndefinedOrNull(detail.error[i].status)) {\n\t\t\t\t\t\treturn xhrToErrorMessage(detail.error[i], verbose);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t\t}\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\tif (!types.isUndefinedOrNull(detail.exception.status)) {\n\t\t\t\treturn xhrToErrorMessage(detail.exception, verbose);\n\t\t\t}\n\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tlet error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\n/**\n * Returns an error that signals something is not implemented.\n */\nexport function notImplemented(): Error {\n\treturn new Error(nls.localize('notImplementedError', \"Not Implemented\"));\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(nls.localize('illegalArgumentError', \"Illegal argument: {0}\", name));\n\t} else {\n\t\treturn new Error(nls.localize('illegalArgumentError2', \"Illegal argument\"));\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(nls.localize('illegalStateError', \"Illegal state: {0}\", name));\n\t} else {\n\t\treturn new Error(nls.localize('illegalStateError2', \"Illegal state\"));\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function loaderError(err: Error): Error {\n\tif (platform.isWeb) {\n\t\treturn new Error(nls.localize('loaderError', \"Failed to load a required file. Either you are no longer connected to the internet or the server you are connected to is offline. Please refresh the browser to try again.\"));\n\t}\n\n\treturn new Error(nls.localize('loaderErrorNative', \"Failed to load a required file. Please restart the application to try again. Details: {0}\", JSON.stringify(err)));\n}\n\nexport interface IErrorOptions {\n\tseverity?: Severity;\n\tactions?: IAction[];\n}\n\nexport function create(message: string, options: IErrorOptions = {}): Error {\n\tlet result = new Error(message);\n\n\tif (types.isNumber(options.severity)) {\n\t\t(<any>result).severity = options.severity;\n\t}\n\n\tif (options.actions) {\n\t\t(<any>result).actions = options.actions;\n\t}\n\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {onUnexpectedError} from 'vs/base/common/errors';\n\nexport default class CallbackList {\n\n\tprivate _callbacks: Function[];\n\tprivate _contexts: any[];\n\n\tpublic add(callback: Function, context: any = null, bucket?: IDisposable[]): void {\n\t\tif (!this._callbacks) {\n\t\t\tthis._callbacks = [];\n\t\t\tthis._contexts = [];\n\t\t}\n\t\tthis._callbacks.push(callback);\n\t\tthis._contexts.push(context);\n\n\t\tif (Array.isArray(bucket)) {\n\t\t\tbucket.push({ dispose: () => this.remove(callback, context) });\n\t\t}\n\t}\n\n\tpublic remove(callback: Function, context: any = null): void {\n\t\tif (!this._callbacks) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet foundCallbackWithDifferentContext = false;\n\t\tfor (var i = 0, len = this._callbacks.length; i < len; i++) {\n\t\t\tif (this._callbacks[i] === callback) {\n\t\t\t\tif (this._contexts[i] === context) {\n\t\t\t\t\t// callback & context match => remove it\n\t\t\t\t\tthis._callbacks.splice(i, 1);\n\t\t\t\t\tthis._contexts.splice(i, 1);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tfoundCallbackWithDifferentContext = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (foundCallbackWithDifferentContext) {\n\t\t\tthrow new Error('When adding a listener with a context, you should remove it with the same context');\n\t\t}\n\t}\n\n\tpublic invoke(...args: any[]): any[] {\n\t\tif (!this._callbacks) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ret: any[] = [],\n\t\t\tcallbacks = this._callbacks.slice(0),\n\t\t\tcontexts = this._contexts.slice(0);\n\n\t\tfor (var i = 0, len = callbacks.length; i < len; i++) {\n\t\t\ttry {\n\t\t\t\tret.push(callbacks[i].apply(contexts[i], args));\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic isEmpty(): boolean {\n\t\treturn !this._callbacks || this._callbacks.length === 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._callbacks = undefined;\n\t\tthis._contexts = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IDisposable}  from 'vs/base/common/lifecycle';\nimport CallbackList from 'vs/base/common/callbackList';\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\nimport {TPromise} from 'vs/base/common/winjs.base';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\ninterface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n}\n\nnamespace Event {\n\tconst _disposable = { dispose() { } };\n\texport const None: Event<any> = function() { return _disposable; };\n}\n\nexport default Event;\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonLastListenerRemove?: Function;\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static _noop = function () { };\n\n\tprivate _event: Event<T>;\n\tprivate _callbacks: CallbackList;\n\tprivate _disposed: boolean;\n\n\tconstructor(private _options?: EmitterOptions) {\n\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any,  thisArgs?: any, disposables?: IDisposable[]) => {\n\t\t\t\tif (!this._callbacks) {\n\t\t\t\t\tthis._callbacks = new CallbackList();\n\t\t\t\t}\n\t\t\t\tif (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\t\t\t\tthis._callbacks.add(listener, thisArgs);\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tthis._callbacks.remove(listener, thisArgs);\n\t\t\t\t\t\t\tif(this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif(Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event?: T): any {\n\t\tif (this._callbacks) {\n\t\t\tthis._callbacks.invoke.call(this._callbacks, event);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif(this._callbacks) {\n\t\t\tthis._callbacks.dispose();\n\t\t\tthis._callbacks = undefined;\n\t\t\tthis._disposed = true;\n\t\t}\n\t}\n}\n\n/**\n * Creates an Event which is backed-up by the event emitter. This allows\n * to use the existing eventing pattern and is likely using less memory.\n * Sample:\n *\n * \tclass Document {\n *\n *\t\tprivate _eventbus = new EventEmitter();\n *\n *\t\tpublic onDidChange = fromEventEmitter(this._eventbus, 'changed');\n *\n *\t\t// getter-style\n *\t\t// get onDidChange(): Event<(value:string)=>any> {\n *\t\t// \tcache fromEventEmitter result and return\n *\t\t// }\n *\n *\t\tprivate _doIt() {\n *\t\t\t// ...\n *\t\t\tthis._eventbus.emit('changed', value)\n *\t\t}\n *\t}\n */\nexport function fromEventEmitter<T>(emitter: EventEmitter, eventType: string): Event<T> {\n\treturn function (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable {\n\t\tconst result = emitter.addListener2(eventType, function () {\n\t\t\tlistener.apply(thisArgs, arguments);\n\t\t});\n\t\tif(Array.isArray(disposables)) {\n\t\t\tdisposables.push(result);\n\t\t}\n\t\treturn result;\n\t};\n}\n\nexport function fromPromise<T>(promise: TPromise<Event<T>>): Event<T> {\n\tlet toCancel: TPromise<any> = null;\n\tlet listener: IDisposable = null;\n\n\tconst emitter = new Emitter<T>({\n\t\tonFirstListenerAdd() {\n\t\t\ttoCancel = promise.then(\n\t\t\t\tevent => listener = event(e => emitter.fire(e)),\n\t\t\t\t() => null\n\t\t\t);\n\t\t},\n\t\tonLastListenerRemove() {\n\t\t\tif (toCancel) {\n\t\t\t\ttoCancel.cancel();\n\t\t\t\ttoCancel = null;\n\t\t\t}\n\n\t\t\tif (listener) {\n\t\t\t\tlistener.dispose();\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn emitter.event;\n}\n\nexport function once<T>(event: Event<T>): Event<T> {\n\treturn (listener, thisArgs = null, disposables?) => {\n\t\tconst result = event(e => {\n\t\t\tresult.dispose();\n\t\t\treturn listener.call(thisArgs, e);\n\t\t}, null, disposables);\n\n\t\treturn result;\n\t};\n}\n\nexport function mapEvent<I,O>(event: Event<I>, map: (i:I)=>O): Event<O> {\n\treturn (listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables);\n}\n\nexport function filterEvent<T>(event: Event<T>, filter: (e:T)=>boolean): Event<T> {\n\treturn (listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables);\n}\n\nexport function debounceEvent<I, O>(event: Event<I>, merger: (last: O, event: I) => O, delay: number = 100): Event<O> {\n\n\tlet subscription: IDisposable;\n\tlet output: O;\n\tlet handle: number;\n\n\tconst emitter = new Emitter<O>({\n\t\tonFirstListenerAdd() {\n\t\t\tsubscription = event(cur => {\n\t\t\t\toutput = merger(output, cur);\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\tlet _output = output;\n\t\t\t\t\toutput = undefined;\n\t\t\t\t\temitter.fire(_output);\n\t\t\t\t}, delay);\n\t\t\t});\n\t\t},\n\t\tonLastListenerRemove() {\n\t\t\tsubscription.dispose();\n\t\t}\n\t});\n\n\treturn emitter.event;\n}\n\nenum EventDelayerState {\n\tIdle,\n\tRunning\n}\n\n/**\n * The EventDelayer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.delay(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.wrap(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, void 0, disposables);\n\t\t};\n\t}\n\n\tbufferEvents(fn: () => void): void {\n\t\tconst buffer = [];\n\t\tthis.buffers.push(buffer);\n\t\tfn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport Event, {Emitter} from 'vs/base/common/event';\n\nexport interface CancellationToken {\n\tisCancellationRequested: boolean;\n\tonCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function(callback, context?) {\n\tlet handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any>;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis._emitter = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token: CancellationToken;\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\t\t} else {\n\t\t\t(<MutableToken>this._token).cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\ndefine(__m[2], __M([37,5]), function (winjs, __Errors__) {\n\t'use strict';\n\n\tvar outstandingPromiseErrors = {};\n\tfunction promiseErrorHandler(e) {\n\n\t\t//\n\t\t// e.detail looks like: { exception, error, promise, handler, id, parent }\n\t\t//\n\t\tvar details = e.detail;\n\t\tvar id = details.id;\n\n\t\t// If the error has a parent promise then this is not the origination of the\n\t\t//  error so we check if it has a handler, and if so we mark that the error\n\t\t//  was handled by removing it from outstandingPromiseErrors\n\t\t//\n\t\tif (details.parent) {\n\t\t\tif (details.handler && outstandingPromiseErrors) {\n\t\t\t\tdelete outstandingPromiseErrors[id];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Indicate that this error was originated and needs to be handled\n\t\toutstandingPromiseErrors[id] = details;\n\n\t\t// The first time the queue fills up this iteration, schedule a timeout to\n\t\t// check if any errors are still unhandled.\n\t\tif (Object.keys(outstandingPromiseErrors).length === 1) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar errors = outstandingPromiseErrors;\n\t\t\t\toutstandingPromiseErrors = {};\n\t\t\t\tObject.keys(errors).forEach(function (errorId) {\n\t\t\t\t\tvar error = errors[errorId];\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.exception);\n\t\t\t\t\t} else if(error.error) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.error);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"WARNING: Promise with no error callback:\" + error.id);\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\tconsole.log(error.exception.stack);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\twinjs.Promise.addEventListener(\"error\", promiseErrorHandler);\n\n\treturn {\n\t\tPromise: winjs.Promise,\n\t\tTPromise: winjs.Promise,\n\t\tPPromise: winjs.Promise\n\t};\n});","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as errors from 'vs/base/common/errors';\nimport * as platform from 'vs/base/common/platform';\nimport { Promise, TPromise, ValueCallback, ErrorCallback, ProgressCallback } from 'vs/base/common/winjs.base';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nfunction isThenable<T>(obj: any): obj is Thenable<T> {\n\treturn obj && typeof (<Thenable<any>>obj).then === 'function';\n}\n\nexport function toThenable<T>(arg: T | Thenable<T>): Thenable<T> {\n\tif (isThenable(arg)) {\n\t\treturn arg;\n\t} else {\n\t\treturn TPromise.as(arg);\n\t}\n}\n\nexport function asWinJsPromise<T>(callback: (token: CancellationToken) => T | TPromise<T> | Thenable<T>): TPromise<T> {\n\tlet source = new CancellationTokenSource();\n\treturn new TPromise<T>((resolve, reject, progress) => {\n\t\tlet item = callback(source.token);\n\t\tif (TPromise.is(item)) {\n\t\t\titem.then(resolve, reject, progress);\n\t\t} else if (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t}, () => {\n\t\tsource.cancel();\n\t});\n}\n\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nexport function wireCancellationToken<T>(token: CancellationToken, promise: TPromise<T>, resolveAsUndefinedWhenCancelled?: boolean): Thenable<T> {\n\tconst subscription = token.onCancellationRequested(() => promise.cancel());\n\tif (resolveAsUndefinedWhenCancelled) {\n\t\tpromise = promise.then(undefined, err => {\n\t\t\tif (!errors.isPromiseCanceledError(err)) {\n\t\t\t\treturn TPromise.wrapError(err);\n\t\t\t}\n\t\t});\n\t}\n\treturn always(promise, () => subscription.dispose());\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tvar throttler = new Throttler();\n * \t\tvar letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise;\n\tprivate queuedPromise: Promise;\n\tprivate queuedPromiseFactory: ITask<Promise>;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<TPromise<T>>): TPromise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise((c, e, p) => {\n\t\t\t\t\tthis.activePromise.then(onComplete, onComplete, p).done(c);\n\t\t\t\t}, () => {\n\t\t\t\t\tthis.activePromise.cancel();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e, p) => {\n\t\t\t\tthis.queuedPromise.then(c, e, p);\n\t\t\t}, () => {\n\t\t\t\t// no-op\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e, p) => {\n\t\t\tthis.activePromise.done((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t}, p);\n\t\t}, () => {\n\t\t\tthis.activePromise.cancel();\n\t\t});\n\t}\n}\n\n// TODO@Joao: can the previous throttler be replaced with this?\nexport class SimpleThrottler {\n\n\tprivate current = TPromise.as(null);\n\n\tqueue<T>(promiseTask: ITask<TPromise<T>>): TPromise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so the he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tvar delayer = new Delayer(WAITING_PERIOD);\n * \t\tvar letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> {\n\n\tprivate timeout: number;\n\tprivate completionPromise: Promise;\n\tprivate onSuccess: ValueCallback;\n\tprivate task: ITask<T>;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.onSuccess = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T>, delay: number = this.defaultDelay): TPromise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c) => {\n\t\t\t\tthis.onSuccess = c;\n\t\t\t}, () => {\n\t\t\t\t// no-op\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.onSuccess = null;\n\t\t\t\tconst task = this.task;\n\t\t\t\tthis.task = null;\n\n\t\t\t\treturn task();\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tthis.onSuccess(null);\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.completionPromise.cancel();\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * Simply combine the two mail man strategies from the Throttler and Delayer\n * helpers, for an analogy.\n */\nexport class ThrottledDelayer<T> extends Delayer<TPromise<T>> {\n\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tsuper(defaultDelay);\n\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<TPromise<T>>, delay?: number): Promise {\n\t\treturn super.trigger(() => this.throttler.queue(promiseFactory), delay);\n\t}\n}\n\n/**\n * Similar to the ThrottledDelayer, except it also guarantees that the promise\n * factory doesn't get called more often than every `minimumPeriod` milliseconds.\n */\nexport class PeriodThrottledDelayer<T> extends ThrottledDelayer<T> {\n\n\tprivate minimumPeriod: number;\n\tprivate periodThrottler: Throttler;\n\n\tconstructor(defaultDelay: number, minimumPeriod: number = 0) {\n\t\tsuper(defaultDelay);\n\n\t\tthis.minimumPeriod = minimumPeriod;\n\t\tthis.periodThrottler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<TPromise<T>>, delay?: number): Promise {\n\t\treturn super.trigger(() => {\n\t\t\treturn this.periodThrottler.queue(() => {\n\t\t\t\treturn Promise.join([\n\t\t\t\t\tTPromise.timeout(this.minimumPeriod),\n\t\t\t\t\tpromiseFactory()\n\t\t\t\t]).then(r => r[1]);\n\t\t\t});\n\t\t}, delay);\n\t}\n}\n\nexport class PromiseSource<T> {\n\n\tprivate _value: TPromise<T>;\n\tprivate _completeCallback: Function;\n\tprivate _errorCallback: Function;\n\n\tconstructor() {\n\t\tthis._value = new TPromise<T>((c, e) => {\n\t\t\tthis._completeCallback = c;\n\t\t\tthis._errorCallback = e;\n\t\t});\n\t}\n\n\tget value(): TPromise<T> {\n\t\treturn this._value;\n\t}\n\n\tcomplete(value?: T): void {\n\t\tthis._completeCallback(value);\n\t}\n\n\terror(err?: any): void {\n\t\tthis._errorCallback(err);\n\t}\n}\n\nexport class ShallowCancelThenPromise<T> extends TPromise<T> {\n\n\tconstructor(outer: TPromise<T>) {\n\n\t\tlet completeCallback: ValueCallback,\n\t\t\terrorCallback: ErrorCallback,\n\t\t\tprogressCallback: ProgressCallback;\n\n\t\tsuper((c, e, p) => {\n\t\t\tcompleteCallback = c;\n\t\t\terrorCallback = e;\n\t\t\tprogressCallback = p;\n\t\t}, () => {\n\t\t\t// cancel this promise but not the\n\t\t\t// outer promise\n\t\t\terrorCallback(errors.canceled());\n\t\t});\n\n\t\touter.then(completeCallback, errorCallback, progressCallback);\n\t}\n}\n\n/**\n * Returns a new promise that joins the provided promise. Upon completion of\n * the provided promise the provided function will always be called. This\n * method is comparable to a try-finally code block.\n * @param promise a promise\n * @param f a function that will be call in the success and error case.\n */\nexport function always<T>(promise: TPromise<T>, f: Function): TPromise<T> {\n\treturn new TPromise<T>((c, e, p) => {\n\t\tpromise.done((result) => {\n\t\t\ttry {\n\t\t\t\tf(result);\n\t\t\t} catch (e1) {\n\t\t\t\terrors.onUnexpectedError(e1);\n\t\t\t}\n\t\t\tc(result);\n\t\t}, (err) => {\n\t\t\ttry {\n\t\t\t\tf(err);\n\t\t\t} catch (e1) {\n\t\t\t\terrors.onUnexpectedError(e1);\n\t\t\t}\n\t\t\te(err);\n\t\t}, (progress) => {\n\t\t\tp(progress);\n\t\t});\n\t}, () => {\n\t\tpromise.cancel();\n\t});\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\nexport function sequence<T>(promiseFactory: ITask<TPromise<T>>[]): TPromise<T[]> {\n\tconst results: T[] = [];\n\n\t// reverse since we start with last element using pop()\n\tpromiseFactory = promiseFactory.reverse();\n\n\tfunction next(): Promise {\n\t\tif (promiseFactory.length) {\n\t\t\treturn promiseFactory.pop()();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction thenHandler(result: any): Promise {\n\t\tif (result) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn TPromise.as(results);\n\t}\n\n\treturn TPromise.as(null).then(thenHandler);\n}\n\nexport function once<T extends Function>(fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function() {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}\n\ninterface ILimitedTaskFactory {\n\tfactory: ITask<Promise>;\n\tc: ValueCallback;\n\te: ErrorCallback;\n\tp: ProgressCallback;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory[];\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t}\n\n\tqueue(promiseFactory: ITask<Promise>): Promise;\n\tqueue(promiseFactory: ITask<TPromise<T>>): TPromise<T> {\n\t\treturn new TPromise<T>((c, e, p) => {\n\t\t\tthis.outstandingPromises.push({\n\t\t\t\tfactory: promiseFactory,\n\t\t\t\tc: c,\n\t\t\t\te: e,\n\t\t\t\tp: p\n\t\t\t});\n\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift();\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.done(iLimitedTask.c, iLimitedTask.e, iLimitedTask.p);\n\t\t\tpromise.done(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis.runningPromises--;\n\t\tthis.consume();\n\t}\n}\n\nexport class TimeoutTimer extends Disposable {\n\tprivate _token: platform.TimeoutToken;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tsuper.dispose();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tplatform.clearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout:number): void {\n\t\tthis.cancel();\n\t\tthis._token = platform.setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = platform.setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer extends Disposable {\n\n\tprivate _token: platform.IntervalToken;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tsuper.dispose();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tplatform.clearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval:number): void {\n\t\tthis.cancel();\n\t\tthis._token = platform.setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprivate timeoutToken: platform.TimeoutToken;\n\tprivate runner: () => void;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: () => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tplatform.clearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Replace runner. If there is a runner already scheduled, the new runner will be called.\n\t */\n\tsetRunner(runner: () => void): void {\n\t\tthis.runner = runner;\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = platform.setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport function nfcall(fn: Function, ...args: any[]): Promise;\nexport function nfcall<T>(fn: Function, ...args: any[]): TPromise<T>;\nexport function nfcall(fn: Function, ...args: any[]): any {\n\treturn new Promise((c, e) => fn(...args, (err, result) => err ? e(err) : c(result)));\n}\n\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): Promise;\nexport function ninvoke<T>(thisArg: any, fn: Function, ...args: any[]): TPromise<T>;\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): any {\n\treturn new Promise((c, e) => fn.call(thisArg, ...args, (err, result) => err ? e(err) : c(result)));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {transformErrorForSerialization} from 'vs/base/common/errors';\nimport {Disposable} from 'vs/base/common/lifecycle';\nimport {ErrorCallback, TPromise, ValueCallback} from 'vs/base/common/winjs.base';\nimport {IWorker, IWorkerFactory} from './workerClient';\nimport {ShallowCancelThenPromise} from 'vs/base/common/async';\n\nconst INITIALIZE = '$initialize';\n\ninterface IMessage {\n\tvsWorker: number;\n\treq?: string;\n\tseq?: string;\n}\n\ninterface IRequestMessage extends IMessage {\n\treq: string;\n\tmethod: string;\n\targs: any[];\n}\n\ninterface IReplyMessage extends IMessage {\n\tseq: string;\n\terr: any;\n\tres: any;\n}\n\ninterface IMessageReply {\n\tc: ValueCallback;\n\te: ErrorCallback;\n}\n\ninterface IMessageHandler {\n\tsendMessage(msg:string): void;\n\thandleMessage(method:string, args:any[]): TPromise<any>;\n}\n\nclass SimpleWorkerProtocol {\n\n\tprivate _workerId: number;\n\tprivate _lastSentReq: number;\n\tprivate _pendingReplies: { [req:string]:IMessageReply; };\n\tprivate _handler:IMessageHandler;\n\n\tconstructor(handler:IMessageHandler) {\n\t\tthis._workerId = -1;\n\t\tthis._handler = handler;\n\t\tthis._lastSentReq = 0;\n\t\tthis._pendingReplies = Object.create(null);\n\t}\n\n\tpublic setWorkerId(workerId:number): void {\n\t\tthis._workerId = workerId;\n\t}\n\n\tpublic sendMessage(method:string, args:any[]): TPromise<any> {\n\t\tlet req = String(++this._lastSentReq);\n\t\tlet reply: IMessageReply = {\n\t\t\tc: null,\n\t\t\te: null\n\t\t};\n\t\tlet result = new TPromise<any>((c, e, p) => {\n\t\t\treply.c = c;\n\t\t\treply.e = e;\n\t\t}, () => {\n\t\t\t// Cancel not supported\n\t\t});\n\t\tthis._pendingReplies[req] = reply;\n\n\t\tthis._send({\n\t\t\tvsWorker: this._workerId,\n\t\t\treq: req,\n\t\t\tmethod: method,\n\t\t\targs: args\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tpublic handleMessage(serializedMessage:string): void {\n\t\tlet message:IMessage;\n\t\ttry {\n\t\t\tmessage = JSON.parse(serializedMessage);\n\t\t} catch(e) {\n\t\t\t// nothing\n\t\t}\n\t\tif (!message.vsWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._handleMessage(message);\n\t}\n\n\tprivate _handleMessage(msg:IMessage): void {\n\t\tif (msg.seq) {\n\t\t\tlet replyMessage = <IReplyMessage>msg;\n\t\t\tif (!this._pendingReplies[replyMessage.seq]) {\n\t\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet reply = this._pendingReplies[replyMessage.seq];\n\t\t\tdelete this._pendingReplies[replyMessage.seq];\n\n\t\t\tif (replyMessage.err) {\n\t\t\t\tlet err = replyMessage.err;\n\t\t\t\tif (replyMessage.err.$isError) {\n\t\t\t\t\terr = new Error();\n\t\t\t\t\terr.name = replyMessage.err.name;\n\t\t\t\t\terr.message = replyMessage.err.message;\n\t\t\t\t\terr.stack = replyMessage.err.stack;\n\t\t\t\t}\n\t\t\t\treply.e(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treply.c(replyMessage.res);\n\t\t\treturn;\n\t\t}\n\n\t\tlet requestMessage = <IRequestMessage>msg;\n\t\tlet req = requestMessage.req;\n\t\tlet result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\t\tresult.then((r) => {\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: r,\n\t\t\t\terr: undefined\n\t\t\t});\n\t\t}, (e) => {\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: undefined,\n\t\t\t\terr: transformErrorForSerialization(e)\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _send(msg:IRequestMessage|IReplyMessage): void {\n\t\tlet strMsg = JSON.stringify(msg);\n\t\t// console.log('SENDING: ' + strMsg);\n\t\tthis._handler.sendMessage(strMsg);\n\t}\n}\n\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient<T> extends Disposable {\n\n\tprivate _worker:IWorker;\n\tprivate _onModuleLoaded:TPromise<string[]>;\n\tprivate _protocol: SimpleWorkerProtocol;\n\tprivate _lazyProxy: TPromise<T>;\n\tprivate _lastRequestTimestamp = -1;\n\n\tconstructor(workerFactory:IWorkerFactory, moduleId:string) {\n\t\tsuper();\n\n\t\tlet lazyProxyFulfill : (v:T)=>void = null;\n\t\tlet lazyProxyReject: (err:any)=>void = null;\n\n\t\tthis._worker = this._register(workerFactory.create(\n\t\t\t'vs/base/common/worker/simpleWorker',\n\t\t\t(msg:string) => {\n\t\t\t\tthis._protocol.handleMessage(msg);\n\t\t\t},\n\t\t\t(err:any) => {\n\t\t\t\t// in Firefox, web workers fail lazily :(\n\t\t\t\t// we will reject the proxy\n\t\t\t\tlazyProxyReject(err);\n\t\t\t}\n\t\t));\n\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg:string): void => {\n\t\t\t\tthis._worker.postMessage(msg);\n\t\t\t},\n\t\t\thandleMessage: (method:string, args:any[]): TPromise<any> => {\n\t\t\t\t// Intentionally not supporting worker -> main requests\n\t\t\t\treturn TPromise.as(null);\n\t\t\t}\n\t\t});\n\t\tthis._protocol.setWorkerId(this._worker.getId());\n\n\t\t// Gather loader configuration\n\t\tlet loaderConfiguration:any = null;\n\t\tlet globalRequire = (<any>window).require;\n\t\tif (typeof globalRequire.getConfig === 'function') {\n\t\t\t// Get the configuration from the Monaco AMD Loader\n\t\t\tloaderConfiguration = globalRequire.getConfig();\n\t\t} else if (typeof (<any>window).requirejs !== 'undefined') {\n\t\t\t// Get the configuration from requirejs\n\t\t\tloaderConfiguration = (<any>window).requirejs.s.contexts._.config;\n\t\t}\n\n\t\tthis._lazyProxy = new TPromise((c, e, p) => {\n\t\t\tlazyProxyFulfill = c;\n\t\t\tlazyProxyReject = e;\n\t\t}, () => { /* no cancel */ });\n\n\t\t// Send initialize message\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n\t\t\tthis._worker.getId(),\n\t\t\tmoduleId,\n\t\t\tloaderConfiguration\n\t\t]);\n\t\tthis._onModuleLoaded.then((availableMethods:string[]) => {\n\t\t\tlet proxy = <T><any>{};\n\t\t\tfor (let i = 0; i < availableMethods.length; i++) {\n\t\t\t\tproxy[availableMethods[i]] = createProxyMethod(availableMethods[i], proxyMethodRequest);\n\t\t\t}\n\t\t\tlazyProxyFulfill(proxy);\n\t\t}, (e) => {\n\t\t\tlazyProxyReject(e);\n\t\t\tthis._onError('Worker failed to load ' + moduleId, e);\n\t\t});\n\n\t\t// Create proxy to loaded code\n\t\tlet proxyMethodRequest = (method:string, args:any[]):TPromise<any> => {\n\t\t\treturn this._request(method, args);\n\t\t};\n\n\t\tlet createProxyMethod = (method:string, proxyMethodRequest:(method:string, args:any[])=>TPromise<any>): Function => {\n\t\t\treturn function () {\n\t\t\t\tlet args = Array.prototype.slice.call(arguments, 0);\n\t\t\t\treturn proxyMethodRequest(method, args);\n\t\t\t};\n\t\t};\n\t}\n\n\tpublic getProxyObject(): TPromise<T> {\n\t\t// Do not allow chaining promises to cancel the proxy creation\n\t\treturn new ShallowCancelThenPromise(this._lazyProxy);\n\t}\n\n\tpublic getLastRequestTimestamp(): number {\n\t\treturn this._lastRequestTimestamp;\n\t}\n\n\tprivate _request(method:string, args:any[]): TPromise<any> {\n\t\treturn new TPromise<any>((c, e, p) => {\n\t\t\tthis._onModuleLoaded.then(() => {\n\t\t\t\tthis._lastRequestTimestamp = Date.now();\n\t\t\t\tthis._protocol.sendMessage(method, args).then(c, e);\n\t\t\t}, e);\n\t\t}, () => {\n\t\t\t// Cancel intentionally not supported\n\t\t});\n\t}\n\n\tprivate _onError(message:string, error?:any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n\nexport interface IRequestHandler {\n\t_requestHandlerTrait: any;\n}\n\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n\n\tprivate _protocol: SimpleWorkerProtocol;\n\tprivate _requestHandler: IRequestHandler;\n\n\tconstructor(postSerializedMessage:(msg:string)=>void) {\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg:string): void => {\n\t\t\t\tpostSerializedMessage(msg);\n\t\t\t},\n\t\t\thandleMessage: (method:string, args:any[]): TPromise<any> => this._handleMessage(method, args)\n\t\t});\n\t}\n\n\tpublic onmessage(msg:string): void {\n\t\tthis._protocol.handleMessage(msg);\n\t}\n\n\tprivate _handleMessage(method: string, args:any[]): TPromise<any> {\n\t\tif (method === INITIALIZE) {\n\t\t\treturn this.initialize(<number>args[0], <string>args[1], <any>args[2]);\n\t\t}\n\n\t\tif (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n\t\t\treturn TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn TPromise.as(this._requestHandler[method].apply(this._requestHandler, args));\n\t\t} catch (e) {\n\t\t\treturn TPromise.wrapError(e);\n\t\t}\n\t}\n\n\tprivate initialize(workerId: number, moduleId: string, loaderConfig:any): TPromise<any> {\n\t\tthis._protocol.setWorkerId(workerId);\n\n\t\t// TODO@Alex: share this code with workerServer\n\t\tif (loaderConfig) {\n\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t}\n\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet nlsConfig = loaderConfig['vs/nls'];\n\t\t\t// We need to have pseudo translation\n\t\t\tif (nlsConfig && nlsConfig.pseudo) {\n\t\t\t\trequire(['vs/nls'], function(nlsPlugin) {\n\t\t\t\t\tnlsPlugin.setPseudoTranslation(nlsConfig.pseudo);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\tloaderConfig.catchError = true;\n\t\t\t(<any>self).require.config(loaderConfig);\n\t\t}\n\n\t\tlet cc: ValueCallback;\n\t\tlet ee: ErrorCallback;\n\t\tlet r = new TPromise<any>((c, e, p) => {\n\t\t\tcc = c;\n\t\t\tee = e;\n\t\t});\n\n\t\t// Use the global require to be sure to get the global config\n\t\t(<any>self).require([moduleId], (...result:any[]) => {\n\t\t\tlet handlerModule = result[0];\n\t\t\tthis._requestHandler = handlerModule.create();\n\n\t\t\tlet methods: string[] = [];\n\t\t\tfor (let prop in this._requestHandler) {\n\t\t\t\tif (typeof this._requestHandler[prop] === 'function') {\n\t\t\t\t\tmethods.push(prop);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcc(methods);\n\t\t}, ee);\n\n\t\treturn r;\n\t}\n}\n\n/**\n * Called on the worker side\n */\nexport function create(postMessage:(msg:string)=>void): SimpleWorkerServer {\n\treturn new SimpleWorkerServer(postMessage);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport * as defaultPlatform from 'vs/base/common/platform';\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\n\nexport interface ISimplifiedPlatform {\n\tisMacintosh: boolean;\n\tisWindows: boolean;\n}\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown,\n\n\tBackspace,\n\tTab,\n\tEnter,\n\tShift,\n\tCtrl,\n\tAlt,\n\tPauseBreak,\n\tCapsLock,\n\tEscape,\n\tSpace,\n\tPageUp,\n\tPageDown,\n\tEnd,\n\tHome,\n\tLeftArrow,\n\tUpArrow,\n\tRightArrow,\n\tDownArrow,\n\tInsert,\n\tDelete,\n\n\tKEY_0,\n\tKEY_1,\n\tKEY_2,\n\tKEY_3,\n\tKEY_4,\n\tKEY_5,\n\tKEY_6,\n\tKEY_7,\n\tKEY_8,\n\tKEY_9,\n\n\tKEY_A,\n\tKEY_B,\n\tKEY_C,\n\tKEY_D,\n\tKEY_E,\n\tKEY_F,\n\tKEY_G,\n\tKEY_H,\n\tKEY_I,\n\tKEY_J,\n\tKEY_K,\n\tKEY_L,\n\tKEY_M,\n\tKEY_N,\n\tKEY_O,\n\tKEY_P,\n\tKEY_Q,\n\tKEY_R,\n\tKEY_S,\n\tKEY_T,\n\tKEY_U,\n\tKEY_V,\n\tKEY_W,\n\tKEY_X,\n\tKEY_Y,\n\tKEY_Z,\n\n\tMeta,\n\tContextMenu,\n\n\tF1,\n\tF2,\n\tF3,\n\tF4,\n\tF5,\n\tF6,\n\tF7,\n\tF8,\n\tF9,\n\tF10,\n\tF11,\n\tF12,\n\tF13,\n\tF14,\n\tF15,\n\tF16,\n\tF17,\n\tF18,\n\tF19,\n\n\tNumLock,\n\tScrollLock,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102,\n\n\tNUMPAD_0, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNUMPAD_1, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNUMPAD_2, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNUMPAD_3, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNUMPAD_4, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNUMPAD_5, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNUMPAD_6, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNUMPAD_7, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNUMPAD_8, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNUMPAD_9, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNUMPAD_MULTIPLY,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNUMPAD_ADD,\t\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNUMPAD_SUBTRACT,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNUMPAD_DECIMAL,\t\t// VK_DECIMAL, 0x6E, Decimal key\n\tNUMPAD_DIVIDE,\t\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t */\n\tMAX_VALUE\n}\n\ninterface IReverseMap {\n\t[str:string]:KeyCode;\n}\n\nclass Mapping {\n\n\t_fromKeyCode: string[];\n\t_toKeyCode: IReverseMap;\n\n\tconstructor(fromKeyCode: string[], toKeyCode: IReverseMap) {\n\t\tthis._fromKeyCode = fromKeyCode;\n\t\tthis._toKeyCode = toKeyCode;\n\t}\n\n\tfromKeyCode(keyCode:KeyCode): string {\n\t\treturn this._fromKeyCode[keyCode];\n\t}\n\n\ttoKeyCode(str:string): KeyCode {\n\t\tif (this._toKeyCode.hasOwnProperty(str)) {\n\t\t\treturn this._toKeyCode[str];\n\t\t}\n\t\treturn KeyCode.Unknown;\n\t}\n\n}\n\nfunction createMapping(fill1:(map:string[])=>void, fill2:(reverseMap:IReverseMap)=>void): Mapping {\n\tlet MAP: string[] = [];\n\tfill1(MAP);\n\n\tlet REVERSE_MAP: IReverseMap = {};\n\tfor (let i = 0, len = MAP.length; i < len; i++) {\n\t\tif (!MAP[i]) {\n\t\t\tcontinue;\n\t\t}\n\t\tREVERSE_MAP[MAP[i]] = i;\n\t}\n\tfill2(REVERSE_MAP);\n\n\tlet FINAL_REVERSE_MAP: IReverseMap = {};\n\tfor (let entry in REVERSE_MAP) {\n\t\tif (REVERSE_MAP.hasOwnProperty(entry)) {\n\t\t\tFINAL_REVERSE_MAP[entry] = REVERSE_MAP[entry];\n\t\t\tFINAL_REVERSE_MAP[entry.toLowerCase()] = REVERSE_MAP[entry];\n\t\t}\n\t}\n\n\treturn new Mapping(MAP, FINAL_REVERSE_MAP);\n}\n\nlet STRING = createMapping((TO_STRING_MAP) => {\n\tTO_STRING_MAP[KeyCode.Unknown] \t\t= 'unknown';\n\n\tTO_STRING_MAP[KeyCode.Backspace] \t= 'Backspace';\n\tTO_STRING_MAP[KeyCode.Tab] \t\t\t= 'Tab';\n\tTO_STRING_MAP[KeyCode.Enter] \t\t= 'Enter';\n\tTO_STRING_MAP[KeyCode.Shift] \t\t= 'Shift';\n\tTO_STRING_MAP[KeyCode.Ctrl] \t\t= 'Ctrl';\n\tTO_STRING_MAP[KeyCode.Alt] \t\t\t= 'Alt';\n\tTO_STRING_MAP[KeyCode.PauseBreak] \t= 'PauseBreak';\n\tTO_STRING_MAP[KeyCode.CapsLock] \t= 'CapsLock';\n\tTO_STRING_MAP[KeyCode.Escape] \t\t= 'Escape';\n\tTO_STRING_MAP[KeyCode.Space] \t\t= 'Space';\n\tTO_STRING_MAP[KeyCode.PageUp] \t\t= 'PageUp';\n\tTO_STRING_MAP[KeyCode.PageDown] \t= 'PageDown';\n\tTO_STRING_MAP[KeyCode.End] \t\t\t= 'End';\n\tTO_STRING_MAP[KeyCode.Home] \t\t= 'Home';\n\tTO_STRING_MAP[KeyCode.LeftArrow] \t= 'LeftArrow';\n\tTO_STRING_MAP[KeyCode.UpArrow] \t\t= 'UpArrow';\n\tTO_STRING_MAP[KeyCode.RightArrow] \t= 'RightArrow';\n\tTO_STRING_MAP[KeyCode.DownArrow] \t= 'DownArrow';\n\tTO_STRING_MAP[KeyCode.Insert] \t\t= 'Insert';\n\tTO_STRING_MAP[KeyCode.Delete] \t\t= 'Delete';\n\n\tTO_STRING_MAP[KeyCode.KEY_0] = '0';\n\tTO_STRING_MAP[KeyCode.KEY_1] = '1';\n\tTO_STRING_MAP[KeyCode.KEY_2] = '2';\n\tTO_STRING_MAP[KeyCode.KEY_3] = '3';\n\tTO_STRING_MAP[KeyCode.KEY_4] = '4';\n\tTO_STRING_MAP[KeyCode.KEY_5] = '5';\n\tTO_STRING_MAP[KeyCode.KEY_6] = '6';\n\tTO_STRING_MAP[KeyCode.KEY_7] = '7';\n\tTO_STRING_MAP[KeyCode.KEY_8] = '8';\n\tTO_STRING_MAP[KeyCode.KEY_9] = '9';\n\n\tTO_STRING_MAP[KeyCode.KEY_A] = 'A';\n\tTO_STRING_MAP[KeyCode.KEY_B] = 'B';\n\tTO_STRING_MAP[KeyCode.KEY_C] = 'C';\n\tTO_STRING_MAP[KeyCode.KEY_D] = 'D';\n\tTO_STRING_MAP[KeyCode.KEY_E] = 'E';\n\tTO_STRING_MAP[KeyCode.KEY_F] = 'F';\n\tTO_STRING_MAP[KeyCode.KEY_G] = 'G';\n\tTO_STRING_MAP[KeyCode.KEY_H] = 'H';\n\tTO_STRING_MAP[KeyCode.KEY_I] = 'I';\n\tTO_STRING_MAP[KeyCode.KEY_J] = 'J';\n\tTO_STRING_MAP[KeyCode.KEY_K] = 'K';\n\tTO_STRING_MAP[KeyCode.KEY_L] = 'L';\n\tTO_STRING_MAP[KeyCode.KEY_M] = 'M';\n\tTO_STRING_MAP[KeyCode.KEY_N] = 'N';\n\tTO_STRING_MAP[KeyCode.KEY_O] = 'O';\n\tTO_STRING_MAP[KeyCode.KEY_P] = 'P';\n\tTO_STRING_MAP[KeyCode.KEY_Q] = 'Q';\n\tTO_STRING_MAP[KeyCode.KEY_R] = 'R';\n\tTO_STRING_MAP[KeyCode.KEY_S] = 'S';\n\tTO_STRING_MAP[KeyCode.KEY_T] = 'T';\n\tTO_STRING_MAP[KeyCode.KEY_U] = 'U';\n\tTO_STRING_MAP[KeyCode.KEY_V] = 'V';\n\tTO_STRING_MAP[KeyCode.KEY_W] = 'W';\n\tTO_STRING_MAP[KeyCode.KEY_X] = 'X';\n\tTO_STRING_MAP[KeyCode.KEY_Y] = 'Y';\n\tTO_STRING_MAP[KeyCode.KEY_Z] = 'Z';\n\n\tTO_STRING_MAP[KeyCode.ContextMenu] = 'ContextMenu';\n\n\tTO_STRING_MAP[KeyCode.F1] = 'F1';\n\tTO_STRING_MAP[KeyCode.F2] = 'F2';\n\tTO_STRING_MAP[KeyCode.F3] = 'F3';\n\tTO_STRING_MAP[KeyCode.F4] = 'F4';\n\tTO_STRING_MAP[KeyCode.F5] = 'F5';\n\tTO_STRING_MAP[KeyCode.F6] = 'F6';\n\tTO_STRING_MAP[KeyCode.F7] = 'F7';\n\tTO_STRING_MAP[KeyCode.F8] = 'F8';\n\tTO_STRING_MAP[KeyCode.F9] = 'F9';\n\tTO_STRING_MAP[KeyCode.F10] = 'F10';\n\tTO_STRING_MAP[KeyCode.F11] = 'F11';\n\tTO_STRING_MAP[KeyCode.F12] = 'F12';\n\tTO_STRING_MAP[KeyCode.F13] = 'F13';\n\tTO_STRING_MAP[KeyCode.F14] = 'F14';\n\tTO_STRING_MAP[KeyCode.F15] = 'F15';\n\tTO_STRING_MAP[KeyCode.F16] = 'F16';\n\tTO_STRING_MAP[KeyCode.F17] = 'F17';\n\tTO_STRING_MAP[KeyCode.F18] = 'F18';\n\tTO_STRING_MAP[KeyCode.F19] = 'F19';\n\n\n\tTO_STRING_MAP[KeyCode.NumLock] \t\t= 'NumLock';\n\tTO_STRING_MAP[KeyCode.ScrollLock] \t= 'ScrollLock';\n\n\tTO_STRING_MAP[KeyCode.US_SEMICOLON] \t\t\t= ';';\n\tTO_STRING_MAP[KeyCode.US_EQUAL] \t\t\t\t= '=';\n\tTO_STRING_MAP[KeyCode.US_COMMA] \t\t\t\t= ',';\n\tTO_STRING_MAP[KeyCode.US_MINUS] \t\t\t\t= '-';\n\tTO_STRING_MAP[KeyCode.US_DOT] \t\t\t\t\t= '.';\n\tTO_STRING_MAP[KeyCode.US_SLASH] \t\t\t\t= '/';\n\tTO_STRING_MAP[KeyCode.US_BACKTICK] \t\t\t\t= '`';\n\tTO_STRING_MAP[KeyCode.US_OPEN_SQUARE_BRACKET] \t= '[';\n\tTO_STRING_MAP[KeyCode.US_BACKSLASH] \t\t\t= '\\\\';\n\tTO_STRING_MAP[KeyCode.US_CLOSE_SQUARE_BRACKET] \t= ']';\n\tTO_STRING_MAP[KeyCode.US_QUOTE]\t\t\t\t\t= '\\'';\n\tTO_STRING_MAP[KeyCode.OEM_8]\t\t\t\t\t= 'OEM_8';\n\tTO_STRING_MAP[KeyCode.OEM_102]\t\t\t\t\t= 'OEM_102';\n\n\tTO_STRING_MAP[KeyCode.NUMPAD_0] = 'NumPad0';\n\tTO_STRING_MAP[KeyCode.NUMPAD_1] = 'NumPad1';\n\tTO_STRING_MAP[KeyCode.NUMPAD_2] = 'NumPad2';\n\tTO_STRING_MAP[KeyCode.NUMPAD_3] = 'NumPad3';\n\tTO_STRING_MAP[KeyCode.NUMPAD_4] = 'NumPad4';\n\tTO_STRING_MAP[KeyCode.NUMPAD_5] = 'NumPad5';\n\tTO_STRING_MAP[KeyCode.NUMPAD_6] = 'NumPad6';\n\tTO_STRING_MAP[KeyCode.NUMPAD_7] = 'NumPad7';\n\tTO_STRING_MAP[KeyCode.NUMPAD_8] = 'NumPad8';\n\tTO_STRING_MAP[KeyCode.NUMPAD_9] = 'NumPad9';\n\n\tTO_STRING_MAP[KeyCode.NUMPAD_MULTIPLY] = 'NumPad_Multiply';\n\tTO_STRING_MAP[KeyCode.NUMPAD_ADD] = 'NumPad_Add';\n\tTO_STRING_MAP[KeyCode.NUMPAD_SEPARATOR] = 'NumPad_Separator';\n\tTO_STRING_MAP[KeyCode.NUMPAD_SUBTRACT] = 'NumPad_Subtract';\n\tTO_STRING_MAP[KeyCode.NUMPAD_DECIMAL] = 'NumPad_Decimal';\n\tTO_STRING_MAP[KeyCode.NUMPAD_DIVIDE] = 'NumPad_Divide';\n\n\t// for (let i = 0; i < KeyCode.MAX_VALUE; i++) {\n\t// \tif (!TO_STRING_MAP[i]) {\n\t// \t\tconsole.warn('Missing string representation for ' + KeyCode[i]);\n\t// \t}\n\t// }\n}, (FROM_STRING_MAP) => {\n\tFROM_STRING_MAP['\\r'] = KeyCode.Enter;\n});\n\n\nlet USER_SETTINGS = createMapping((TO_USER_SETTINGS_MAP) => {\n\tfor (let i = 0, len = STRING._fromKeyCode.length; i < len; i++) {\n\t\tTO_USER_SETTINGS_MAP[i] = STRING._fromKeyCode[i];\n\t}\n\tTO_USER_SETTINGS_MAP[KeyCode.LeftArrow] = 'Left';\n\tTO_USER_SETTINGS_MAP[KeyCode.UpArrow] = 'Up';\n\tTO_USER_SETTINGS_MAP[KeyCode.RightArrow] = 'Right';\n\tTO_USER_SETTINGS_MAP[KeyCode.DownArrow] = 'Down';\n}, (FROM_USER_SETTINGS_MAP) => {\n\tFROM_USER_SETTINGS_MAP['OEM_1'] = KeyCode.US_SEMICOLON;\n\tFROM_USER_SETTINGS_MAP['OEM_PLUS'] = KeyCode.US_EQUAL;\n\tFROM_USER_SETTINGS_MAP['OEM_COMMA'] = KeyCode.US_COMMA;\n\tFROM_USER_SETTINGS_MAP['OEM_MINUS'] = KeyCode.US_MINUS;\n\tFROM_USER_SETTINGS_MAP['OEM_PERIOD'] = KeyCode.US_DOT;\n\tFROM_USER_SETTINGS_MAP['OEM_2'] = KeyCode.US_SLASH;\n\tFROM_USER_SETTINGS_MAP['OEM_3'] = KeyCode.US_BACKTICK;\n\tFROM_USER_SETTINGS_MAP['OEM_4'] = KeyCode.US_OPEN_SQUARE_BRACKET;\n\tFROM_USER_SETTINGS_MAP['OEM_5'] = KeyCode.US_BACKSLASH;\n\tFROM_USER_SETTINGS_MAP['OEM_6'] = KeyCode.US_CLOSE_SQUARE_BRACKET;\n\tFROM_USER_SETTINGS_MAP['OEM_7'] = KeyCode.US_QUOTE;\n\tFROM_USER_SETTINGS_MAP['OEM_8'] = KeyCode.OEM_8;\n\tFROM_USER_SETTINGS_MAP['OEM_102'] = KeyCode.OEM_102;\n});\n\nexport namespace KeyCode {\n\texport function toString(key:KeyCode): string {\n\t\treturn STRING.fromKeyCode(key);\n\t}\n\texport function fromString(key:string): KeyCode {\n\t\treturn STRING.toKeyCode(key);\n\t}\n}\n\n// Binary encoding strategy:\n// 15:  1 bit for ctrlCmd\n// 14:  1 bit for shift\n// 13:  1 bit for alt\n// 12:  1 bit for winCtrl\n//  0: 12 bits for keyCode (up to a maximum keyCode of 4096. Given we have 83 at this point thats good enough)\n\nconst BIN_CTRLCMD_MASK = 1 << 15;\nconst BIN_SHIFT_MASK = 1 << 14;\nconst BIN_ALT_MASK = 1 << 13;\nconst BIN_WINCTRL_MASK = 1 << 12;\nconst BIN_KEYCODE_MASK = 0x00000fff;\n\nexport class BinaryKeybindings {\n\n\tpublic static extractFirstPart(keybinding:number): number {\n\t\treturn keybinding & 0x0000ffff;\n\t}\n\n\tpublic static extractChordPart(keybinding:number): number {\n\t\treturn (keybinding >> 16) & 0x0000ffff;\n\t}\n\n\tpublic static hasChord(keybinding:number): boolean {\n\t\treturn (this.extractChordPart(keybinding) !== 0);\n\t}\n\n\tpublic static hasCtrlCmd(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_CTRLCMD_MASK ? true : false);\n\t}\n\n\tpublic static hasShift(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_SHIFT_MASK ? true : false);\n\t}\n\n\tpublic static hasAlt(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_ALT_MASK ? true : false);\n\t}\n\n\tpublic static hasWinCtrl(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_WINCTRL_MASK ? true : false);\n\t}\n\n\tpublic static extractKeyCode(keybinding:number): KeyCode {\n\t\treturn (keybinding & BIN_KEYCODE_MASK);\n\t}\n}\n\n\n\nexport class KeyMod {\n\tpublic static CtrlCmd = BIN_CTRLCMD_MASK;\n\tpublic static Shift = BIN_SHIFT_MASK;\n\tpublic static Alt = BIN_ALT_MASK;\n\tpublic static WinCtrl = BIN_WINCTRL_MASK;\n\n\tpublic static chord(firstPart:number, secondPart:number): number {\n\t\treturn firstPart | ((secondPart & 0x0000ffff) << 16);\n\t}\n}\n\n/**\n * A set of usual keybindings that can be reused in code\n */\nexport class CommonKeybindings {\n\n\tpublic static ENTER: number = KeyCode.Enter;\n\tpublic static SHIFT_ENTER: number = KeyMod.Shift | KeyCode.Enter;\n\tpublic static CTRLCMD_ENTER: number = KeyMod.CtrlCmd | KeyCode.Enter;\n\tpublic static WINCTRL_ENTER: number = KeyMod.WinCtrl | KeyCode.Enter;\n\n\tpublic static TAB: number = KeyCode.Tab;\n\tpublic static SHIFT_TAB: number = KeyMod.Shift | KeyCode.Tab;\n\tpublic static ESCAPE: number = KeyCode.Escape;\n\tpublic static SPACE: number = KeyCode.Space;\n\tpublic static DELETE: number = KeyCode.Delete;\n\tpublic static SHIFT_DELETE: number = KeyMod.Shift | KeyCode.Delete;\n\tpublic static CTRLCMD_BACKSPACE: number = KeyMod.CtrlCmd | KeyCode.Backspace;\n\n\tpublic static UP_ARROW: number = KeyCode.UpArrow;\n\tpublic static SHIFT_UP_ARROW: number = KeyMod.Shift | KeyCode.UpArrow;\n\tpublic static CTRLCMD_UP_ARROW: number = KeyMod.CtrlCmd | KeyCode.UpArrow;\n\n\tpublic static DOWN_ARROW: number = KeyCode.DownArrow;\n\tpublic static SHIFT_DOWN_ARROW: number = KeyMod.Shift | KeyCode.DownArrow;\n\tpublic static CTRLCMD_DOWN_ARROW: number = KeyMod.CtrlCmd | KeyCode.DownArrow;\n\n\tpublic static LEFT_ARROW: number = KeyCode.LeftArrow;\n\n\tpublic static RIGHT_ARROW: number = KeyCode.RightArrow;\n\n\tpublic static HOME: number = KeyCode.Home;\n\tpublic static END: number = KeyCode.End;\n\n\tpublic static PAGE_UP: number = KeyCode.PageUp;\n\tpublic static SHIFT_PAGE_UP: number = KeyMod.Shift | KeyCode.PageUp;\n\n\tpublic static PAGE_DOWN: number = KeyCode.PageDown;\n\tpublic static SHIFT_PAGE_DOWN: number = KeyMod.Shift | KeyCode.PageDown;\n\n\tpublic static F2: number = KeyCode.F2;\n\n\tpublic static CTRLCMD_S: number = KeyMod.CtrlCmd | KeyCode.KEY_S;\n\tpublic static CTRLCMD_C: number = KeyMod.CtrlCmd | KeyCode.KEY_C;\n\tpublic static CTRLCMD_V: number = KeyMod.CtrlCmd | KeyCode.KEY_V;\n}\n\nexport class Keybinding {\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toUSLabel(value:number, Platform:ISimplifiedPlatform): string {\n\t\treturn _asString(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE), Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for placing in an aria-label.\n\t */\n\tprivate static _toUSAriaLabel(value:number, Platform:ISimplifiedPlatform): string {\n\t\treturn _asString(value, AriaKeyLabelProvider.INSTANCE, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toUSHTMLLabel(value:number, Platform:ISimplifiedPlatform): IHTMLContentElement[] {\n\t\treturn _asHTML(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE), Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toCustomLabel(value:number, labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform): string {\n\t\treturn _asString(value, labelProvider, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toCustomHTMLLabel(value:number, labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform): IHTMLContentElement[] {\n\t\treturn _asHTML(value, labelProvider, Platform);\n\t}\n\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n\t */\n\tprivate static _toElectronAccelerator(value:number, Platform:ISimplifiedPlatform): string {\n\t\tif (BinaryKeybindings.hasChord(value)) {\n\t\t\t// Electron cannot handle chords\n\t\t\treturn null;\n\t\t}\n\t\treturn _asString(value, ElectronAcceleratorLabelProvider.INSTANCE, Platform);\n\t}\n\n\tprivate static _cachedKeybindingRegex: string = null;\n\tpublic static getUserSettingsKeybindingRegex(): string {\n\t\tif (!this._cachedKeybindingRegex) {\n\t\t\tlet numpadKey = 'numpad(0|1|2|3|4|5|6|7|8|9|_multiply|_add|_subtract|_decimal|_divide|_separator)';\n\t\t\tlet oemKey = '`|\\\\-|=|\\\\[|\\\\]|\\\\\\\\\\\\\\\\|;|\\'|,|\\\\.|\\\\/|oem_8|oem_102';\n\t\t\tlet specialKey = 'left|up|right|down|pageup|pagedown|end|home|tab|enter|escape|space|backspace|delete|pausebreak|capslock|insert|contextmenu|numlock|scrolllock';\n\t\t\tlet casualKey = '[a-z]|[0-9]|f(1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19)';\n\t\t\tlet key = '((' + [numpadKey, oemKey, specialKey, casualKey].join(')|(') + '))';\n\t\t\tlet mod = '((ctrl|shift|alt|cmd|win|meta)\\\\+)*';\n\t\t\tlet keybinding = '(' + mod + key + ')';\n\n\t\t\tthis._cachedKeybindingRegex = '\"\\\\s*(' + keybinding + '(\\\\s+' + keybinding +')?' + ')\\\\s*\"';\n\t\t}\n\t\treturn this._cachedKeybindingRegex;\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for the user settings file.\n\t */\n\tpublic static toUserSettingsLabel(value:number, Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\tlet result = _asString(value, UserSettingsKeyLabelProvider.INSTANCE, Platform);\n\t\tresult = result.toLowerCase();\n\n\t\tif (Platform.isMacintosh) {\n\t\t\tresult = result.replace(/meta/g, 'cmd');\n\t\t} else if (Platform.isWindows) {\n\t\t\tresult = result.replace(/meta/g, 'win');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic static fromUserSettingsLabel(input: string, Platform: ISimplifiedPlatform = defaultPlatform): number {\n\t\tif (!input) {\n\t\t\treturn null;\n\t\t}\n\t\tinput = input.toLowerCase().trim();\n\n\t\tlet ctrlCmd = false,\n\t\t\tshift = false,\n\t\t\talt = false,\n\t\t\twinCtrl = false,\n\t\t\tkey:string = '';\n\n\t\twhile (/^(ctrl|shift|alt|meta|win|cmd)(\\+|\\-)/.test(input)) {\n\t\t\tif (/^ctrl(\\+|\\-)/.test(input)) {\n\t\t\t\tif (Platform.isMacintosh) {\n\t\t\t\t\twinCtrl = true;\n\t\t\t\t} else {\n\t\t\t\t\tctrlCmd = true;\n\t\t\t\t}\n\t\t\t\tinput = input.substr('ctrl-'.length);\n\t\t\t}\n\t\t\tif (/^shift(\\+|\\-)/.test(input)) {\n\t\t\t\tshift = true;\n\t\t\t\tinput = input.substr('shift-'.length);\n\t\t\t}\n\t\t\tif (/^alt(\\+|\\-)/.test(input)) {\n\t\t\t\talt = true;\n\t\t\t\tinput = input.substr('alt-'.length);\n\t\t\t}\n\t\t\tif (/^meta(\\+|\\-)/.test(input)) {\n\t\t\t\tif (Platform.isMacintosh) {\n\t\t\t\t\tctrlCmd = true;\n\t\t\t\t} else {\n\t\t\t\t\twinCtrl = true;\n\t\t\t\t}\n\t\t\t\tinput = input.substr('meta-'.length);\n\t\t\t}\n\t\t\tif (/^win(\\+|\\-)/.test(input)) {\n\t\t\t\tif (Platform.isMacintosh) {\n\t\t\t\t\tctrlCmd = true;\n\t\t\t\t} else {\n\t\t\t\t\twinCtrl = true;\n\t\t\t\t}\n\t\t\t\tinput = input.substr('win-'.length);\n\t\t\t}\n\t\t\tif (/^cmd(\\+|\\-)/.test(input)) {\n\t\t\t\tif (Platform.isMacintosh) {\n\t\t\t\t\tctrlCmd = true;\n\t\t\t\t} else {\n\t\t\t\t\twinCtrl = true;\n\t\t\t\t}\n\t\t\t\tinput = input.substr('cmd-'.length);\n\t\t\t}\n\t\t}\n\n\t\tlet chord: number = 0;\n\n\t\tlet firstSpaceIdx = input.indexOf(' ');\n\t\tif (firstSpaceIdx > 0) {\n\t\t\tkey = input.substring(0, firstSpaceIdx);\n\t\t\tchord = Keybinding.fromUserSettingsLabel(input.substring(firstSpaceIdx), Platform);\n\t\t} else {\n\t\t\tkey = input;\n\t\t}\n\n\t\tlet keyCode = USER_SETTINGS.toKeyCode(key);\n\n\t\tlet result = 0;\n\t\tif (ctrlCmd) {\n\t\t\tresult |= KeyMod.CtrlCmd;\n\t\t}\n\t\tif (shift) {\n\t\t\tresult |= KeyMod.Shift;\n\t\t}\n\t\tif (alt) {\n\t\t\tresult |= KeyMod.Alt;\n\t\t}\n\t\tif (winCtrl) {\n\t\t\tresult |= KeyMod.WinCtrl;\n\t\t}\n\t\tresult |= keyCode;\n\t\treturn KeyMod.chord(result, chord);\n\t}\n\n\tpublic value:number;\n\n\tconstructor(keybinding:number) {\n\t\tthis.value = keybinding;\n\t}\n\n\tpublic hasCtrlCmd(): boolean {\n\t\treturn BinaryKeybindings.hasCtrlCmd(this.value);\n\t}\n\n\tpublic hasShift(): boolean {\n\t\treturn BinaryKeybindings.hasShift(this.value);\n\t}\n\n\tpublic hasAlt(): boolean {\n\t\treturn BinaryKeybindings.hasAlt(this.value);\n\t}\n\n\tpublic hasWinCtrl(): boolean {\n\t\treturn BinaryKeybindings.hasWinCtrl(this.value);\n\t}\n\n\tpublic extractKeyCode(): KeyCode {\n\t\treturn BinaryKeybindings.extractKeyCode(this.value);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic _toUSLabel(Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\treturn Keybinding._toUSLabel(this.value, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for placing in an aria-label.\n\t */\n\tpublic _toUSAriaLabel(Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\treturn Keybinding._toUSAriaLabel(this.value, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic _toUSHTMLLabel(Platform:ISimplifiedPlatform = defaultPlatform): IHTMLContentElement[] {\n\t\treturn Keybinding._toUSHTMLLabel(this.value, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic toCustomLabel(labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\treturn Keybinding._toCustomLabel(this.value, labelProvider, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic toCustomHTMLLabel(labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform = defaultPlatform): IHTMLContentElement[] {\n\t\treturn Keybinding._toCustomHTMLLabel(this.value, labelProvider, Platform);\n\t}\n\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n\t */\n\tpublic _toElectronAccelerator(Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\treturn Keybinding._toElectronAccelerator(this.value, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for the user settings file.\n\t */\n\tpublic toUserSettingsLabel(Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\treturn Keybinding.toUserSettingsLabel(this.value, Platform);\n\t}\n\n}\n\nexport interface IKeyBindingLabelProvider {\n\tctrlKeyLabel:string;\n\tshiftKeyLabel:string;\n\taltKeyLabel:string;\n\tcmdKeyLabel:string;\n\twindowsKeyLabel:string;\n\tmodifierSeparator:string;\n\tgetLabelForKey(keyCode:KeyCode): string;\n}\n\n/**\n * Print for Electron\n */\nexport class ElectronAcceleratorLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new ElectronAcceleratorLabelProvider();\n\n\tpublic ctrlKeyLabel = 'Ctrl';\n\tpublic shiftKeyLabel = 'Shift';\n\tpublic altKeyLabel = 'Alt';\n\tpublic cmdKeyLabel = 'Cmd';\n\tpublic windowsKeyLabel = 'Super';\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\tswitch (keyCode) {\n\t\t\tcase KeyCode.UpArrow:\n\t\t\t\treturn 'Up';\n\t\t\tcase KeyCode.DownArrow:\n\t\t\t\treturn 'Down';\n\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\treturn 'Left';\n\t\t\tcase KeyCode.RightArrow:\n\t\t\t\treturn 'Right';\n\t\t}\n\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Print for Mac UI\n */\nexport class MacUIKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new MacUIKeyLabelProvider();\n\n\tprivate static leftArrowUnicodeLabel = String.fromCharCode(8592);\n\tprivate static upArrowUnicodeLabel = String.fromCharCode(8593);\n\tprivate static rightArrowUnicodeLabel = String.fromCharCode(8594);\n\tprivate static downArrowUnicodeLabel = String.fromCharCode(8595);\n\n\tpublic ctrlKeyLabel = '\\u2303';\n\tpublic shiftKeyLabel = '\\u21E7';\n\tpublic altKeyLabel = '\\u2325';\n\tpublic cmdKeyLabel = '\\u2318';\n\tpublic windowsKeyLabel = nls.localize('windowsKey', \"Windows\");\n\tpublic modifierSeparator = '';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\tswitch (keyCode) {\n\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.leftArrowUnicodeLabel;\n\t\t\tcase KeyCode.UpArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.upArrowUnicodeLabel;\n\t\t\tcase KeyCode.RightArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.rightArrowUnicodeLabel;\n\t\t\tcase KeyCode.DownArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.downArrowUnicodeLabel;\n\t\t}\n\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Aria label provider for Mac.\n */\nexport class AriaKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new MacUIKeyLabelProvider();\n\n\tpublic ctrlKeyLabel = nls.localize('ctrlKey.long', \"Control\");\n\tpublic shiftKeyLabel = nls.localize('shiftKey.long', \"Shift\");\n\tpublic altKeyLabel = nls.localize('altKey.long', \"Alt\");\n\tpublic cmdKeyLabel = nls.localize('cmdKey.long', \"Command\");\n\tpublic windowsKeyLabel = nls.localize('windowsKey.long', \"Windows\");\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Print for Windows, Linux UI\n */\nexport class ClassicUIKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new ClassicUIKeyLabelProvider();\n\n\tpublic ctrlKeyLabel = nls.localize('ctrlKey', \"Ctrl\");\n\tpublic shiftKeyLabel = nls.localize('shiftKey', \"Shift\");\n\tpublic altKeyLabel = nls.localize('altKey', \"Alt\");\n\tpublic cmdKeyLabel = nls.localize('cmdKey', \"Command\");\n\tpublic windowsKeyLabel = nls.localize('windowsKey', \"Windows\");\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Print for the user settings file.\n */\nclass UserSettingsKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new UserSettingsKeyLabelProvider();\n\n\tpublic ctrlKeyLabel = 'Ctrl';\n\tpublic shiftKeyLabel = 'Shift';\n\tpublic altKeyLabel = 'Alt';\n\tpublic cmdKeyLabel = 'Meta';\n\tpublic windowsKeyLabel = 'Meta';\n\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\treturn USER_SETTINGS.fromKeyCode(keyCode);\n\t}\n}\n\nfunction _asString(keybinding:number, labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform): string {\n\tlet result:string[] = [],\n\t\tctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding),\n\t\tshift = BinaryKeybindings.hasShift(keybinding),\n\t\talt = BinaryKeybindings.hasAlt(keybinding),\n\t\twinCtrl = BinaryKeybindings.hasWinCtrl(keybinding),\n\t\tkeyCode = BinaryKeybindings.extractKeyCode(keybinding);\n\n\tlet keyLabel = labelProvider.getLabelForKey(keyCode);\n\tif (!keyLabel) {\n\t\t// cannot trigger this key code under this kb layout\n\t\treturn '';\n\t}\n\n\t// translate modifier keys: Ctrl-Shift-Alt-Meta\n\tif ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\n\t\tresult.push(labelProvider.ctrlKeyLabel);\n\t}\n\n\tif (shift) {\n\t\tresult.push(labelProvider.shiftKeyLabel);\n\t}\n\n\tif (alt) {\n\t\tresult.push(labelProvider.altKeyLabel);\n\t}\n\n\tif (ctrlCmd && Platform.isMacintosh) {\n\t\tresult.push(labelProvider.cmdKeyLabel);\n\t}\n\n\tif (winCtrl && !Platform.isMacintosh) {\n\t\tresult.push(labelProvider.windowsKeyLabel);\n\t}\n\n\t// the actual key\n\tresult.push(keyLabel);\n\n\tvar actualResult = result.join(labelProvider.modifierSeparator);\n\n\tif (BinaryKeybindings.hasChord(keybinding)) {\n\t\treturn actualResult + ' ' + _asString(BinaryKeybindings.extractChordPart(keybinding), labelProvider, Platform);\n\t}\n\n\treturn actualResult;\n}\n\nfunction _pushKey(result:IHTMLContentElement[], str:string): void {\n\tif (result.length > 0) {\n\t\tresult.push({\n\t\t\ttagName: 'span',\n\t\t\ttext: '+'\n\t\t});\n\t}\n\tresult.push({\n\t\ttagName: 'span',\n\t\tclassName: 'monaco-kbkey',\n\t\ttext: str\n\t});\n}\n\nfunction _asHTML(keybinding:number, labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform, isChord:boolean = false): IHTMLContentElement[] {\n\tlet result:IHTMLContentElement[] = [],\n\t\tctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding),\n\t\tshift = BinaryKeybindings.hasShift(keybinding),\n\t\talt = BinaryKeybindings.hasAlt(keybinding),\n\t\twinCtrl = BinaryKeybindings.hasWinCtrl(keybinding),\n\t\tkeyCode = BinaryKeybindings.extractKeyCode(keybinding);\n\n\tlet keyLabel = labelProvider.getLabelForKey(keyCode);\n\tif (!keyLabel) {\n\t\t// cannot trigger this key code under this kb layout\n\t\treturn [];\n\t}\n\n\t// translate modifier keys: Ctrl-Shift-Alt-Meta\n\tif ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\n\t\t_pushKey(result, labelProvider.ctrlKeyLabel);\n\t}\n\n\tif (shift) {\n\t\t_pushKey(result, labelProvider.shiftKeyLabel);\n\t}\n\n\tif (alt) {\n\t\t_pushKey(result, labelProvider.altKeyLabel);\n\t}\n\n\tif (ctrlCmd && Platform.isMacintosh) {\n\t\t_pushKey(result, labelProvider.cmdKeyLabel);\n\t}\n\n\tif (winCtrl && !Platform.isMacintosh) {\n\t\t_pushKey(result, labelProvider.windowsKeyLabel);\n\t}\n\n\t// the actual key\n\t_pushKey(result, keyLabel);\n\n\tlet chordTo: IHTMLContentElement[] = null;\n\n\tif (BinaryKeybindings.hasChord(keybinding)) {\n\t\tchordTo = _asHTML(BinaryKeybindings.extractChordPart(keybinding), labelProvider, Platform, true);\n\t\tresult.push({\n\t\t\ttagName: 'span',\n\t\t\ttext: ' '\n\t\t});\n\t\tresult = result.concat(chordTo);\n\t}\n\n\tif (isChord) {\n\t\treturn result;\n\t}\n\n\treturn [{\n\t\ttagName: 'span',\n\t\tclassName: 'monaco-kb',\n\t\tchildren: result\n\t}];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport strings = require('vs/base/common/strings');\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tvar _error = 'error',\n\t\t_warning = 'warning',\n\t\t_warn = 'warn',\n\t\t_info = 'info';\n\n\tvar _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\n\t\treturn Severity.Ignore;\n\t}\n\n\texport function toString(value: Severity): string {\n\t\treturn _displayStrings[value] || strings.empty;\n\t}\n\n\texport function compare(a: Severity, b: Severity): number {\n\t\treturn b - a;\n\t}\n}\n\nexport default Severity;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Emitter} from 'vs/base/common/event';\nimport {KeyCode, KeyMod} from 'vs/base/common/keyCodes';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection, SelectionDirection} from 'vs/editor/common/core/selection';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {CancellationTokenSource} from 'vs/base/common/cancellation';\nimport Severity from 'vs/base/common/severity';\nimport URI from 'vs/base/common/uri';\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined,\n\t\tlanguages: undefined,\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: Selection,\n\t\tSelectionDirection: SelectionDirection,\n\t\tSeverity: Severity,\n\t\tPromise: TPromise,\n\t\tUri: URI\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {IRequestHandler} from 'vs/base/common/worker/simpleWorker';\nimport {Range} from 'vs/editor/common/core/range';\nimport {fuzzyContiguousFilter} from 'vs/base/common/filters';\nimport {DiffComputer} from 'vs/editor/common/diff/diffComputer';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {MirrorModel2} from 'vs/editor/common/model/mirrorModel2';\nimport {IInplaceReplaceSupportResult, ILink, ISuggestResult, ISuggestion} from 'vs/editor/common/modes';\nimport {computeLinks} from 'vs/editor/common/modes/linkComputer';\nimport {BasicInplaceReplace} from 'vs/editor/common/modes/supports/inplaceReplaceSupport';\nimport {IRawModelData} from 'vs/editor/common/services/editorSimpleWorkerCommon';\nimport {getWordAtText, ensureValidWordDefinition} from 'vs/editor/common/model/wordHelper';\nimport {createMonacoBaseAPI} from 'vs/editor/common/standalone/standaloneBase';\n\nexport interface IMirrorModel {\n\turi: URI;\n\tversion: number;\n\tgetValue(): string;\n}\n\nexport interface IWorkerContext {\n\t/**\n\t * Get all available mirror models in this worker.\n\t */\n\tgetMirrorModels(): IMirrorModel[];\n}\n\n/**\n * @internal\n */\nexport interface ICommonModel {\n\turi: URI;\n\tversion: number;\n\tgetValue(): string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber:number): string;\n\tgetWordUntilPosition(position: editorCommon.IPosition, wordDefinition:RegExp): editorCommon.IWordAtPosition;\n\tgetAllUniqueWords(wordDefinition:RegExp, skipWordOnce?:string) : string[];\n\tgetValueInRange(range:editorCommon.IRange): string;\n\tgetWordAtPosition(position:editorCommon.IPosition, wordDefinition:RegExp): Range;\n}\n\n/**\n * @internal\n */\nexport class MirrorModel extends MirrorModel2 implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber:number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position:editorCommon.IPosition, wordDefinition:RegExp): Range {\n\n\t\tlet wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getWordUntilPosition(position: editorCommon.IPosition, wordDefinition:RegExp): editorCommon.IWordAtPosition {\n\t\tvar wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tprivate _getAllWords(wordDefinition:RegExp): string[] {\n\t\tvar result:string[] = [];\n\t\tthis._lines.forEach((line) => {\n\t\t\tthis._wordenize(line, wordDefinition).forEach((info) => {\n\t\t\t\tresult.push(line.substring(info.start, info.end));\n\t\t\t});\n\t\t});\n\t\treturn result;\n\t}\n\n\tpublic getAllUniqueWords(wordDefinition:RegExp, skipWordOnce?:string) : string[] {\n\t\tvar foundSkipWord = false;\n\t\tvar uniqueWords = {};\n\t\treturn this._getAllWords(wordDefinition).filter((word) => {\n\t\t\tif (skipWordOnce && !foundSkipWord && skipWordOnce === word) {\n\t\t\t\tfoundSkipWord = true;\n\t\t\t\treturn false;\n\t\t\t} else if (uniqueWords[word]) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tuniqueWords[word] = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO@Joh, TODO@Alex - remove these and make sure the super-things work\n\tprivate _wordenize(content:string, wordDefinition:RegExp): editorCommon.IWordRange[] {\n\t\tvar result:editorCommon.IWordRange[] = [];\n\t\tvar match:RegExpExecArray;\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range:editorCommon.IRange): string {\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tvar lineEnding = this._eol,\n\t\t\tstartLineIndex = range.startLineNumber - 1,\n\t\t\tendLineIndex = range.endLineNumber - 1,\n\t\t\tresultLines:string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (var i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n}\n\n/**\n * @internal\n */\nexport abstract class BaseEditorSimpleWorker {\n\tprivate _foreignModule: any;\n\n\tconstructor() {\n\t\tthis._foreignModule = null;\n\t}\n\n\tprotected abstract _getModel(uri:string): ICommonModel;\n\tprotected abstract _getModels(): ICommonModel[];\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic computeDiff(originalUrl:string, modifiedUrl:string, ignoreTrimWhitespace:boolean): TPromise<editorCommon.ILineChange[]> {\n\t\tlet original = this._getModel(originalUrl);\n\t\tlet modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet originalLines = original.getLinesContent();\n\t\tlet modifiedLines = modified.getLinesContent();\n\t\tlet diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldPostProcessCharChanges: true,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldConsiderTrimWhitespaceInEmptyCase: true\n\t\t});\n\t\treturn TPromise.as(diffComputer.computeDiff());\n\t}\n\n\tpublic computeDirtyDiff(originalUrl:string, modifiedUrl:string, ignoreTrimWhitespace:boolean):TPromise<editorCommon.IChange[]> {\n\t\tlet original = this._getModel(originalUrl);\n\t\tlet modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet originalLines = original.getLinesContent();\n\t\tlet modifiedLines = modified.getLinesContent();\n\t\tlet diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldPostProcessCharChanges: false,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldConsiderTrimWhitespaceInEmptyCase: false\n\t\t});\n\t\treturn TPromise.as(diffComputer.computeDiff());\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\tpublic computeLinks(modelUrl:string):TPromise<ILink[]> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn TPromise.as(computeLinks(model));\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tpublic textualSuggest(modelUrl:string, position: editorCommon.IPosition, wordDef:string, wordDefFlags:string): TPromise<ISuggestResult> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn TPromise.as(this._suggestFiltered(model, position, new RegExp(wordDef, wordDefFlags)));\n\t}\n\n\tprivate _suggestFiltered(model:ICommonModel, position: editorCommon.IPosition, wordDefRegExp: RegExp): ISuggestResult {\n\t\tlet value = this._suggestUnfiltered(model, position, wordDefRegExp);\n\n\t\t// filter suggestions\n\t\treturn {\n\t\t\tcurrentWord: value.currentWord,\n\t\t\tsuggestions: value.suggestions.filter((element) => !!fuzzyContiguousFilter(value.currentWord, element.label)),\n\t\t\tincomplete: value.incomplete\n\t\t};\n\t}\n\n\tprivate _suggestUnfiltered(model:ICommonModel, position:editorCommon.IPosition, wordDefRegExp: RegExp): ISuggestResult {\n\t\tlet currentWord = model.getWordUntilPosition(position, wordDefRegExp).word;\n\t\tlet allWords = model.getAllUniqueWords(wordDefRegExp, currentWord);\n\n\t\tlet suggestions = allWords.filter((word) => {\n\t\t\treturn !(/^-?\\d*\\.?\\d/.test(word)); // filter out numbers\n\t\t}).map((word) => {\n\t\t\treturn <ISuggestion> {\n\t\t\t\ttype: 'text',\n\t\t\t\tlabel: word,\n\t\t\t\tinsertText: word,\n\t\t\t\tnoAutoAccept: true\n\t\t\t};\n\t\t});\n\n\t\treturn {\n\t\t\tcurrentWord: currentWord,\n\t\t\tsuggestions: suggestions\n\t\t};\n\t}\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\tpublic navigateValueSet(modelUrl:string, range:editorCommon.IRange, up:boolean, wordDef:string, wordDefFlags:string): TPromise<IInplaceReplaceSupportResult> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange.endColumn += 1;\n\t\t}\n\n\t\tlet selectionText = model.getValueInRange(range);\n\n\t\tlet\twordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tlet word: string = null;\n\t\tif (wordRange !== null) {\n\t\t\tword = model.getValueInRange(wordRange);\n\t\t}\n\n\t\tlet result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn TPromise.as(result);\n\t}\n\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\tpublic loadForeignModule(moduleId:string, createData:any): TPromise<string[]> {\n\t\treturn new TPromise<any>((c, e) => {\n\t\t\t// Use the global require to be sure to get the global config\n\t\t\t(<any>self).require([moduleId], (foreignModule) => {\n\t\t\t\tlet ctx: IWorkerContext = {\n\t\t\t\t\tgetMirrorModels: ():IMirrorModel[] => {\n\t\t\t\t\t\treturn this._getModels();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n\n\t\t\t\tlet methods: string[] = [];\n\t\t\t\tfor (let prop in this._foreignModule) {\n\t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n\t\t\t\t\t\tmethods.push(prop);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tc(methods);\n\n\t\t\t}, e);\n\t\t});\n\t}\n\n\t// foreign method request\n\tpublic fmr(method:string, args:any[]): TPromise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn TPromise.as(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn TPromise.wrapError(e);\n\t\t}\n\t}\n\n\t// ---- END foreign module support --------------------------------------------------------------------------\n}\n\n/**\n * @internal\n */\nexport class EditorSimpleWorkerImpl extends BaseEditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerTrait: any;\n\n\tprivate _models:{[uri:string]:MirrorModel;};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._models = Object.create(null);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tprotected _getModel(uri:string): ICommonModel {\n\t\treturn this._models[uri];\n\t}\n\n\tprotected _getModels(): ICommonModel[] {\n\t\tlet all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\tpublic acceptNewModel(data:IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.value.lines, data.value.EOL, data.versionId);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, events: editorCommon.IModelContentChangedEvent2[]): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tlet model = this._models[strURL];\n\t\tmodel.onEvents(events);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(): IRequestHandler {\n\treturn new EditorSimpleWorkerImpl();\n}\n\nvar global:any = self;\nlet isWebWorker = (typeof global.importScripts === 'function');\nif (isWebWorker) {\n\tglobal.monaco = createMonacoBaseAPI();\n}\n"]}