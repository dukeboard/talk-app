{"version":3,"sources":["file:///C:/Alex/src/vscode/src/vs/base/worker/vs/base/worker/workerMain.ts"],"names":["MonacoEnvironment","self","monacoBaseUrl","baseUrl","importScripts","require","config","catchError","loadCode","moduleId","ws","messageHandler","create","msg","postMessage","onmessage","e","data","beforeReadyMessages","length","shift","isFirstMessage","message","push"],"mappings":";;;;CAKA,WACC,YAEA,IAAIA,GAA0BC,KAAMD,kBAChCE,EAAgBF,GAAqBA,EAAkBG,QAAUH,EAAkBG,QAAU,WAEjGC,eAAcF,EAAgB,gBAE9BG,QAAQC,QACPH,QAASD,EACTK,YAAY,GAGb,IAAIC,GAAW,SAASC,GACvBJ,SAASI,GAAW,SAASC,GAC5B,GAAIC,GAAiBD,EAAGE,OAAO,SAACC,GACzBZ,KAAMa,YAAYD,IACtB,KAGH,KADAZ,KAAKc,UAAY,SAACC,GAAM,MAAAL,GAAeI,UAAUC,EAAEC,OAC7CC,EAAoBC,OAAS,GAClClB,KAAKc,UAAUG,EAAoBE,YAKlCC,GAAiB,EACjBH,IACJjB,MAAKc,UAAY,SAACO,GACjB,MAAKD,IAKLA,GAAiB,MACjBb,GAASc,EAAQL,WALhBC,GAAoBK,KAAKD","file":"vs/base/worker/workerMain.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n(function () {\n\t'use strict';\n\n\tlet MonacoEnvironment = (<any>self).MonacoEnvironment;\n\tlet monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../';\n\n\timportScripts(monacoBaseUrl + 'vs/loader.js');\n\n\trequire.config({\n\t\tbaseUrl: monacoBaseUrl,\n\t\tcatchError: true\n\t});\n\n\tlet loadCode = function(moduleId) {\n\t\trequire([moduleId], function(ws) {\n\t\t\tlet messageHandler = ws.create((msg:any) => {\n\t\t\t\t(<any>self).postMessage(msg);\n\t\t\t}, null);\n\n\t\t\tself.onmessage = (e) => messageHandler.onmessage(e.data);\n\t\t\twhile(beforeReadyMessages.length > 0) {\n\t\t\t\tself.onmessage(beforeReadyMessages.shift());\n\t\t\t}\n\t\t});\n\t};\n\n\tlet isFirstMessage = true;\n\tlet beforeReadyMessages:MessageEvent[] = [];\n\tself.onmessage = (message) => {\n\t\tif (!isFirstMessage) {\n\t\t\tbeforeReadyMessages.push(message);\n\t\t\treturn;\n\t\t}\n\n\t\tisFirstMessage = false;\n\t\tloadCode(message.data);\n\t};\n})();\n"]}