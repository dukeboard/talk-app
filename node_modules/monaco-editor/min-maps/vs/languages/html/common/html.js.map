{"version":3,"sources":["vs/languages/html/common/fake","vs/languages/html/common/html.js","vs/languages/html/common/file:/C:/Alex/src/vscode/src/vs/languages/html/common/htmlEmptyTagsShared.ts","vs/languages/html/common/file:/C:/Alex/src/vscode/src/vs/languages/html/common/htmlTokenTypes.ts","vs/languages/html/common/file:/C:/Alex/src/vscode/src/vs/languages/html/common/html.ts"],"names":["__m","__M","deps","result","i","len","length","define","require","exports","arrays","isEmptyElement","e","binarySearch","EMPTY_ELEMENTS","s1","s2","localeCompare","strings","isTag","tokenType","startsWith","TAG_PREFIX","getTag","name","DELIM_END","DELIM_START","DELIM_ASSIGN","ATTRIB_NAME","ATTRIB_VALUE","COMMENT","DELIM_COMMENT","DOCTYPE","DELIM_DOCTYPE","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","modes","abstractMode_1","abstractState_1","modeService_1","instantiation_1","htmlTokenTypes","htmlEmptyTagsShared_1","languageConfigurationRegistry_1","tokenizationSupport_1","async_1","compatWorkerService_1","workspace_1","configuration_1","States","tagsEmbeddingContent","State","_super","mode","kind","lastTagName","lastAttributeName","embeddedContentType","attributeValueQuote","attributeValueLength","call","escapeTagName","s","replace","makeClone","getMode","equals","other","nextElementName","stream","advanceIfRegExp","toLowerCase","nextAttributeName","tokenize","WithinComment","advanceUntilString2","type","advanceIfString2","Content","dontMergeWithPrev","WithinDoctype","advanceIfCharCode2","charCodeAt","eos","peek","advanceIfStringCaseInsensitive2","OpeningEndTag","OpeningStartTag","tagName","WithinTag","skipWhitespace2","AttributeName","indexOf","WithinEmbeddedContent","next2","AttributeValue","attributeValue","ch","next","advanceUntilString","unquote","value","start","end","substring","AbstractState","HTMLMode","descriptor","instantiationService","modeService","compatWorkerService","workspaceContextService","configurationService","_this","id","_modeWorkerManager","_createModeWorkerManager","tokenizationSupport","TokenizationSupport","isInMainThread","updateConfiguration_1","opts","getConfiguration","_configureWorker","onDidUpdateConfiguration","_registerSupports","getId","Error","SuggestRegistry","register","triggerCharacters","provideCompletionItems","model","position","token","wireCancellationToken","_provideCompletionItems","uri","DocumentHighlightProviderRegistry","provideDocumentHighlights","_provideDocumentHighlights","DocumentRangeFormattingEditProviderRegistry","provideDocumentRangeFormattingEdits","range","options","_provideDocumentRangeFormattingEdits","LinkProviderRegistry","provideLinks","LanguageConfigurationRegistry","LANG_CONFIG","ModeWorkerManager","_worker","runner","worker","getInitialState","enterNestedMode","state","getNestedMode","htmlState","missingModePromise","isRegisteredMode","getOrCreateMode","mimeType","getLeavingNestedModeData","line","regexp","RegExp","match","exec","nestedModeBuffer","index","bufferAfterNestedMode","stateAfterNestedMode","w","_doConfigure","resource","workspace","getWorkspace","workspaceResource","_provideLinks","strict","wordPattern","createWordRegExp","comments","blockComment","brackets","__electricCharacterSupport","embeddedElectricCharacters","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","join","afterText","action","indentAction","IndentAction","IndentOutdent","Indent","$_configureWorker","CompatWorkerAttr","$_provideLinks","$_provideDocumentRangeFormattingEdits","$_provideDocumentHighlights","$_provideCompletionItems","IInstantiationService","IModeService","ICompatWorkerService","IWorkspaceContextService","IConfigurationService","CompatMode"],"mappings":"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","file":"vs/languages/html/common/html.js","sourcesContent":["}).call(this);","/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.6.1(8f43cf5d0d3d233c9ba1c9085f2bb529f834c841)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n(function() {\nvar __m = [\"exports\",\"require\",\"vs/languages/html/common/htmlEmptyTagsShared\",\"vs/languages/html/common/htmlTokenTypes\",\"vs/platform/configuration/common/configuration\",\"vs/base/common/strings\",\"vs/languages/html/common/html\",\"vs/editor/common/modes\",\"vs/editor/common/modes/abstractMode\",\"vs/base/common/arrays\",\"vs/editor/common/services/modeService\",\"vs/platform/instantiation/common/instantiation\",\"vs/editor/common/modes/languageConfigurationRegistry\",\"vs/editor/common/modes/supports/tokenizationSupport\",\"vs/base/common/async\",\"vs/editor/common/services/compatWorkerService\",\"vs/platform/workspace/common/workspace\",\"vs/editor/common/modes/abstractState\"];\nvar __M = function(deps) {\n  var result = [];\n  for (var i = 0, len = deps.length; i < len; i++) {\n    result[i] = __m[deps[i]];\n  }\n  return result;\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[2], __M([1,0,9]), function (require, exports, arrays) {\n    \"use strict\";\n    exports.EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\n    function isEmptyElement(e) {\n        return arrays.binarySearch(exports.EMPTY_ELEMENTS, e, function (s1, s2) { return s1.localeCompare(s2); }) >= 0;\n    }\n    exports.isEmptyElement = isEmptyElement;\n});\n\ndefine(__m[3], __M([1,0,5]), function (require, exports, strings) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.DELIM_END = 'punctuation.definition.meta.tag.end.html';\n    exports.DELIM_START = 'punctuation.definition.meta.tag.begin.html';\n    exports.DELIM_ASSIGN = 'meta.tag.assign.html';\n    exports.ATTRIB_NAME = 'entity.other.attribute-name.html';\n    exports.ATTRIB_VALUE = 'string.html';\n    exports.COMMENT = 'comment.html.content';\n    exports.DELIM_COMMENT = 'comment.html';\n    exports.DOCTYPE = 'entity.other.attribute-name.html';\n    exports.DELIM_DOCTYPE = 'entity.name.tag.html';\n    var TAG_PREFIX = 'entity.name.tag.tag-';\n    function isTag(tokenType) {\n        return strings.startsWith(tokenType, TAG_PREFIX);\n    }\n    exports.isTag = isTag;\n    function getTag(name) {\n        return TAG_PREFIX + name;\n    }\n    exports.getTag = getTag;\n});\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine(__m[6], __M([1,0,7,8,17,10,11,3,2,12,13,14,15,16,4]), function (require, exports, modes, abstractMode_1, abstractState_1, modeService_1, instantiation_1, htmlTokenTypes, htmlEmptyTagsShared_1, languageConfigurationRegistry_1, tokenizationSupport_1, async_1, compatWorkerService_1, workspace_1, configuration_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.htmlTokenTypes = htmlTokenTypes;\n    exports.EMPTY_ELEMENTS = htmlEmptyTagsShared_1.EMPTY_ELEMENTS;\n     // export to be used by Razor. We are the main module, so Razor should get it from us.\n     // export to be used by Razor. We are the main module, so Razor should get it from us.\n    (function (States) {\n        States[States[\"Content\"] = 0] = \"Content\";\n        States[States[\"OpeningStartTag\"] = 1] = \"OpeningStartTag\";\n        States[States[\"OpeningEndTag\"] = 2] = \"OpeningEndTag\";\n        States[States[\"WithinDoctype\"] = 3] = \"WithinDoctype\";\n        States[States[\"WithinTag\"] = 4] = \"WithinTag\";\n        States[States[\"WithinComment\"] = 5] = \"WithinComment\";\n        States[States[\"WithinEmbeddedContent\"] = 6] = \"WithinEmbeddedContent\";\n        States[States[\"AttributeName\"] = 7] = \"AttributeName\";\n        States[States[\"AttributeValue\"] = 8] = \"AttributeValue\";\n    })(exports.States || (exports.States = {}));\n    var States = exports.States;\n    // list of elements that embed other content\n    var tagsEmbeddingContent = ['script', 'style'];\n    var State = (function (_super) {\n        __extends(State, _super);\n        function State(mode, kind, lastTagName, lastAttributeName, embeddedContentType, attributeValueQuote, attributeValueLength) {\n            _super.call(this, mode);\n            this.kind = kind;\n            this.lastTagName = lastTagName;\n            this.lastAttributeName = lastAttributeName;\n            this.embeddedContentType = embeddedContentType;\n            this.attributeValueQuote = attributeValueQuote;\n            this.attributeValueLength = attributeValueLength;\n        }\n        State.escapeTagName = function (s) {\n            return htmlTokenTypes.getTag(s.replace(/[:_.]/g, '-'));\n        };\n        State.prototype.makeClone = function () {\n            return new State(this.getMode(), this.kind, this.lastTagName, this.lastAttributeName, this.embeddedContentType, this.attributeValueQuote, this.attributeValueLength);\n        };\n        State.prototype.equals = function (other) {\n            if (other instanceof State) {\n                return (_super.prototype.equals.call(this, other) &&\n                    this.kind === other.kind &&\n                    this.lastTagName === other.lastTagName &&\n                    this.lastAttributeName === other.lastAttributeName &&\n                    this.embeddedContentType === other.embeddedContentType &&\n                    this.attributeValueQuote === other.attributeValueQuote &&\n                    this.attributeValueLength === other.attributeValueLength);\n            }\n            return false;\n        };\n        State.prototype.nextElementName = function (stream) {\n            return stream.advanceIfRegExp(/^[_:\\w][_:\\w-.\\d]*/).toLowerCase();\n        };\n        State.prototype.nextAttributeName = function (stream) {\n            return stream.advanceIfRegExp(/^[^\\s\"'>/=\\x00-\\x0F\\x7F\\x80-\\x9F]*/).toLowerCase();\n        };\n        State.prototype.tokenize = function (stream) {\n            switch (this.kind) {\n                case States.WithinComment:\n                    if (stream.advanceUntilString2('-->', false)) {\n                        return { type: htmlTokenTypes.COMMENT };\n                    }\n                    else if (stream.advanceIfString2('-->')) {\n                        this.kind = States.Content;\n                        return { type: htmlTokenTypes.DELIM_COMMENT, dontMergeWithPrev: true };\n                    }\n                    break;\n                case States.WithinDoctype:\n                    if (stream.advanceUntilString2('>', false)) {\n                        return { type: htmlTokenTypes.DOCTYPE };\n                    }\n                    else if (stream.advanceIfString2('>')) {\n                        this.kind = States.Content;\n                        return { type: htmlTokenTypes.DELIM_DOCTYPE, dontMergeWithPrev: true };\n                    }\n                    break;\n                case States.Content:\n                    if (stream.advanceIfCharCode2('<'.charCodeAt(0))) {\n                        if (!stream.eos() && stream.peek() === '!') {\n                            if (stream.advanceIfString2('!--')) {\n                                this.kind = States.WithinComment;\n                                return { type: htmlTokenTypes.DELIM_COMMENT, dontMergeWithPrev: true };\n                            }\n                            if (stream.advanceIfStringCaseInsensitive2('!DOCTYPE')) {\n                                this.kind = States.WithinDoctype;\n                                return { type: htmlTokenTypes.DELIM_DOCTYPE, dontMergeWithPrev: true };\n                            }\n                        }\n                        if (stream.advanceIfCharCode2('/'.charCodeAt(0))) {\n                            this.kind = States.OpeningEndTag;\n                            return { type: htmlTokenTypes.DELIM_END, dontMergeWithPrev: true };\n                        }\n                        this.kind = States.OpeningStartTag;\n                        return { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n                    }\n                    break;\n                case States.OpeningEndTag:\n                    var tagName = this.nextElementName(stream);\n                    if (tagName.length > 0) {\n                        return {\n                            type: State.escapeTagName(tagName),\n                        };\n                    }\n                    else if (stream.advanceIfString2('>')) {\n                        this.kind = States.Content;\n                        return { type: htmlTokenTypes.DELIM_END, dontMergeWithPrev: true };\n                    }\n                    else {\n                        stream.advanceUntilString2('>', false);\n                        return { type: '' };\n                    }\n                case States.OpeningStartTag:\n                    this.lastTagName = this.nextElementName(stream);\n                    if (this.lastTagName.length > 0) {\n                        this.lastAttributeName = null;\n                        if ('script' === this.lastTagName || 'style' === this.lastTagName) {\n                            this.lastAttributeName = null;\n                            this.embeddedContentType = null;\n                        }\n                        this.kind = States.WithinTag;\n                        return {\n                            type: State.escapeTagName(this.lastTagName),\n                        };\n                    }\n                    break;\n                case States.WithinTag:\n                    if (stream.skipWhitespace2() || stream.eos()) {\n                        this.lastAttributeName = ''; // remember that we have seen a whitespace\n                        return { type: '' };\n                    }\n                    else {\n                        if (this.lastAttributeName === '') {\n                            var name = this.nextAttributeName(stream);\n                            if (name.length > 0) {\n                                this.lastAttributeName = name;\n                                this.kind = States.AttributeName;\n                                return { type: htmlTokenTypes.ATTRIB_NAME };\n                            }\n                        }\n                        if (stream.advanceIfString2('/>')) {\n                            this.kind = States.Content;\n                            return { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n                        }\n                        if (stream.advanceIfCharCode2('>'.charCodeAt(0))) {\n                            if (tagsEmbeddingContent.indexOf(this.lastTagName) !== -1) {\n                                this.kind = States.WithinEmbeddedContent;\n                                return { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n                            }\n                            else {\n                                this.kind = States.Content;\n                                return { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n                            }\n                        }\n                        else {\n                            stream.next2();\n                            return { type: '' };\n                        }\n                    }\n                case States.AttributeName:\n                    if (stream.skipWhitespace2() || stream.eos()) {\n                        return { type: '' };\n                    }\n                    if (stream.advanceIfCharCode2('='.charCodeAt(0))) {\n                        this.kind = States.AttributeValue;\n                        return { type: htmlTokenTypes.DELIM_ASSIGN };\n                    }\n                    else {\n                        this.kind = States.WithinTag;\n                        this.lastAttributeName = '';\n                        return this.tokenize(stream); // no advance yet - jump to WithinTag\n                    }\n                case States.AttributeValue:\n                    if (stream.eos()) {\n                        return { type: '' };\n                    }\n                    if (stream.skipWhitespace2()) {\n                        if (this.attributeValueQuote === '\"' || this.attributeValueQuote === '\\'') {\n                            // We are inside the quotes of an attribute value\n                            return { type: htmlTokenTypes.ATTRIB_VALUE };\n                        }\n                        return { type: '' };\n                    }\n                    // We are in a attribute value\n                    if (this.attributeValueQuote === '\"' || this.attributeValueQuote === '\\'') {\n                        if (this.attributeValueLength === 1 && ('script' === this.lastTagName || 'style' === this.lastTagName) && 'type' === this.lastAttributeName) {\n                            var attributeValue = stream.advanceUntilString(this.attributeValueQuote, true);\n                            if (attributeValue.length > 0) {\n                                this.embeddedContentType = this.unquote(attributeValue);\n                                this.kind = States.WithinTag;\n                                this.attributeValueLength = 0;\n                                this.attributeValueQuote = '';\n                                return { type: htmlTokenTypes.ATTRIB_VALUE };\n                            }\n                        }\n                        else {\n                            if (stream.advanceIfCharCode2(this.attributeValueQuote.charCodeAt(0))) {\n                                this.kind = States.WithinTag;\n                                this.attributeValueLength = 0;\n                                this.attributeValueQuote = '';\n                                this.lastAttributeName = null;\n                            }\n                            else {\n                                stream.next();\n                                this.attributeValueLength++;\n                            }\n                            return { type: htmlTokenTypes.ATTRIB_VALUE };\n                        }\n                    }\n                    else {\n                        var attributeValue = stream.advanceIfRegExp(/^[^\\s\"'`=<>]+/);\n                        if (attributeValue.length > 0) {\n                            this.kind = States.WithinTag;\n                            this.lastAttributeName = null;\n                            return { type: htmlTokenTypes.ATTRIB_VALUE };\n                        }\n                        var ch = stream.peek();\n                        if (ch === '\\'' || ch === '\"') {\n                            this.attributeValueQuote = ch;\n                            this.attributeValueLength = 1;\n                            stream.next2();\n                            return { type: htmlTokenTypes.ATTRIB_VALUE };\n                        }\n                        else {\n                            this.kind = States.WithinTag;\n                            this.lastAttributeName = null;\n                            return this.tokenize(stream); // no advance yet - jump to WithinTag\n                        }\n                    }\n            }\n            stream.next2();\n            this.kind = States.Content;\n            return { type: '' };\n        };\n        State.prototype.unquote = function (value) {\n            var start = 0;\n            var end = value.length;\n            if ('\"' === value[0]) {\n                start++;\n            }\n            if ('\"' === value[end - 1]) {\n                end--;\n            }\n            return value.substring(start, end);\n        };\n        return State;\n    }(abstractState_1.AbstractState));\n    exports.State = State;\n    var HTMLMode = (function (_super) {\n        __extends(HTMLMode, _super);\n        function HTMLMode(descriptor, instantiationService, modeService, compatWorkerService, workspaceContextService, configurationService) {\n            var _this = this;\n            _super.call(this, descriptor.id, compatWorkerService);\n            this.workspaceContextService = workspaceContextService;\n            this.configurationService = configurationService;\n            this._modeWorkerManager = this._createModeWorkerManager(descriptor, instantiationService);\n            this.modeService = modeService;\n            this.tokenizationSupport = new tokenizationSupport_1.TokenizationSupport(this, this, true);\n            if (this.compatWorkerService && this.compatWorkerService.isInMainThread) {\n                var updateConfiguration_1 = function () {\n                    var opts = configurationService.getConfiguration('html');\n                    _this._configureWorker(opts);\n                };\n                configurationService.onDidUpdateConfiguration(function (e) { return updateConfiguration_1(); });\n                updateConfiguration_1();\n            }\n            this._registerSupports();\n        }\n        HTMLMode.prototype._registerSupports = function () {\n            var _this = this;\n            if (this.getId() !== 'html') {\n                throw new Error('This method must be overwritten!');\n            }\n            modes.SuggestRegistry.register(this.getId(), {\n                triggerCharacters: ['.', ':', '<', '\"', '=', '/'],\n                provideCompletionItems: function (model, position, token) {\n                    return async_1.wireCancellationToken(token, _this._provideCompletionItems(model.uri, position));\n                }\n            }, true);\n            modes.DocumentHighlightProviderRegistry.register(this.getId(), {\n                provideDocumentHighlights: function (model, position, token) {\n                    return async_1.wireCancellationToken(token, _this._provideDocumentHighlights(model.uri, position));\n                }\n            }, true);\n            modes.DocumentRangeFormattingEditProviderRegistry.register(this.getId(), {\n                provideDocumentRangeFormattingEdits: function (model, range, options, token) {\n                    return async_1.wireCancellationToken(token, _this._provideDocumentRangeFormattingEdits(model.uri, range, options));\n                }\n            }, true);\n            modes.LinkProviderRegistry.register(this.getId(), {\n                provideLinks: function (model, token) {\n                    return async_1.wireCancellationToken(token, _this.provideLinks(model.uri));\n                }\n            }, true);\n            languageConfigurationRegistry_1.LanguageConfigurationRegistry.register(this.getId(), HTMLMode.LANG_CONFIG);\n        };\n        HTMLMode.prototype._createModeWorkerManager = function (descriptor, instantiationService) {\n            return new abstractMode_1.ModeWorkerManager(descriptor, 'vs/languages/html/common/htmlWorker', 'HTMLWorker', null, instantiationService);\n        };\n        HTMLMode.prototype._worker = function (runner) {\n            return this._modeWorkerManager.worker(runner);\n        };\n        // TokenizationSupport\n        HTMLMode.prototype.getInitialState = function () {\n            return new State(this, States.Content, '', '', '', '', 0);\n        };\n        HTMLMode.prototype.enterNestedMode = function (state) {\n            return state instanceof State && state.kind === States.WithinEmbeddedContent;\n        };\n        HTMLMode.prototype.getNestedMode = function (state) {\n            var result = null;\n            var htmlState = state;\n            var missingModePromise = null;\n            if (htmlState.embeddedContentType !== null) {\n                if (this.modeService.isRegisteredMode(htmlState.embeddedContentType)) {\n                    result = this.modeService.getMode(htmlState.embeddedContentType);\n                    if (!result) {\n                        missingModePromise = this.modeService.getOrCreateMode(htmlState.embeddedContentType);\n                    }\n                }\n            }\n            else {\n                var mimeType = null;\n                if ('script' === htmlState.lastTagName) {\n                    mimeType = 'text/javascript';\n                }\n                else if ('style' === htmlState.lastTagName) {\n                    mimeType = 'text/css';\n                }\n                else {\n                    mimeType = 'text/plain';\n                }\n                result = this.modeService.getMode(mimeType);\n            }\n            if (result === null) {\n                result = this.modeService.getMode('text/plain');\n            }\n            return {\n                mode: result,\n                missingModePromise: missingModePromise\n            };\n        };\n        HTMLMode.prototype.getLeavingNestedModeData = function (line, state) {\n            var tagName = state.lastTagName;\n            var regexp = new RegExp('<\\\\/' + tagName + '\\\\s*>', 'i');\n            var match = regexp.exec(line);\n            if (match !== null) {\n                return {\n                    nestedModeBuffer: line.substring(0, match.index),\n                    bufferAfterNestedMode: line.substring(match.index),\n                    stateAfterNestedMode: new State(this, States.Content, '', '', '', '', 0)\n                };\n            }\n            return null;\n        };\n        HTMLMode.prototype._configureWorker = function (options) {\n            return this._worker(function (w) { return w._doConfigure(options); });\n        };\n        HTMLMode.prototype.provideLinks = function (resource) {\n            var workspace = this.workspaceContextService.getWorkspace();\n            var workspaceResource = workspace ? workspace.resource : null;\n            return this._provideLinks(resource, workspaceResource);\n        };\n        HTMLMode.prototype._provideLinks = function (resource, workspaceResource) {\n            return this._worker(function (w) { return w.provideLinks(resource, workspaceResource); });\n        };\n        HTMLMode.prototype._provideDocumentRangeFormattingEdits = function (resource, range, options) {\n            return this._worker(function (w) { return w.provideDocumentRangeFormattingEdits(resource, range, options); });\n        };\n        HTMLMode.prototype._provideDocumentHighlights = function (resource, position, strict) {\n            if (strict === void 0) { strict = false; }\n            return this._worker(function (w) { return w.provideDocumentHighlights(resource, position, strict); });\n        };\n        HTMLMode.prototype._provideCompletionItems = function (resource, position) {\n            return this._worker(function (w) { return w.provideCompletionItems(resource, position); });\n        };\n        HTMLMode.LANG_CONFIG = {\n            wordPattern: abstractMode_1.createWordRegExp('#-?%'),\n            comments: {\n                blockComment: ['<!--', '-->']\n            },\n            brackets: [\n                ['<!--', '-->'],\n                ['<', '>'],\n            ],\n            __electricCharacterSupport: {\n                embeddedElectricCharacters: ['*', '}', ']', ')']\n            },\n            autoClosingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            surroundingPairs: [\n                { open: '\"', close: '\"' },\n                { open: '\\'', close: '\\'' }\n            ],\n            onEnterRules: [\n                {\n                    beforeText: new RegExp(\"<(?!(?:\" + htmlEmptyTagsShared_1.EMPTY_ELEMENTS.join('|') + \"))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n                    afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n                    action: { indentAction: modes.IndentAction.IndentOutdent }\n                },\n                {\n                    beforeText: new RegExp(\"<(?!(?:\" + htmlEmptyTagsShared_1.EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n                    action: { indentAction: modes.IndentAction.Indent }\n                }\n            ],\n        };\n        HTMLMode.$_configureWorker = compatWorkerService_1.CompatWorkerAttr(HTMLMode, HTMLMode.prototype._configureWorker);\n        HTMLMode.$_provideLinks = compatWorkerService_1.CompatWorkerAttr(HTMLMode, HTMLMode.prototype._provideLinks);\n        HTMLMode.$_provideDocumentRangeFormattingEdits = compatWorkerService_1.CompatWorkerAttr(HTMLMode, HTMLMode.prototype._provideDocumentRangeFormattingEdits);\n        HTMLMode.$_provideDocumentHighlights = compatWorkerService_1.CompatWorkerAttr(HTMLMode, HTMLMode.prototype._provideDocumentHighlights);\n        HTMLMode.$_provideCompletionItems = compatWorkerService_1.CompatWorkerAttr(HTMLMode, HTMLMode.prototype._provideCompletionItems);\n        HTMLMode = __decorate([\n            __param(1, instantiation_1.IInstantiationService),\n            __param(2, modeService_1.IModeService),\n            __param(3, compatWorkerService_1.ICompatWorkerService),\n            __param(4, workspace_1.IWorkspaceContextService),\n            __param(5, configuration_1.IConfigurationService)\n        ], HTMLMode);\n        return HTMLMode;\n    }(abstractMode_1.CompatMode));\n    exports.HTMLMode = HTMLMode;\n});\n\n}).call(this);\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport arrays = require('vs/base/common/arrays');\n\nexport const EMPTY_ELEMENTS:string[] = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\n\nexport function isEmptyElement(e: string) : boolean {\n\treturn arrays.binarySearch(EMPTY_ELEMENTS, e,(s1: string, s2: string) => s1.localeCompare(s2)) >= 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport strings = require('vs/base/common/strings');\n\nexport const DELIM_END = 'punctuation.definition.meta.tag.end.html';\nexport const DELIM_START = 'punctuation.definition.meta.tag.begin.html';\nexport const DELIM_ASSIGN = 'meta.tag.assign.html';\nexport const ATTRIB_NAME = 'entity.other.attribute-name.html';\nexport const ATTRIB_VALUE = 'string.html';\nexport const COMMENT = 'comment.html.content';\nexport const DELIM_COMMENT = 'comment.html';\nexport const DOCTYPE = 'entity.other.attribute-name.html';\nexport const DELIM_DOCTYPE = 'entity.name.tag.html';\n\nconst TAG_PREFIX = 'entity.name.tag.tag-';\n\nexport function isTag(tokenType: string) {\n\treturn strings.startsWith(tokenType, TAG_PREFIX);\n}\n\nexport function getTag(name: string) {\n\treturn TAG_PREFIX + name;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport winjs = require('vs/base/common/winjs.base');\nimport editorCommon = require('vs/editor/common/editorCommon');\nimport modes = require('vs/editor/common/modes');\nimport htmlWorker = require('vs/languages/html/common/htmlWorker');\nimport { CompatMode, createWordRegExp, ModeWorkerManager } from 'vs/editor/common/modes/abstractMode';\nimport { AbstractState } from 'vs/editor/common/modes/abstractState';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport * as htmlTokenTypes from 'vs/languages/html/common/htmlTokenTypes';\nimport {EMPTY_ELEMENTS} from 'vs/languages/html/common/htmlEmptyTagsShared';\nimport {LanguageConfigurationRegistry, LanguageConfiguration} from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport {TokenizationSupport, IEnteringNestedModeData, ILeavingNestedModeData, ITokenizationCustomization} from 'vs/editor/common/modes/supports/tokenizationSupport';\nimport {wireCancellationToken} from 'vs/base/common/async';\nimport {ICompatWorkerService, CompatWorkerAttr} from 'vs/editor/common/services/compatWorkerService';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {IHTMLConfiguration} from 'vs/languages/html/common/html.contribution';\n\nexport { htmlTokenTypes }; // export to be used by Razor. We are the main module, so Razor should get it from us.\nexport { EMPTY_ELEMENTS }; // export to be used by Razor. We are the main module, so Razor should get it from us.\n\nexport enum States {\n\tContent,\n\tOpeningStartTag,\n\tOpeningEndTag,\n\tWithinDoctype,\n\tWithinTag,\n\tWithinComment,\n\tWithinEmbeddedContent,\n\tAttributeName,\n\tAttributeValue\n}\n\n// list of elements that embed other content\nvar tagsEmbeddingContent:string[] = ['script', 'style'];\n\n\n\nexport class State extends AbstractState {\n\tpublic kind:States;\n\tpublic lastTagName:string;\n\tpublic lastAttributeName:string;\n\tpublic embeddedContentType:string;\n\tpublic attributeValueQuote:string;\n\tpublic attributeValueLength:number;\n\n\tconstructor(mode:modes.IMode, kind:States, lastTagName:string, lastAttributeName:string, embeddedContentType:string, attributeValueQuote:string, attributeValueLength:number) {\n\t\tsuper(mode);\n\t\tthis.kind = kind;\n\t\tthis.lastTagName = lastTagName;\n\t\tthis.lastAttributeName = lastAttributeName;\n\t\tthis.embeddedContentType = embeddedContentType;\n\t\tthis.attributeValueQuote = attributeValueQuote;\n\t\tthis.attributeValueLength = attributeValueLength;\n\t}\n\n\tstatic escapeTagName(s:string):string {\n\t\treturn htmlTokenTypes.getTag(s.replace(/[:_.]/g, '-'));\n\t}\n\n\tpublic makeClone():State {\n\t\treturn new State(this.getMode(), this.kind, this.lastTagName, this.lastAttributeName, this.embeddedContentType, this.attributeValueQuote, this.attributeValueLength);\n\t}\n\n\tpublic equals(other:modes.IState):boolean {\n\t\tif (other instanceof State) {\n\t\t\treturn (\n\t\t\t\tsuper.equals(other) &&\n\t\t\t\tthis.kind === other.kind &&\n\t\t\t\tthis.lastTagName === other.lastTagName &&\n\t\t\t\tthis.lastAttributeName === other.lastAttributeName &&\n\t\t\t\tthis.embeddedContentType === other.embeddedContentType &&\n\t\t\t\tthis.attributeValueQuote === other.attributeValueQuote &&\n\t\t\t\tthis.attributeValueLength === other.attributeValueLength\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate nextElementName(stream:modes.IStream):string {\n\t\treturn stream.advanceIfRegExp(/^[_:\\w][_:\\w-.\\d]*/).toLowerCase();\n\t}\n\n\tprivate nextAttributeName(stream:modes.IStream):string {\n\t\treturn stream.advanceIfRegExp(/^[^\\s\"'>/=\\x00-\\x0F\\x7F\\x80-\\x9F]*/).toLowerCase();\n\t}\n\n\tpublic tokenize(stream:modes.IStream) : modes.ITokenizationResult {\n\n\t\tswitch(this.kind){\n\t\t\tcase States.WithinComment:\n\t\t\t\tif (stream.advanceUntilString2('-->', false)) {\n\t\t\t\t\treturn { type: htmlTokenTypes.COMMENT};\n\n\t\t\t\t} else if(stream.advanceIfString2('-->')) {\n\t\t\t\t\tthis.kind = States.Content;\n\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_COMMENT, dontMergeWithPrev: true };\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase States.WithinDoctype:\n\t\t\t\tif (stream.advanceUntilString2('>', false)) {\n\t\t\t\t\treturn { type: htmlTokenTypes.DOCTYPE};\n\t\t\t\t} else if(stream.advanceIfString2('>')) {\n\t\t\t\t\tthis.kind = States.Content;\n\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_DOCTYPE, dontMergeWithPrev: true };\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase States.Content:\n\t\t\t\tif (stream.advanceIfCharCode2('<'.charCodeAt(0))) {\n\t\t\t\t\tif (!stream.eos() && stream.peek() === '!') {\n\t\t\t\t\t\tif (stream.advanceIfString2('!--')) {\n\t\t\t\t\t\t\tthis.kind = States.WithinComment;\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_COMMENT, dontMergeWithPrev: true };\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (stream.advanceIfStringCaseInsensitive2('!DOCTYPE')) {\n\t\t\t\t\t\t\tthis.kind = States.WithinDoctype;\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_DOCTYPE, dontMergeWithPrev: true };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (stream.advanceIfCharCode2('/'.charCodeAt(0))) {\n\t\t\t\t\t\tthis.kind = States.OpeningEndTag;\n\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_END, dontMergeWithPrev: true };\n\t\t\t\t\t}\n\t\t\t\t\tthis.kind = States.OpeningStartTag;\n\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase States.OpeningEndTag:\n\t\t\t\tvar tagName = this.nextElementName(stream);\n\t\t\t\tif (tagName.length > 0){\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: State.escapeTagName(tagName),\n\t\t\t\t\t};\n\n\t\t\t\t} else if (stream.advanceIfString2('>')) {\n\t\t\t\t\tthis.kind = States.Content;\n\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_END, dontMergeWithPrev: true };\n\n\t\t\t\t} else {\n\t\t\t\t\tstream.advanceUntilString2('>', false);\n\t\t\t\t\treturn { type: '' };\n\t\t\t\t}\n\n\t\t\tcase States.OpeningStartTag:\n\t\t\t\tthis.lastTagName = this.nextElementName(stream);\n\t\t\t\tif (this.lastTagName.length > 0) {\n\t\t\t\t\tthis.lastAttributeName = null;\n\t\t\t\t\tif ('script' === this.lastTagName || 'style' === this.lastTagName) {\n\t\t\t\t\t\tthis.lastAttributeName = null;\n\t\t\t\t\t\tthis.embeddedContentType = null;\n\t\t\t\t\t}\n\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: State.escapeTagName(this.lastTagName),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase States.WithinTag:\n\t\t\t\tif (stream.skipWhitespace2() || stream.eos()) {\n\t\t\t\t\tthis.lastAttributeName = ''; // remember that we have seen a whitespace\n\t\t\t\t\treturn { type: '' };\n\t\t\t\t} else {\n\t\t\t\t\tif (this.lastAttributeName === '') {\n\t\t\t\t\t\tvar name = this.nextAttributeName(stream);\n\t\t\t\t\t\tif (name.length > 0) {\n\t\t\t\t\t\t\tthis.lastAttributeName = name;\n\t\t\t\t\t\t\tthis.kind = States.AttributeName;\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_NAME };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (stream.advanceIfString2('/>')) {\n\t\t\t\t\t\tthis.kind = States.Content;\n\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (stream.advanceIfCharCode2('>'.charCodeAt(0))) {\n\t\t\t\t\t\tif (tagsEmbeddingContent.indexOf(this.lastTagName) !== -1) {\n\t\t\t\t\t\t\tthis.kind = States.WithinEmbeddedContent;\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.kind = States.Content;\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstream.next2();\n\t\t\t\t\t\treturn { type: '' };\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\tcase States.AttributeName:\n\t\t\t\tif (stream.skipWhitespace2() || stream.eos()){\n\t\t\t\t\treturn { type: '' };\n\t\t\t\t}\n\n\t\t\t\tif (stream.advanceIfCharCode2('='.charCodeAt(0))) {\n\t\t\t\t\tthis.kind = States.AttributeValue;\n\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_ASSIGN };\n\t\t\t\t} else {\n\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\tthis.lastAttributeName = '';\n\t\t\t\t\treturn this.tokenize(stream); // no advance yet - jump to WithinTag\n\t\t\t\t}\n\n\t\t\tcase States.AttributeValue:\n\t\t\t\tif (stream.eos()) {\n\t\t\t\t\treturn { type: '' };\n\t\t\t\t}\n\t\t\t\tif(stream.skipWhitespace2()) {\n\t\t\t\t\tif (this.attributeValueQuote === '\"' || this.attributeValueQuote === '\\'') {\n\t\t\t\t\t\t// We are inside the quotes of an attribute value\n\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_VALUE };\n\t\t\t\t\t}\n\t\t\t\t\treturn { type: '' };\n\t\t\t\t}\n\t\t\t\t// We are in a attribute value\n\t\t\t\tif (this.attributeValueQuote === '\"' || this.attributeValueQuote === '\\'') {\n\n\t\t\t\t\tif (this.attributeValueLength === 1 && ('script' === this.lastTagName || 'style' === this.lastTagName) && 'type' === this.lastAttributeName) {\n\t\t\t\t\t\tlet attributeValue = stream.advanceUntilString(this.attributeValueQuote, true);\n\t\t\t\t\t\tif (attributeValue.length > 0) {\n\t\t\t\t\t\t\tthis.embeddedContentType = this.unquote(attributeValue);\n\t\t\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\t\t\tthis.attributeValueLength = 0;\n\t\t\t\t\t\t\tthis.attributeValueQuote = '';\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_VALUE };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (stream.advanceIfCharCode2(this.attributeValueQuote.charCodeAt(0))) {\n\t\t\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\t\t\tthis.attributeValueLength = 0;\n\t\t\t\t\t\t\tthis.attributeValueQuote = '';\n\t\t\t\t\t\t\tthis.lastAttributeName = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstream.next();\n\t\t\t\t\t\t\tthis.attributeValueLength++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_VALUE };\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet attributeValue = stream.advanceIfRegExp(/^[^\\s\"'`=<>]+/);\n\t\t\t\t\tif (attributeValue.length > 0) {\n\t\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\t\tthis.lastAttributeName = null;\n\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_VALUE };\n\t\t\t\t\t}\n\t\t\t\t\tvar ch = stream.peek();\n\t\t\t\t\tif (ch === '\\'' || ch === '\"') {\n\t\t\t\t\t\tthis.attributeValueQuote = ch;\n\t\t\t\t\t\tthis.attributeValueLength = 1;\n\t\t\t\t\t\tstream.next2();\n\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_VALUE };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\t\tthis.lastAttributeName = null;\n\t\t\t\t\t\treturn this.tokenize(stream); // no advance yet - jump to WithinTag\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\n\t\tstream.next2();\n\t\tthis.kind = States.Content;\n\t\treturn { type: '' };\n\t}\n\n\tprivate unquote(value:string):string {\n\t\tvar start = 0;\n\t\tvar end = value.length;\n\t\tif ('\"' === value[0]) {\n\t\t\tstart++;\n\t\t}\n\t\tif ('\"' === value[end - 1]) {\n\t\t\tend--;\n\t\t}\n\t\treturn value.substring(start, end);\n\t}\n}\n\nexport class HTMLMode<W extends htmlWorker.HTMLWorker> extends CompatMode implements ITokenizationCustomization {\n\n\tpublic static LANG_CONFIG:LanguageConfiguration = {\n\t\twordPattern: createWordRegExp('#-?%'),\n\n\t\tcomments: {\n\t\t\tblockComment: ['<!--', '-->']\n\t\t},\n\n\t\tbrackets: [\n\t\t\t['<!--', '-->'],\n\t\t\t['<', '>'],\n\t\t],\n\n\t\t__electricCharacterSupport: {\n\t\t\tembeddedElectricCharacters: ['*', '}', ']', ')']\n\t\t},\n\n\t\tautoClosingPairs: [\n\t\t\t{ open: '{', close: '}' },\n\t\t\t{ open: '[', close: ']' },\n\t\t\t{ open: '(', close: ')' },\n\t\t\t{ open: '\"', close: '\"' },\n\t\t\t{ open: '\\'', close: '\\'' }\n\t\t],\n\n\t\tsurroundingPairs: [\n\t\t\t{ open: '\"', close: '\"' },\n\t\t\t{ open: '\\'', close: '\\'' }\n\t\t],\n\n\t\tonEnterRules: [\n\t\t\t{\n\t\t\t\tbeforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join('|')}))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, 'i'),\n\t\t\t\tafterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n\t\t\t\taction: { indentAction: modes.IndentAction.IndentOutdent }\n\t\t\t},\n\t\t\t{\n\t\t\t\tbeforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join('|')}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, 'i'),\n\t\t\t\taction: { indentAction: modes.IndentAction.Indent }\n\t\t\t}\n\t\t],\n\t};\n\n\tpublic tokenizationSupport: modes.ITokenizationSupport;\n\n\tprivate modeService:IModeService;\n\tprivate _modeWorkerManager: ModeWorkerManager<W>;\n\n\tconstructor(\n\t\tdescriptor:modes.IModeDescriptor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModeService modeService: IModeService,\n\t\t@ICompatWorkerService compatWorkerService: ICompatWorkerService,\n\t\t@IWorkspaceContextService private workspaceContextService: IWorkspaceContextService,\n\t\t@IConfigurationService private configurationService: IConfigurationService\n\t) {\n\t\tsuper(descriptor.id, compatWorkerService);\n\t\tthis._modeWorkerManager = this._createModeWorkerManager(descriptor, instantiationService);\n\n\t\tthis.modeService = modeService;\n\n\t\tthis.tokenizationSupport = new TokenizationSupport(this, this, true);\n\n\t\tif (this.compatWorkerService && this.compatWorkerService.isInMainThread) {\n\t\t\tlet updateConfiguration = () => {\n\t\t\t\tlet opts = configurationService.getConfiguration<IHTMLConfiguration>('html');\n\t\t\t\tthis._configureWorker(opts);\n\t\t\t};\n\t\t\tconfigurationService.onDidUpdateConfiguration((e) => updateConfiguration());\n\t\t\tupdateConfiguration();\n\t\t}\n\n\t\tthis._registerSupports();\n\t}\n\n\tprotected _registerSupports(): void {\n\t\tif (this.getId() !== 'html') {\n\t\t\tthrow new Error('This method must be overwritten!');\n\t\t}\n\n\t\tmodes.SuggestRegistry.register(this.getId(), {\n\t\t\ttriggerCharacters: ['.', ':', '<', '\"', '=', '/'],\n\t\t\tprovideCompletionItems: (model, position, token): Thenable<modes.ISuggestResult> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideCompletionItems(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DocumentHighlightProviderRegistry.register(this.getId(), {\n\t\t\tprovideDocumentHighlights: (model, position, token): Thenable<modes.DocumentHighlight[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentHighlights(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DocumentRangeFormattingEditProviderRegistry.register(this.getId(), {\n\t\t\tprovideDocumentRangeFormattingEdits: (model, range, options, token): Thenable<editorCommon.ISingleEditOperation[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentRangeFormattingEdits(model.uri, range, options));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.LinkProviderRegistry.register(this.getId(), {\n\t\t\tprovideLinks: (model, token): Thenable<modes.ILink[]> => {\n\t\t\t\treturn wireCancellationToken(token, this.provideLinks(model.uri));\n\t\t\t}\n\t\t}, true);\n\n\t\tLanguageConfigurationRegistry.register(this.getId(), HTMLMode.LANG_CONFIG);\n\t}\n\n\tprotected _createModeWorkerManager(descriptor:modes.IModeDescriptor, instantiationService: IInstantiationService): ModeWorkerManager<W> {\n\t\treturn new ModeWorkerManager<W>(descriptor, 'vs/languages/html/common/htmlWorker', 'HTMLWorker', null, instantiationService);\n\t}\n\n\tprivate _worker<T>(runner:(worker:W)=>winjs.TPromise<T>): winjs.TPromise<T> {\n\t\treturn this._modeWorkerManager.worker(runner);\n\t}\n\n\t// TokenizationSupport\n\n\tpublic getInitialState():modes.IState {\n\t\treturn new State(this, States.Content, '', '', '', '', 0);\n\t}\n\n\tpublic enterNestedMode(state:modes.IState):boolean {\n\t\treturn state instanceof State && (<State>state).kind === States.WithinEmbeddedContent;\n\t}\n\n\tpublic getNestedMode(state:modes.IState): IEnteringNestedModeData {\n\t\tvar result:modes.IMode = null;\n\t\tvar htmlState:State = <State>state;\n\t\tvar missingModePromise: winjs.Promise = null;\n\n\t\tif (htmlState.embeddedContentType !== null) {\n\t\t\tif (this.modeService.isRegisteredMode(htmlState.embeddedContentType)) {\n\t\t\t\tresult = this.modeService.getMode(htmlState.embeddedContentType);\n\t\t\t\tif (!result) {\n\t\t\t\t\tmissingModePromise = this.modeService.getOrCreateMode(htmlState.embeddedContentType);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar mimeType:string = null;\n\t\t\tif ('script' === htmlState.lastTagName) {\n\t\t\t\tmimeType = 'text/javascript';\n\t\t\t} else if ('style' === htmlState.lastTagName) {\n\t\t\t\tmimeType = 'text/css';\n\t\t\t} else {\n\t\t\t\tmimeType = 'text/plain';\n\t\t\t}\n\t\t\tresult = this.modeService.getMode(mimeType);\n\t\t}\n\t\tif (result === null) {\n\t\t\tresult = this.modeService.getMode('text/plain');\n\t\t}\n\t\treturn {\n\t\t\tmode: result,\n\t\t\tmissingModePromise: missingModePromise\n\t\t};\n\t}\n\n\tpublic getLeavingNestedModeData(line:string, state:modes.IState):ILeavingNestedModeData {\n\t\tvar tagName = (<State>state).lastTagName;\n\t\tvar regexp = new RegExp('<\\\\/' + tagName + '\\\\s*>', 'i');\n\t\tvar match:any = regexp.exec(line);\n\t\tif (match !== null) {\n\t\t\treturn {\n\t\t\t\tnestedModeBuffer: line.substring(0, match.index),\n\t\t\t\tbufferAfterNestedMode: line.substring(match.index),\n\t\t\t\tstateAfterNestedMode: new State(this, States.Content, '', '', '', '', 0)\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tstatic $_configureWorker = CompatWorkerAttr(HTMLMode, HTMLMode.prototype._configureWorker);\n\tprivate _configureWorker(options:any): winjs.TPromise<void> {\n\t\treturn this._worker((w) => w._doConfigure(options));\n\t}\n\n\tprotected provideLinks(resource:URI):winjs.TPromise<modes.ILink[]> {\n\t\tlet workspace = this.workspaceContextService.getWorkspace();\n\t\tlet workspaceResource = workspace ? workspace.resource : null;\n\t\treturn this._provideLinks(resource, workspaceResource);\n\t}\n\n\tstatic $_provideLinks = CompatWorkerAttr(HTMLMode, HTMLMode.prototype._provideLinks);\n\tprivate _provideLinks(resource:URI, workspaceResource:URI):winjs.TPromise<modes.ILink[]> {\n\t\treturn this._worker((w) => w.provideLinks(resource, workspaceResource));\n\t}\n\n\tstatic $_provideDocumentRangeFormattingEdits = CompatWorkerAttr(HTMLMode, HTMLMode.prototype._provideDocumentRangeFormattingEdits);\n\tprivate _provideDocumentRangeFormattingEdits(resource:URI, range:editorCommon.IRange, options:modes.FormattingOptions):winjs.TPromise<editorCommon.ISingleEditOperation[]> {\n\t\treturn this._worker((w) => w.provideDocumentRangeFormattingEdits(resource, range, options));\n\t}\n\n\tstatic $_provideDocumentHighlights = CompatWorkerAttr(HTMLMode, HTMLMode.prototype._provideDocumentHighlights);\n\tprotected _provideDocumentHighlights(resource:URI, position:editorCommon.IPosition, strict:boolean = false): winjs.TPromise<modes.DocumentHighlight[]> {\n\t\treturn this._worker((w) => w.provideDocumentHighlights(resource, position, strict));\n\t}\n\n\tstatic $_provideCompletionItems = CompatWorkerAttr(HTMLMode, HTMLMode.prototype._provideCompletionItems);\n\tprotected _provideCompletionItems(resource:URI, position:editorCommon.IPosition):winjs.TPromise<modes.ISuggestResult> {\n\t\treturn this._worker((w) => w.provideCompletionItems(resource, position));\n\t}\n\n}\n"]}